<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="ru">
  <compounddef id="eosio_8wrap_8cpp" kind="file" language="C++">
    <compoundname>eosio.wrap.cpp</compoundname>
    <includes refid="eosio_8wrap_8hpp" local="no">eosio.wrap/eosio.wrap.hpp</includes>
    <incdepgraph>
      <node id="2">
        <label>eosio.wrap/eosio.wrap.hpp</label>
        <link refid="eosio_8wrap_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>system/contracts/eosio.wrap/src/eosio.wrap.cpp</label>
        <link refid="eosio_8wrap_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>eosio/eosio.hpp</label>
      </node>
      <node id="4">
        <label>eosio/ignore.hpp</label>
      </node>
      <node id="5">
        <label>eosio/transaction.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceeosio">eosio</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="eosio_8wrap_8hpp" kindref="compound">eosio.wrap/eosio.wrap.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceeosio" kindref="compound">eosio</ref><sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1wrap_1a62a9871067de866d265fd69a5a4eac60" kindref="member">wrap::exec</ref>(<sp/>ignore&lt;name&gt;,<sp/>ignore&lt;transaction&gt;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/>require_auth(<sp/>get_self()<sp/>);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/>name<sp/>executer;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/>_ds<sp/>&gt;&gt;<sp/>executer;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/>require_auth(<sp/>executer<sp/>);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/>transaction_header<sp/>trx_header;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;action&gt;<sp/>context_free_actions;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;action&gt;<sp/>actions;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/>_ds<sp/>&gt;&gt;<sp/>trx_header;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/>_ds<sp/>&gt;&gt;<sp/>context_free_actions;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/>check(<sp/>context_free_actions.empty(),<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>allowed<sp/>to<sp/>`exec`<sp/>a<sp/>transaction<sp/>with<sp/>context-free<sp/>actions&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/>_ds<sp/>&gt;&gt;<sp/>actions;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>act<sp/>:<sp/>actions)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>act.send();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">}<sp/></highlight></codeline>
    </programlisting>
    <location file="system/contracts/eosio.wrap/src/eosio.wrap.cpp"/>
  </compounddef>
</doxygen>
