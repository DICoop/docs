<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="ru">
  <compounddef id="structaccount" kind="struct" language="C++" prot="public">
    <compoundname>account</compoundname>
    <includes refid="accounts_8hpp" local="no">accounts.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structaccount_1a6ba28d058e936aeecc71303af6f543c4" prot="public" static="no" mutable="no">
        <type>eosio::name</type>
        <definition>eosio::name account::username</definition>
        <argsstring></argsstring>
        <name>username</name>
        <qualifiedname>account::username</qualifiedname>
        <briefdescription>
<para>Имя аккаунта гостя. Имя пользователя в системе. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="40" column="15" bodyfile="common/accounts.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structaccount_1ad816d8356a21e2b77c6d4f35b1b4ae3a" prot="public" static="no" mutable="no">
        <type>eosio::name</type>
        <definition>eosio::name account::referer</definition>
        <argsstring></argsstring>
        <name>referer</name>
        <qualifiedname>account::referer</qualifiedname>
        <briefdescription>
<para>Имя аккаунта, который был реферером при регистрации. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="41" column="15" bodyfile="common/accounts.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structaccount_1a753aadd7880d6e4a20a4de3da9b415bf" prot="public" static="no" mutable="no">
        <type>eosio::name</type>
        <definition>eosio::name account::registrator</definition>
        <argsstring></argsstring>
        <name>registrator</name>
        <qualifiedname>account::registrator</qualifiedname>
        <briefdescription>
<para>Имя аккаунта регистратора, который создал этот аккаунт. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="42" column="15" bodyfile="common/accounts.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structaccount_1a2e46c559f699df03e1820bf710e778fd" prot="public" static="no" mutable="no">
        <type>eosio::name</type>
        <definition>eosio::name account::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>account::type</qualifiedname>
        <briefdescription>
<para>Тип аккаунта: user (пользователь) | org (организация). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="43" column="15" bodyfile="common/accounts.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structaccount_1a8a3bb008be845158f23da8984f32d1b4" prot="public" static="no" mutable="no">
        <type>eosio::name</type>
        <definition>eosio::name account::status</definition>
        <argsstring></argsstring>
        <name>status</name>
        <qualifiedname>account::status</qualifiedname>
        <briefdescription>
<para>Статус аккаунта </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="44" column="15" bodyfile="common/accounts.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structaccount_1ac0580323930615035d7abe2e6cef4d1e" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string account::meta</definition>
        <argsstring></argsstring>
        <name>meta</name>
        <qualifiedname>account::meta</qualifiedname>
        <briefdescription>
<para>Дополнительная мета-информация о аккаунте. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="45" column="15" bodyfile="common/accounts.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structaccount_1a4945411679ccea1992bf4ea47f468862" prot="public" static="no" mutable="no">
        <type>std::vector&lt; name &gt;</type>
        <definition>std::vector&lt;name&gt; account::storages</definition>
        <argsstring></argsstring>
        <name>storages</name>
        <qualifiedname>account::storages</qualifiedname>
        <briefdescription>
<para>Хранилища персональных данных и идентификаторы данных в них. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="47" column="15" bodyfile="common/accounts.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structaccount_1ae7df3e4e5504129a4e0275b4a7264614" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structverification" kindref="compound">verification</ref> &gt;</type>
        <definition>std::vector&lt;verification&gt; account::verifications</definition>
        <argsstring></argsstring>
        <name>verifications</name>
        <qualifiedname>account::verifications</qualifiedname>
        <briefdescription>
<para>Информация о верификации пользователя. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="48" column="15" bodyfile="common/accounts.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structaccount_1a32c91ba498b674bee1658b1c5eaf0dc9" prot="public" static="no" mutable="no">
        <type>eosio::time_point_sec</type>
        <definition>eosio::time_point_sec account::registered_at</definition>
        <argsstring></argsstring>
        <name>registered_at</name>
        <qualifiedname>account::registered_at</qualifiedname>
        <briefdescription>
<para>Время регистрации аккаунта. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="50" column="25" bodyfile="common/accounts.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structaccount_1a69acdb708adce988c16e5c4e46d631d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t account::primary_key</definition>
        <argsstring>() const</argsstring>
        <name>primary_key</name>
        <qualifiedname>account::primary_key</qualifiedname>
        <briefdescription>
<para>Возвращает первичный ключ учетной записи аккаунта. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint64_t - первичный ключ, равный значению имени аккаунта. return username - primary_key </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="56" column="12" bodyfile="common/accounts.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="structaccount_1ae83306a3d2a29ab942504ebb68e42d71" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t account::by_referer</definition>
        <argsstring>() const</argsstring>
        <name>by_referer</name>
        <qualifiedname>account::by_referer</qualifiedname>
        <briefdescription>
<para>Возвращает ключ по рефереру. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint64_t - ключ, равный значению имени реферера. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="64" column="12" bodyfile="common/accounts.hpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structaccount_1ab9e111ab46596e20d058891f9d24efac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t account::by_type</definition>
        <argsstring>() const</argsstring>
        <name>by_type</name>
        <qualifiedname>account::by_type</qualifiedname>
        <briefdescription>
<para>Возвращает ключ по типу аккаунта. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint64_t - ключ, равный значению типа аккаунта. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="70" column="12" bodyfile="common/accounts.hpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structaccount_1a75dc254d23308647a184e11c19b3edb8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t account::by_status</definition>
        <argsstring>() const</argsstring>
        <name>by_status</name>
        <qualifiedname>account::by_status</qualifiedname>
        <briefdescription>
<para>Возвращает ключ по статусу аккаунта. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint64_t - ключ, равный значению статуса аккаунта. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="76" column="12" bodyfile="common/accounts.hpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structaccount_1ac4b046f1d8181edd9d4ffef1cc0b35c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t account::by_registr</definition>
        <argsstring>() const</argsstring>
        <name>by_registr</name>
        <qualifiedname>account::by_registr</qualifiedname>
        <briefdescription>
<para>Возвращает ключ по регистратору. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint64_t - ключ, равный значению имени регистратора. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="82" column="12" bodyfile="common/accounts.hpp" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structaccount_1a3d7a160d5b2d34e3e5273fd1dda9cba7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool account::is_active</definition>
        <argsstring>() const</argsstring>
        <name>is_active</name>
        <qualifiedname>account::is_active</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="84" column="8" bodyfile="common/accounts.hpp" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="structaccount_1a688414885704233ae57b4093f7c60dd5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t account::by_registered_at</definition>
        <argsstring>() const</argsstring>
        <name>by_registered_at</name>
        <qualifiedname>account::by_registered_at</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="88" column="12" bodyfile="common/accounts.hpp" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structaccount_1a0b9b1c94522c856703a6f6fab6b20f55" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool account::is_verified</definition>
        <argsstring>() const</argsstring>
        <name>is_verified</name>
        <qualifiedname>account::is_verified</qualifiedname>
        <briefdescription>
<para>Проверяет, верифицирована ли организация. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool - true, если организация верифицирована, иначе false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="96" column="8" bodyfile="common/accounts.hpp" bodystart="96" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="structaccount_1a89d9022a82d8767baa0cb56347cc1ac6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t account::is_verified_index</definition>
        <argsstring>() const</argsstring>
        <name>is_verified_index</name>
        <qualifiedname>account::is_verified_index</qualifiedname>
        <briefdescription>
<para>Возвращает индекс для определения, является ли организация верифицированной. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint64_t - ключ, равный 1, если организация верифицирована, иначе 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="110" column="12" bodyfile="common/accounts.hpp" bodystart="110" bodyend="117"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Структура, представляющая учетные записи аккаунтов. </para>
    </briefdescription>
    <detaileddescription>
<para>Эта структура хранит информацию о пользователях аккаунта и их статусе, репутации и других параметрах. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>account</label>
        <link refid="structaccount"/>
        <childnode refid="2" relation="usage">
          <edgelabel>referer</edgelabel>
          <edgelabel>registrator</edgelabel>
          <edgelabel>status</edgelabel>
          <edgelabel>type</edgelabel>
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>meta</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>registered_at</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>name</label>
      </node>
      <node id="4">
        <label>time_point_sec</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
    </collaborationgraph>
    <location file="common/accounts.hpp" line="39" column="1" bodyfile="common/accounts.hpp" bodystart="39" bodyend="118"/>
    <listofallmembers>
      <member refid="structaccount_1ae83306a3d2a29ab942504ebb68e42d71" prot="public" virt="non-virtual"><scope>account</scope><name>by_referer</name></member>
      <member refid="structaccount_1a688414885704233ae57b4093f7c60dd5" prot="public" virt="non-virtual"><scope>account</scope><name>by_registered_at</name></member>
      <member refid="structaccount_1ac4b046f1d8181edd9d4ffef1cc0b35c2" prot="public" virt="non-virtual"><scope>account</scope><name>by_registr</name></member>
      <member refid="structaccount_1a75dc254d23308647a184e11c19b3edb8" prot="public" virt="non-virtual"><scope>account</scope><name>by_status</name></member>
      <member refid="structaccount_1ab9e111ab46596e20d058891f9d24efac" prot="public" virt="non-virtual"><scope>account</scope><name>by_type</name></member>
      <member refid="structaccount_1a3d7a160d5b2d34e3e5273fd1dda9cba7" prot="public" virt="non-virtual"><scope>account</scope><name>is_active</name></member>
      <member refid="structaccount_1a0b9b1c94522c856703a6f6fab6b20f55" prot="public" virt="non-virtual"><scope>account</scope><name>is_verified</name></member>
      <member refid="structaccount_1a89d9022a82d8767baa0cb56347cc1ac6" prot="public" virt="non-virtual"><scope>account</scope><name>is_verified_index</name></member>
      <member refid="structaccount_1ac0580323930615035d7abe2e6cef4d1e" prot="public" virt="non-virtual"><scope>account</scope><name>meta</name></member>
      <member refid="structaccount_1a69acdb708adce988c16e5c4e46d631d1" prot="public" virt="non-virtual"><scope>account</scope><name>primary_key</name></member>
      <member refid="structaccount_1ad816d8356a21e2b77c6d4f35b1b4ae3a" prot="public" virt="non-virtual"><scope>account</scope><name>referer</name></member>
      <member refid="structaccount_1a32c91ba498b674bee1658b1c5eaf0dc9" prot="public" virt="non-virtual"><scope>account</scope><name>registered_at</name></member>
      <member refid="structaccount_1a753aadd7880d6e4a20a4de3da9b415bf" prot="public" virt="non-virtual"><scope>account</scope><name>registrator</name></member>
      <member refid="structaccount_1a8a3bb008be845158f23da8984f32d1b4" prot="public" virt="non-virtual"><scope>account</scope><name>status</name></member>
      <member refid="structaccount_1a4945411679ccea1992bf4ea47f468862" prot="public" virt="non-virtual"><scope>account</scope><name>storages</name></member>
      <member refid="structaccount_1a2e46c559f699df03e1820bf710e778fd" prot="public" virt="non-virtual"><scope>account</scope><name>type</name></member>
      <member refid="structaccount_1a6ba28d058e936aeecc71303af6f543c4" prot="public" virt="non-virtual"><scope>account</scope><name>username</name></member>
      <member refid="structaccount_1ae7df3e4e5504129a4e0275b4a7264614" prot="public" virt="non-virtual"><scope>account</scope><name>verifications</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
