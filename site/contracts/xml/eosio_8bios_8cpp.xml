<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="ru">
  <compounddef id="eosio_8bios_8cpp" kind="file" language="C++">
    <compoundname>eosio.bios.cpp</compoundname>
    <includes refid="eosio_8bios_8hpp" local="no">eosio.bios/eosio.bios.hpp</includes>
    <incdepgraph>
      <node id="2">
        <label>eosio.bios/eosio.bios.hpp</label>
        <link refid="eosio_8bios_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>system/contracts/eosio.bios/src/eosio.bios.cpp</label>
        <link refid="eosio_8bios_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>eosio/action.hpp</label>
      </node>
      <node id="4">
        <label>eosio/crypto.hpp</label>
      </node>
      <node id="5">
        <label>eosio/eosio.hpp</label>
      </node>
      <node id="6">
        <label>eosio/fixed_bytes.hpp</label>
      </node>
      <node id="7">
        <label>eosio/privileged.hpp</label>
      </node>
      <node id="8">
        <label>eosio/producer_schedule.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceeosiobios">eosiobios</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="eosio_8bios_8hpp" kindref="compound">eosio.bios/eosio.bios.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceeosiobios" kindref="compound">eosiobios</ref><sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosiobios_1_1bios_1a0663bbf0563a9ad67960ccbae6222911" kindref="member">bios::setabi</ref>(<sp/>name<sp/><ref refid="structaccount" kindref="compound">account</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;char&gt;&amp;<sp/>abi<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosiobios_1_1bios_1a2e27cd48a27fdf2f13e7e49c236effab" kindref="member">abi_hash_table</ref><sp/>table(get_self(),<sp/>get_self().value);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>itr<sp/>=<sp/>table.find(<sp/><ref refid="structaccount" kindref="compound">account</ref>.value<sp/>);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>itr<sp/>==<sp/>table.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table.emplace(<sp/><ref refid="structaccount" kindref="compound">account</ref>,<sp/>[&amp;](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>row<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row.owner<sp/>=<sp/><ref refid="structaccount" kindref="compound">account</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row.hash<sp/><sp/>=<sp/>eosio::sha256(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(abi.data()),<sp/>abi.size());</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table.modify(<sp/>itr,<sp/>eosio::same_payer,<sp/>[&amp;](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>row<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row.hash<sp/>=<sp/>eosio::sha256(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(abi.data()),<sp/>abi.size());</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosiobios_1_1bios_1a317235869c18964d6d9425eefa533098" kindref="member">bios::onerror</ref>(<sp/>ignore&lt;uint128_t&gt;,<sp/>ignore&lt;std::vector&lt;char&gt;&gt;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/>check(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;the<sp/>onerror<sp/>action<sp/>cannot<sp/>be<sp/>called<sp/>directly&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosiobios_1_1bios_1ae5de33639414c0c00e090a2ca7418c69" kindref="member">bios::setpriv</ref>(<sp/>name<sp/><ref refid="structaccount" kindref="compound">account</ref>,<sp/>uint8_t<sp/>is_priv<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/>require_auth(<sp/>get_self()<sp/>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/>set_privileged(<sp/><ref refid="structaccount" kindref="compound">account</ref>,<sp/>is_priv<sp/>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosiobios_1_1bios_1ac7a64a2f4cf193136957f5be5aeca85b" kindref="member">bios::setalimits</ref>(<sp/>name<sp/><ref refid="structaccount" kindref="compound">account</ref>,<sp/>int64_t<sp/>ram_bytes,<sp/>int64_t<sp/>net_weight,<sp/>int64_t<sp/>cpu_weight<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/>require_auth(<sp/>get_self()<sp/>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/>set_resource_limits(<sp/><ref refid="structaccount" kindref="compound">account</ref>,<sp/>ram_bytes,<sp/>net_weight,<sp/>cpu_weight<sp/>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosiobios_1_1bios_1aac48a883107aeacbd1b567a2e3fbad12" kindref="member">bios::setprods</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;eosio::producer_authority&gt;&amp;<sp/>schedule<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/>require_auth(<sp/>get_self()<sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/>set_proposed_producers(<sp/>schedule<sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosiobios_1_1bios_1ad4047afa380b9eda3ecc232d89bf05a7" kindref="member">bios::setparams</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eosio::blockchain_parameters&amp;<sp/>params<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/>require_auth(<sp/>get_self()<sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/>set_blockchain_parameters(<sp/>params<sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosiobios_1_1bios_1abfefcfb3d6b2b221052a6e017de18c56" kindref="member">bios::reqauth</ref>(<sp/>name<sp/>from<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/>require_auth(<sp/>from<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosiobios_1_1bios_1ad642c358d927b33340654d59f9dd0df9" kindref="member">bios::activate</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eosio::checksum256&amp;<sp/>feature_digest<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>require_auth(<sp/>get_self()<sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/>preactivate_feature(<sp/>feature_digest<sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosiobios_1_1bios_1a3f7b5f24b41381cde54901b02ee1793d" kindref="member">bios::reqactivated</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eosio::checksum256&amp;<sp/>feature_digest<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/>check(<sp/>is_feature_activated(<sp/>feature_digest<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;protocol<sp/>feature<sp/>is<sp/>not<sp/>activated&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="system/contracts/eosio.bios/src/eosio.bios.cpp"/>
  </compounddef>
</doxygen>
