<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="ru">
  <compounddef id="classmarketplace" kind="class" language="C++" prot="public">
    <compoundname>marketplace</compoundname>
    <basecompoundref prot="public" virt="non-virtual">eosio::contract</basecompoundref>
    <includes refid="marketplace_8hpp" local="no">marketplace.hpp</includes>
    <innerclass refid="structmarketplace_1_1balances" prot="public">marketplace::balances</innerclass>
    <innerclass refid="structmarketplace_1_1counts" prot="public">marketplace::counts</innerclass>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmarketplace_1aa7c0193de8af681a5e36bdc3fb75d595" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>marketplace::marketplace</definition>
        <argsstring>(eosio::name receiver, eosio::name code, eosio::datastream&lt; const char * &gt; ds)</argsstring>
        <name>marketplace</name>
        <qualifiedname>marketplace::marketplace</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <param>
          <type>eosio::datastream&lt; const char * &gt;</type>
          <declname>ds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="36" column="3" bodyfile="marketplace/marketplace.hpp" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classmarketplace_1a4a1a5d78b2606e4883239fc79afdfb40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::apply</definition>
        <argsstring>(uint64_t receiver, uint64_t code, uint64_t action)</argsstring>
        <name>apply</name>
        <qualifiedname>marketplace::apply</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>code</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="41" column="8"/>
      </memberdef>
      <memberdef kind="function" id="group__public__actions_1ga6d78c0a4a104abcae663754dc08d8da8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::newid</definition>
        <argsstring>(uint64_t id, eosio::name type)</argsstring>
        <name>newid</name>
        <qualifiedname>marketplace::newid</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Пустой метод регистрации нового идентификатора</para>
<para>Этот метод используется для возврата информации из контракта. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>идентификатор </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>тип идентификатора </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="46" column="9" bodyfile="marketplace/marketplace.cpp" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="group__public__actions_1ga006a09b0804cd50f3ec8aef8bd280fff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::authorize</definition>
        <argsstring>(eosio::name coopname, uint64_t exchange_id, uint64_t contribution_product_decision_id, document contribution_product_authorization, uint64_t return_product_decision_id, document return_product_authorization)</argsstring>
        <name>authorize</name>
        <qualifiedname>marketplace::authorize</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>coopname</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>exchange_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>contribution_product_decision_id</declname>
        </param>
        <param>
          <type><ref refid="structdocument" kindref="compound">document</ref></type>
          <declname>contribution_product_authorization</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>return_product_decision_id</declname>
        </param>
        <param>
          <type><ref refid="structdocument" kindref="compound">document</ref></type>
          <declname>return_product_authorization</declname>
        </param>
        <briefdescription>
<para>Авторизация обмена советом. </para>
        </briefdescription>
        <detaileddescription>
<para>Метод используется для подтверждения согласия совета на заявленный обмен. Обычно этот метод вызывается после прохождения определенного процесса голосования или принятия решения советом. Авторизованный обмен считается утвержденным и может быть выполнен.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>exchange_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Идентификатор заявки на обмен, которую следует авторизовать.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Авторизация требуется от аккаунта: <computeroutput>_soviet</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="49" column="9" bodyfile="marketplace/src/soviet.cpp" bodystart="13" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="group__public__actions_1ga74c30d5573748d4cf4c5a660568b2a60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::offer</definition>
        <argsstring>(const exchange_params &amp;params)</argsstring>
        <name>offer</name>
        <qualifiedname>marketplace::offer</qualifiedname>
        <param>
          <type>const <ref refid="structexchange__params" kindref="compound">exchange_params</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Создать заявку на имущественный паевой взнос. </para>
        </briefdescription>
        <detaileddescription>
<para>Данный метод позволяет пользователю создать заявку на имущественный паевой взнос в системе.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Параметры для создания заявки на имущественный паевой взнос.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Авторизация требуется от аккаунта: <computeroutput>params.username</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="52" column="9" bodyfile="marketplace/src/change.cpp" bodystart="50" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="group__public__actions_1gab643c84304eeca5b09587fa01ee7a5eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::order</definition>
        <argsstring>(const exchange_params &amp;params)</argsstring>
        <name>order</name>
        <qualifiedname>marketplace::order</qualifiedname>
        <param>
          <type>const <ref refid="structexchange__params" kindref="compound">exchange_params</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Создать заявку на денежный паевой взнос. </para>
        </briefdescription>
        <detaileddescription>
<para>Данный метод позволяет пользователю создать заявку на денежный паевой взнос в системе.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Параметры для создания заявки на денежный паевой взнос.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Авторизация требуется от аккаунта: <computeroutput>params.username</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="53" column="9" bodyfile="marketplace/src/change.cpp" bodystart="33" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="group__public__actions_1ga279155e46493ac89cf8d98249b239128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::accept</definition>
        <argsstring>(eosio::name coopname, eosio::name username, uint64_t exchange_id, document document)</argsstring>
        <name>accept</name>
        <qualifiedname>marketplace::accept</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>coopname</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>exchange_id</declname>
        </param>
        <param>
          <type><ref refid="structdocument" kindref="compound">document</ref></type>
          <declname>document</declname>
        </param>
        <briefdescription>
<para>Подтверждение готовности выполнить заявку. </para>
        </briefdescription>
        <detaileddescription>
<para>Данный метод позволяет пользователю, который получил предложение по своей заявке, подтвердить свою готовность его принять и выполнить. При этом формируется пакет документов, который отправляется в совет на утверждение.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя пользователя, подтверждающего готовность выполнить предложение. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exchange_id</parametername>
</parameternamelist>
<parameterdescription>
<para>ID предложения, которое следует подтвердить.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Авторизация требуется от аккаунта: <computeroutput>username</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="61" column="9" bodyfile="marketplace/src/change.cpp" bodystart="308" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="group__public__actions_1ga632cf8b33c10b9602cb694f4cb036049" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::decline</definition>
        <argsstring>(eosio::name coopname, eosio::name username, uint64_t exchange_id, std::string meta)</argsstring>
        <name>decline</name>
        <qualifiedname>marketplace::decline</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>coopname</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>exchange_id</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Отказ от предложения. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод позволяет пользователю отклонить предложение, представленное к его заявке. Выполняются следующие проверки:<itemizedlist>
<listitem><para>Существование предложения с указанным ID.</para>
</listitem><listitem><para>Существование основной заявки.</para>
</listitem><listitem><para>Предложение находится в статусе &quot;ожидание&quot;.</para>
</listitem></itemizedlist>
</para>
<para>Если отклонено предложение к заявке типа &quot;order&quot;, осуществляется возврат токенов пользователю, которому были заблокированы токены при создании предложения.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя пользователя, отклоняющего предложение. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exchange_id</parametername>
</parameternamelist>
<parameterdescription>
<para>ID предложения, которое следует отклонить. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meta</parametername>
</parameternamelist>
<parameterdescription>
<para>Дополнительные метаданные, связанные с отказом.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Авторизация требуется от аккаунта: <computeroutput>username</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="62" column="9" bodyfile="marketplace/src/change.cpp" bodystart="778" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="group__public__actions_1ga9ee9ac0937429488378463abd8bc5848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::supplycnfrm</definition>
        <argsstring>(eosio::name coopname, eosio::name username, uint64_t exchange_id, document document)</argsstring>
        <name>supplycnfrm</name>
        <qualifiedname>marketplace::supplycnfrm</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>coopname</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>exchange_id</declname>
        </param>
        <param>
          <type><ref refid="structdocument" kindref="compound">document</ref></type>
          <declname>document</declname>
        </param>
        <briefdescription>
<para>Отказ от предложения. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="64" column="9" bodyfile="marketplace/src/change.cpp" bodystart="386" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="classmarketplace_1ad941ef50a391bbda6af90e38e67d0777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::supply</definition>
        <argsstring>(eosio::name coopname, eosio::name username, uint64_t exchange_id, document document)</argsstring>
        <name>supply</name>
        <qualifiedname>marketplace::supply</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>coopname</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>exchange_id</declname>
        </param>
        <param>
          <type><ref refid="structdocument" kindref="compound">document</ref></type>
          <declname>document</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="65" column="9" bodyfile="marketplace/src/change.cpp" bodystart="354" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classmarketplace_1a9f7209cdd4797a171c4c0f9c4bfbd188" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::delivered</definition>
        <argsstring>(eosio::name coopname, eosio::name username, uint64_t exchange_id)</argsstring>
        <name>delivered</name>
        <qualifiedname>marketplace::delivered</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>coopname</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>exchange_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="66" column="9" bodyfile="marketplace/src/change.cpp" bodystart="439" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="group__public__actions_1ga084713334c8f04951ef37b2b431331ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::recieve</definition>
        <argsstring>(eosio::name coopname, eosio::name username, uint64_t exchange_id, document document)</argsstring>
        <name>recieve</name>
        <qualifiedname>marketplace::recieve</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>coopname</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>exchange_id</declname>
        </param>
        <param>
          <type><ref refid="structdocument" kindref="compound">document</ref></type>
          <declname>document</declname>
        </param>
        <briefdescription>
<para>Подпись акта получения имущества пайщиком </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="67" column="9" bodyfile="marketplace/src/change.cpp" bodystart="473" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="classmarketplace_1a4ad158db16c8c5772026fedd3ad0ae05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::recievecnfrm</definition>
        <argsstring>(eosio::name coopname, eosio::name username, uint64_t exchange_id, document document)</argsstring>
        <name>recievecnfrm</name>
        <qualifiedname>marketplace::recievecnfrm</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>coopname</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>exchange_id</declname>
        </param>
        <param>
          <type><ref refid="structdocument" kindref="compound">document</ref></type>
          <declname>document</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="68" column="9" bodyfile="marketplace/src/change.cpp" bodystart="513" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="classmarketplace_1af5741e1afd512d7480cec3f54586e0a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::dispute</definition>
        <argsstring>(eosio::name coopname, eosio::name username, uint64_t exchange_id, document document)</argsstring>
        <name>dispute</name>
        <qualifiedname>marketplace::dispute</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>coopname</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>exchange_id</declname>
        </param>
        <param>
          <type><ref refid="structdocument" kindref="compound">document</ref></type>
          <declname>document</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="70" column="9" bodyfile="marketplace/src/change.cpp" bodystart="547" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="group__public__actions_1ga082792b887a075f6fba43280d5a5e0cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::complete</definition>
        <argsstring>(eosio::name coopname, eosio::name username, uint64_t exchange_id)</argsstring>
        <name>complete</name>
        <qualifiedname>marketplace::complete</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>coopname</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>exchange_id</declname>
        </param>
        <briefdescription>
<para>Подписание акта о приёме-передаче имущества. </para>
        </briefdescription>
        <detaileddescription>
<para>После успешного получения товара, получатель подписывает акт о приёме-передаче, что свидетельствует о юридическом завершении сделки. Этот акт делает пакет документов по данной сделке полным. После проведения ряда проверок, обновляются статусы и количество объектов в основной заявке и предложении. Если все объекты основной заявки обработаны, заявка удаляется из публикации. В зависимости от типа предложения, может осуществляться перевод токенов.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя пользователя-получателя товара. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exchange_id</parametername>
</parameternamelist>
<parameterdescription>
<para>ID предложения, под которым следует подписать акт.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Авторизация требуется от аккаунта: <computeroutput>username</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="72" column="9" bodyfile="marketplace/src/change.cpp" bodystart="672" bodyend="755"/>
      </memberdef>
      <memberdef kind="function" id="group__public__actions_1gaa0e2d4ec515205db7bc0b459c7b602d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::cancel</definition>
        <argsstring>(eosio::name coopname, eosio::name username, uint64_t exchange_id)</argsstring>
        <name>cancel</name>
        <qualifiedname>marketplace::cancel</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>coopname</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>exchange_id</declname>
        </param>
        <briefdescription>
<para>Отмена заявки и возврат токенов. </para>
        </briefdescription>
        <detaileddescription>
<para>Позволяет пользователю отменить родительскую или дочернюю заявку, а также обеспечивает возврат токенов владельцу (если применимо). При отмене проверяется наличие заявки и её текущий статус.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя пользователя, инициировавшего отмену. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exchange_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Идентификатор заявки для отмены.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Авторизация требуется от аккаунта: <computeroutput>username</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="74" column="9" bodyfile="marketplace/src/change.cpp" bodystart="831" bodyend="846"/>
      </memberdef>
      <memberdef kind="function" id="group__public__actions_1ga0571c4090259fcc39ca6e64a9f94063b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::update</definition>
        <argsstring>(eosio::name coopname, eosio::name username, uint64_t exchange_id, uint64_t remain_units, eosio::asset unit_cost, std::string data, std::string meta)</argsstring>
        <name>update</name>
        <qualifiedname>marketplace::update</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>coopname</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>exchange_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>remain_units</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>unit_cost</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Отмена заявки и возврат токенов. </para>
        </briefdescription>
        <detaileddescription>
<para>Позволяет пользователю отменить родительскую или дочернюю заявку, а также обеспечивает возврат токенов владельцу (если применимо). При отмене проверяется наличие заявки и её текущий статус. Если заявка является родительской, вызывается метод <computeroutput>cancel_parent</computeroutput>, иначе — <computeroutput>cancel_child</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя пользователя, инициировавшего отмену. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exchange_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Идентификатор заявки для отмены.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Авторизация требуется от аккаунта: <computeroutput>username</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="76" column="9" bodyfile="marketplace/src/change.cpp" bodystart="945" bodyend="969"/>
      </memberdef>
      <memberdef kind="function" id="group__public__actions_1gac2a62dd532b9c0212270a2cbe5958b57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::addpieces</definition>
        <argsstring>(eosio::name coopname, eosio::name username, uint64_t exchange_id, uint64_t new_pieces)</argsstring>
        <name>addpieces</name>
        <qualifiedname>marketplace::addpieces</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>coopname</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>exchange_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>new_pieces</declname>
        </param>
        <briefdescription>
<para>Добавление единиц товара к заявке. </para>
        </briefdescription>
        <detaileddescription>
<para>Метод позволяет владельцу заявки дополнительно увеличить количество товара, доступное для обмена в рамках указанной заявки. Используется, когда у продавца появляется дополнительное количество товара, которое он хочет добавить к существующей заявке.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя пользователя, инициировавшего добавление. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exchange_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Идентификатор заявки, к которой добавляются единицы товара. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_pieces</parametername>
</parameternamelist>
<parameterdescription>
<para>Количество новых единиц товара, которые следует добавить к заявке.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Авторизация требуется от аккаунта: <computeroutput>username</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="77" column="9" bodyfile="marketplace/src/change.cpp" bodystart="984" bodyend="998"/>
      </memberdef>
      <memberdef kind="function" id="group__public__actions_1gaa94f8cc59c762e8dc2d059d8cba5e20d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::moderate</definition>
        <argsstring>(eosio::name coopname, eosio::name username, uint64_t exchange_id, uint64_t cancellation_fee)</argsstring>
        <name>moderate</name>
        <qualifiedname>marketplace::moderate</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>coopname</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>exchange_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>cancellation_fee</declname>
        </param>
        <briefdescription>
<para>Модерация товара на маркетплейсе. </para>
        </briefdescription>
        <detaileddescription>
<para>Данный метод предназначен для модерации товара перед его публикацией на маркетплейсе. Метод может быть вызван только администратором маркетплейса.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя пользователя-администратора, который вызывает данный метод. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exchange_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Уникальный идентификатор товара, который нужно опубликовать после модерации.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Авторизация требуется от аккаунта: <computeroutput>username</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="80" column="9" bodyfile="marketplace/src/admins.cpp" bodystart="13" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="group__public__actions_1gada9158c3abd78a8fcf586064a8548c0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::prohibit</definition>
        <argsstring>(eosio::name coopname, eosio::name username, uint64_t exchange_id, std::string meta)</argsstring>
        <name>prohibit</name>
        <qualifiedname>marketplace::prohibit</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>coopname</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>exchange_id</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Отказ в прохождении модерации заявки на товар. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод предназначен для администраторов маркетплейса, чтобы отказать в публикации товара после его модерации. При отказе администратор указывает причину отказа в параметре <computeroutput>meta</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя пользователя-администратора, который вызывает данный метод. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exchange_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Уникальный идентификатор товара, публикацию которого нужно запретить. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meta</parametername>
</parameternamelist>
<parameterdescription>
<para>Строковое описание или причина, по которой товар не прошел модерацию.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Авторизация требуется от аккаунта: <computeroutput>username</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="81" column="9" bodyfile="marketplace/src/admins.cpp" bodystart="52" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="group__public__actions_1gab0b3a052f2caa13fa75d7f50ff3658bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::unpublish</definition>
        <argsstring>(eosio::name coopname, eosio::name username, uint64_t exchange_id)</argsstring>
        <name>unpublish</name>
        <qualifiedname>marketplace::unpublish</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>coopname</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>exchange_id</declname>
        </param>
        <briefdescription>
<para>Снять товар с публикации на маркетплейсе. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод предназначен для снятия товара с публикации. Только владелец товара может снять его с публикации.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя пользователя, являющегося владельцем заявки. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exchange_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Идентификатор заявки, которую следует снять с публикации.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Авторизация требуется от аккаунта: <computeroutput>username</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="82" column="9" bodyfile="marketplace/src/admins.cpp" bodystart="82" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="group__public__actions_1gaa6481de81606a1a6a9805b79ebda7d84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::publish</definition>
        <argsstring>(eosio::name coopname, eosio::name username, uint64_t exchange_id)</argsstring>
        <name>publish</name>
        <qualifiedname>marketplace::publish</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>coopname</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>exchange_id</declname>
        </param>
        <briefdescription>
<para>Опубликовать товар на маркетплейсе. </para>
        </briefdescription>
        <detaileddescription>
<para>Этот метод позволяет владельцу товара опубликовать его на маркетплейсе. Для публикации товар должен находиться в статусе &quot;unpublished&quot;.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя пользователя, являющегося владельцем заявки. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exchange_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Идентификатор заявки, которую следует опубликовать.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Авторизация требуется от аккаунта: <computeroutput>username</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="83" column="9" bodyfile="marketplace/src/admins.cpp" bodystart="110" bodyend="129"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmarketplace_1a41fdf6803d401a4917a7d31d60190ec3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::create</definition>
        <argsstring>(eosio::name type, const exchange_params &amp;params)</argsstring>
        <name>create</name>
        <qualifiedname>marketplace::create</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="structexchange__params" kindref="compound">exchange_params</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Создание заявки на обмен </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Тип заявки </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Параметры заявки</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Общая функция для создания как родительских, так и дочерних заявок. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="55" column="15" bodyfile="marketplace/src/change.cpp" bodystart="67" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classmarketplace_1a0e360827aa59b01b78ca9f0cdc443698" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::create_parent</definition>
        <argsstring>(eosio::name type, const exchange_params &amp;params)</argsstring>
        <name>create_parent</name>
        <qualifiedname>marketplace::create_parent</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="structexchange__params" kindref="compound">exchange_params</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Создание родительской заявки </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Тип заявки </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Параметры заявки</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Специализированная функция для создания родительской заявки. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="56" column="15" bodyfile="marketplace/src/change.cpp" bodystart="91" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classmarketplace_1a20268b1b8b02ed38a812054f97f35a89" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::create_child</definition>
        <argsstring>(eosio::name type, const exchange_params &amp;params)</argsstring>
        <name>create_child</name>
        <qualifiedname>marketplace::create_child</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="structexchange__params" kindref="compound">exchange_params</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Создание дочерней заявки </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Тип заявки </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Параметры заявки</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Специализированная функция для создания дочерних заявок, связанных с родительской заявкой. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="57" column="15" bodyfile="marketplace/src/change.cpp" bodystart="177" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="classmarketplace_1a1808808b13809e91e25b0958f67c4d45" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::cancel_parent</definition>
        <argsstring>(eosio::name coopname, eosio::name username, uint64_t exchange_id)</argsstring>
        <name>cancel_parent</name>
        <qualifiedname>marketplace::cancel_parent</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>coopname</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>exchange_id</declname>
        </param>
        <briefdescription>
<para>Отмена родительской заявки. </para>
        </briefdescription>
        <detaileddescription>
<para>Вызывается из <computeroutput>cancel</computeroutput>, если заявка является родительской. Выполняется проверка, что заявка не имеет заблокированных единиц товара, и удаляется из хранилища.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя пользователя, осуществляющего отмену заявки. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exchange_id</parametername>
</parameternamelist>
<parameterdescription>
<para>ID родительской заявки, которую нужно отменить. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="58" column="15" bodyfile="marketplace/src/change.cpp" bodystart="858" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="classmarketplace_1ac5fc689c4e4972094be4a899c3b77658" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marketplace::cancel_child</definition>
        <argsstring>(eosio::name coopname, eosio::name username, uint64_t exchange_id)</argsstring>
        <name>cancel_child</name>
        <qualifiedname>marketplace::cancel_child</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>coopname</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>exchange_id</declname>
        </param>
        <briefdescription>
<para>Отмена дочерней заявки. </para>
        </briefdescription>
        <detaileddescription>
<para>Вызывается из <computeroutput>cancel</computeroutput>, если заявка является дочерней. Обновляет количество оставшихся и заблокированных единиц товара в родительской заявке и удаляет дочернюю заявку из хранилища. В зависимости от статуса и типа заявки возможен возврат токенов &quot;покупателю&quot;.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>Имя пользователя, осуществляющего отмену заявки. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exchange_id</parametername>
</parameternamelist>
<parameterdescription>
<para>ID дочерней заявки, которую нужно отменить. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="marketplace/marketplace.hpp" line="59" column="15" bodyfile="marketplace/src/change.cpp" bodystart="877" bodyend="931"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Класс <computeroutput>marketplace</computeroutput> предоставляет функционал кооперативного маркетплейса, позволяя пользователям создавать, обновлять, принимать и отменять заявки на обмен товаров и услуг. Этот контракт служит центральной точкой для всех операций обмена в рамках кооперативной экосистемы. </para>
    </briefdescription>
    <detaileddescription>
<para>Основные функции класса:<itemizedlist>
<listitem><para>Создание и управление заявками на обмен, включая предложения и заказы.</para>
</listitem><listitem><para>Операции обновления, принятия, отказа и завершения обменных операций.</para>
</listitem><listitem><para>Модерация и управление публикацией заявок на обмен.</para>
</listitem><listitem><para>Административные функции, такие как создание идентификаторов и авторизация операций.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="note"><para>Контракт маркетплейса является центральной точкой экономической активности на платформе. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>eosio::contract</label>
      </node>
      <node id="1">
        <label>marketplace</label>
        <link refid="classmarketplace"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>eosio::contract</label>
      </node>
      <node id="1">
        <label>marketplace</label>
        <link refid="classmarketplace"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="marketplace/marketplace.hpp" line="33" column="1" bodyfile="marketplace/marketplace.hpp" bodystart="33" bodyend="91"/>
    <listofallmembers>
      <member refid="group__public__actions_1ga279155e46493ac89cf8d98249b239128" prot="public" virt="non-virtual"><scope>marketplace</scope><name>accept</name></member>
      <member refid="group__public__actions_1gac2a62dd532b9c0212270a2cbe5958b57" prot="public" virt="non-virtual"><scope>marketplace</scope><name>addpieces</name></member>
      <member refid="classmarketplace_1a4a1a5d78b2606e4883239fc79afdfb40" prot="public" virt="non-virtual"><scope>marketplace</scope><name>apply</name></member>
      <member refid="group__public__actions_1ga006a09b0804cd50f3ec8aef8bd280fff" prot="public" virt="non-virtual"><scope>marketplace</scope><name>authorize</name></member>
      <member refid="group__public__actions_1gaa0e2d4ec515205db7bc0b459c7b602d6" prot="public" virt="non-virtual"><scope>marketplace</scope><name>cancel</name></member>
      <member refid="classmarketplace_1ac5fc689c4e4972094be4a899c3b77658" prot="public" virt="non-virtual"><scope>marketplace</scope><name>cancel_child</name></member>
      <member refid="classmarketplace_1a1808808b13809e91e25b0958f67c4d45" prot="public" virt="non-virtual"><scope>marketplace</scope><name>cancel_parent</name></member>
      <member refid="group__public__actions_1ga082792b887a075f6fba43280d5a5e0cc" prot="public" virt="non-virtual"><scope>marketplace</scope><name>complete</name></member>
      <member refid="classmarketplace_1a41fdf6803d401a4917a7d31d60190ec3" prot="public" virt="non-virtual"><scope>marketplace</scope><name>create</name></member>
      <member refid="classmarketplace_1a20268b1b8b02ed38a812054f97f35a89" prot="public" virt="non-virtual"><scope>marketplace</scope><name>create_child</name></member>
      <member refid="classmarketplace_1a0e360827aa59b01b78ca9f0cdc443698" prot="public" virt="non-virtual"><scope>marketplace</scope><name>create_parent</name></member>
      <member refid="group__public__actions_1ga632cf8b33c10b9602cb694f4cb036049" prot="public" virt="non-virtual"><scope>marketplace</scope><name>decline</name></member>
      <member refid="classmarketplace_1a9f7209cdd4797a171c4c0f9c4bfbd188" prot="public" virt="non-virtual"><scope>marketplace</scope><name>delivered</name></member>
      <member refid="classmarketplace_1af5741e1afd512d7480cec3f54586e0a6" prot="public" virt="non-virtual"><scope>marketplace</scope><name>dispute</name></member>
      <member refid="classmarketplace_1aa7c0193de8af681a5e36bdc3fb75d595" prot="public" virt="non-virtual"><scope>marketplace</scope><name>marketplace</name></member>
      <member refid="group__public__actions_1gaa94f8cc59c762e8dc2d059d8cba5e20d" prot="public" virt="non-virtual"><scope>marketplace</scope><name>moderate</name></member>
      <member refid="group__public__actions_1ga6d78c0a4a104abcae663754dc08d8da8" prot="public" virt="non-virtual"><scope>marketplace</scope><name>newid</name></member>
      <member refid="group__public__actions_1ga74c30d5573748d4cf4c5a660568b2a60" prot="public" virt="non-virtual"><scope>marketplace</scope><name>offer</name></member>
      <member refid="group__public__actions_1gab643c84304eeca5b09587fa01ee7a5eb" prot="public" virt="non-virtual"><scope>marketplace</scope><name>order</name></member>
      <member refid="group__public__actions_1gada9158c3abd78a8fcf586064a8548c0c" prot="public" virt="non-virtual"><scope>marketplace</scope><name>prohibit</name></member>
      <member refid="group__public__actions_1gaa6481de81606a1a6a9805b79ebda7d84" prot="public" virt="non-virtual"><scope>marketplace</scope><name>publish</name></member>
      <member refid="group__public__actions_1ga084713334c8f04951ef37b2b431331ca" prot="public" virt="non-virtual"><scope>marketplace</scope><name>recieve</name></member>
      <member refid="classmarketplace_1a4ad158db16c8c5772026fedd3ad0ae05" prot="public" virt="non-virtual"><scope>marketplace</scope><name>recievecnfrm</name></member>
      <member refid="classmarketplace_1ad941ef50a391bbda6af90e38e67d0777" prot="public" virt="non-virtual"><scope>marketplace</scope><name>supply</name></member>
      <member refid="group__public__actions_1ga9ee9ac0937429488378463abd8bc5848" prot="public" virt="non-virtual"><scope>marketplace</scope><name>supplycnfrm</name></member>
      <member refid="group__public__actions_1gab0b3a052f2caa13fa75d7f50ff3658bb" prot="public" virt="non-virtual"><scope>marketplace</scope><name>unpublish</name></member>
      <member refid="group__public__actions_1ga0571c4090259fcc39ca6e64a9f94063b" prot="public" virt="non-virtual"><scope>marketplace</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
