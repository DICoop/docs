<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="ru">
  <compounddef id="eosio_8token_8cpp" kind="file" language="C++">
    <compoundname>eosio.token.cpp</compoundname>
    <includes refid="eosio_8token_8hpp" local="no">eosio.token/eosio.token.hpp</includes>
    <includes refid="consts_8hpp" local="yes">../../../../common/consts.hpp</includes>
    <includes refid="utils_8hpp" local="yes">../../../../common/utils.hpp</includes>
    <includes refid="drafts_8hpp" local="yes">../../../../common/drafts.hpp</includes>
    <includes refid="accounts_8hpp" local="yes">../../../../common/accounts.hpp</includes>
    <includes refid="coops_8hpp" local="yes">../../../../common/coops.hpp</includes>
    <incdepgraph>
      <node id="13">
        <label>../../../../common/accounts.hpp</label>
        <link refid="accounts_8hpp"/>
      </node>
      <node id="6">
        <label>../../../../common/consts.hpp</label>
        <link refid="consts_8hpp"/>
      </node>
      <node id="14">
        <label>../../../../common/coops.hpp</label>
        <link refid="coops_8hpp"/>
      </node>
      <node id="10">
        <label>../../../../common/drafts.hpp</label>
        <link refid="drafts_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>../../../../common/utils.hpp</label>
        <link refid="utils_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>eosio.token/eosio.token.hpp</label>
        <link refid="eosio_8token_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>system/contracts/eosio.token/src/eosio.token.cpp</label>
        <link refid="eosio_8token_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>eosio/asset.hpp</label>
      </node>
      <node id="11">
        <label>eosio/contract.hpp</label>
      </node>
      <node id="9">
        <label>eosio/crypto.hpp</label>
      </node>
      <node id="4">
        <label>eosio/eosio.hpp</label>
      </node>
      <node id="12">
        <label>eosio/system.hpp</label>
      </node>
      <node id="8">
        <label>eosio/transaction.hpp</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceeosio">eosio</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="eosio_8token_8hpp" kindref="compound">eosio.token/eosio.token.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../../../common/consts.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../../../common/utils.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../../../common/drafts.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../../../common/accounts.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../../../common/coops.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceeosio" kindref="compound">eosio</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1token_1a5277670549e2458dd4a4fab4c56a9599" kindref="member">token::create</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name&amp;<sp/><sp/><sp/>issuer,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset&amp;<sp/><sp/>maximum_supply<sp/>)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>require_auth(<sp/>get_self()<sp/>);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sym<sp/>=<sp/>maximum_supply.symbol;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>maximum_supply.is_valid(),<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>supply&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>maximum_supply.amount<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;max-supply<sp/>must<sp/>be<sp/>positive&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classeosio_1_1token_1ab30a2faa46a28a61ddfbe4241c550193" kindref="member">stats</ref><sp/>statstable(<sp/>get_self(),<sp/>sym.code().raw()<sp/>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>existing<sp/>=<sp/>statstable.find(<sp/>sym.code().raw()<sp/>);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>existing<sp/>==<sp/>statstable.end(),<sp/></highlight><highlight class="stringliteral">&quot;token<sp/>with<sp/>symbol<sp/>already<sp/>exists&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>statstable.emplace(<sp/>get_self(),<sp/>[&amp;](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>s<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.supply.symbol<sp/>=<sp/>maximum_supply.symbol;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.max_supply<sp/><sp/><sp/><sp/>=<sp/>maximum_supply;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.issuer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>issuer;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1token_1a5b2edc4577c88d5bccecb7e44536ff04" kindref="member">token::is_can_transfer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name&amp;<sp/>from,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name&amp;<sp/>to)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>from_exist_in_provider<sp/>=<sp/><ref refid="coops_8hpp_1aa23eebab5f5b5b8ba3881ca62ce600d0" kindref="member">is_participant_exist</ref>(<ref refid="group__public__consts_1ga1ff8113eaea18bd553df59b9ad7df01a" kindref="member">_provider</ref>,<sp/>from);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>to_exist_in_provider<sp/>=<sp/><ref refid="coops_8hpp_1aa23eebab5f5b5b8ba3881ca62ce600d0" kindref="member">is_participant_exist</ref>(<ref refid="group__public__consts_1ga1ff8113eaea18bd553df59b9ad7df01a" kindref="member">_provider</ref>,<sp/>to);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!to_exist_in_provider<sp/>&amp;&amp;<sp/>std::find(<ref refid="group__public__consts_1gaf042516f92d25052ae67d9224b34bea6" kindref="member">token_whitelist</ref>.begin(),<sp/><ref refid="group__public__consts_1gaf042516f92d25052ae67d9224b34bea6" kindref="member">token_whitelist</ref>.end(),<sp/>from)<sp/>==<sp/><ref refid="group__public__consts_1gaf042516f92d25052ae67d9224b34bea6" kindref="member">token_whitelist</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>check(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Отправитель<sp/>не<sp/>является<sp/>членом<sp/>кооператива-провайдера&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!to_exist_in_provider<sp/>&amp;&amp;<sp/>std::find(<ref refid="group__public__consts_1gaf042516f92d25052ae67d9224b34bea6" kindref="member">token_whitelist</ref>.begin(),<sp/><ref refid="group__public__consts_1gaf042516f92d25052ae67d9224b34bea6" kindref="member">token_whitelist</ref>.end(),<sp/>to)<sp/>==<sp/><ref refid="group__public__consts_1gaf042516f92d25052ae67d9224b34bea6" kindref="member">token_whitelist</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Получатель<sp/>не<sp/>является<sp/>членом<sp/>кооператива-провайдера&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1token_1a3a62d2a7493710b3e34fbdfd4fe81d59" kindref="member">token::issue</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name&amp;<sp/>to,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset&amp;<sp/>quantity,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>memo<sp/>)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sym<sp/>=<sp/>quantity.symbol;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>sym.is_valid(),<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>symbol<sp/>name&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>memo.size()<sp/>&lt;=<sp/>256,<sp/></highlight><highlight class="stringliteral">&quot;memo<sp/>has<sp/>more<sp/>than<sp/>256<sp/>bytes&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classeosio_1_1token_1ab30a2faa46a28a61ddfbe4241c550193" kindref="member">stats</ref><sp/>statstable(<sp/>get_self(),<sp/>sym.code().raw()<sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>existing<sp/>=<sp/>statstable.find(<sp/>sym.code().raw()<sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>existing<sp/>!=<sp/>statstable.end(),<sp/></highlight><highlight class="stringliteral">&quot;token<sp/>with<sp/>symbol<sp/>does<sp/>not<sp/>exist,<sp/>create<sp/>token<sp/>before<sp/>issue&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>st<sp/>=<sp/>*existing;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>to<sp/>==<sp/>st.issuer,<sp/></highlight><highlight class="stringliteral">&quot;tokens<sp/>can<sp/>only<sp/>be<sp/>issued<sp/>to<sp/>issuer<sp/>account&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>require_auth(<sp/>st.issuer<sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>quantity.is_valid(),<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>quantity&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>quantity.amount<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;must<sp/>issue<sp/>positive<sp/>quantity&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>quantity.symbol<sp/>==<sp/>st.supply.symbol,<sp/></highlight><highlight class="stringliteral">&quot;symbol<sp/>precision<sp/>mismatch&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>quantity.amount<sp/>&lt;=<sp/>st.max_supply.amount<sp/>-<sp/>st.supply.amount,<sp/></highlight><highlight class="stringliteral">&quot;quantity<sp/>exceeds<sp/>available<sp/>supply&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>statstable.modify(<sp/>st,<sp/>same_payer,<sp/>[&amp;](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>s<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.supply<sp/>+=<sp/>quantity;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classeosio_1_1token_1a5b2edc4577c88d5bccecb7e44536ff04" kindref="member">is_can_transfer</ref>(st.issuer,<sp/>to);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classeosio_1_1token_1ad1eaa2275ba3d2da2663dd8c6595a598" kindref="member">add_balance</ref>(<sp/>to,<sp/>quantity,<sp/>st.issuer<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1token_1a4bf7770086ab81931c6c5a22265bae4f" kindref="member">token::retire</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset&amp;<sp/>quantity,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>memo<sp/>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sym<sp/>=<sp/>quantity.symbol;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>sym.is_valid(),<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>symbol<sp/>name&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>memo.size()<sp/>&lt;=<sp/>256,<sp/></highlight><highlight class="stringliteral">&quot;memo<sp/>has<sp/>more<sp/>than<sp/>256<sp/>bytes&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classeosio_1_1token_1ab30a2faa46a28a61ddfbe4241c550193" kindref="member">stats</ref><sp/>statstable(<sp/>get_self(),<sp/>sym.code().raw()<sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>existing<sp/>=<sp/>statstable.find(<sp/>sym.code().raw()<sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>existing<sp/>!=<sp/>statstable.end(),<sp/></highlight><highlight class="stringliteral">&quot;token<sp/>with<sp/>symbol<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>st<sp/>=<sp/>*existing;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>require_auth(<sp/>st.issuer<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>quantity.is_valid(),<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>quantity&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>quantity.amount<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;must<sp/>retire<sp/>positive<sp/>quantity&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>quantity.symbol<sp/>==<sp/>st.supply.symbol,<sp/></highlight><highlight class="stringliteral">&quot;symbol<sp/>precision<sp/>mismatch&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>statstable.modify(<sp/>st,<sp/>same_payer,<sp/>[&amp;](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>s<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.supply<sp/>-=<sp/>quantity;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classeosio_1_1token_1a28f25eaa6d0e7017f3d8760ad16960bc" kindref="member">sub_balance</ref>(<sp/>st.issuer,<sp/>quantity<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1token_1a8a9d08a9791d818797dc5f70ed8f826f" kindref="member">token::transfer</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name&amp;<sp/><sp/><sp/><sp/>from,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name&amp;<sp/><sp/><sp/><sp/>to,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset&amp;<sp/><sp/><sp/>quantity,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/><sp/>memo<sp/>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>from<sp/>!=<sp/>to,<sp/></highlight><highlight class="stringliteral">&quot;cannot<sp/>transfer<sp/>to<sp/>self&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>require_auth(<sp/>from<sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>is_account(<sp/>to<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;to<sp/>account<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sym<sp/>=<sp/>quantity.symbol.code();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classeosio_1_1token_1ab30a2faa46a28a61ddfbe4241c550193" kindref="member">stats</ref><sp/>statstable(<sp/>get_self(),<sp/>sym.raw()<sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>st<sp/>=<sp/>statstable.get(<sp/>sym.raw()<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>require_recipient(<sp/>from<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>require_recipient(<sp/>to<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>quantity.is_valid(),<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>quantity&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>quantity.amount<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;must<sp/>transfer<sp/>positive<sp/>quantity&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>quantity.symbol<sp/>==<sp/>st.supply.symbol,<sp/></highlight><highlight class="stringliteral">&quot;symbol<sp/>precision<sp/>mismatch&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>check(<sp/>memo.size()<sp/>&lt;=<sp/>256,<sp/></highlight><highlight class="stringliteral">&quot;memo<sp/>has<sp/>more<sp/>than<sp/>256<sp/>bytes&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>payer<sp/>=<sp/>has_auth(<sp/>to<sp/>)<sp/>?<sp/>to<sp/>:<sp/>from;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classeosio_1_1token_1a5b2edc4577c88d5bccecb7e44536ff04" kindref="member">is_can_transfer</ref>(from,<sp/>to);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classeosio_1_1token_1a28f25eaa6d0e7017f3d8760ad16960bc" kindref="member">sub_balance</ref>(<sp/>from,<sp/>quantity<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classeosio_1_1token_1ad1eaa2275ba3d2da2663dd8c6595a598" kindref="member">add_balance</ref>(<sp/>to,<sp/>quantity,<sp/>payer<sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1token_1a28f25eaa6d0e7017f3d8760ad16960bc" kindref="member">token::sub_balance</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name&amp;<sp/>owner,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset&amp;<sp/>value<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosio_1_1token_1aef73052a1688f86f1afb92879130e147" kindref="member">accounts</ref><sp/>from_acnts(<sp/>get_self(),<sp/>owner.value<sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>from<sp/>=<sp/>from_acnts.get(<sp/>value.symbol.code().raw(),<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>balance<sp/>object<sp/>found&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>check(<sp/>from.balance.amount<sp/>&gt;=<sp/>value.amount,<sp/></highlight><highlight class="stringliteral">&quot;overdrawn<sp/>balance&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>from_acnts.modify(<sp/>from,<sp/>owner,<sp/>[&amp;](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>a<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.balance<sp/>-=<sp/>value;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1token_1ad1eaa2275ba3d2da2663dd8c6595a598" kindref="member">token::add_balance</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name&amp;<sp/>owner,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset&amp;<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name&amp;<sp/>ram_payer<sp/>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosio_1_1token_1aef73052a1688f86f1afb92879130e147" kindref="member">accounts</ref><sp/>to_acnts(<sp/>get_self(),<sp/>owner.value<sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>to<sp/>=<sp/>to_acnts.find(<sp/>value.symbol.code().raw()<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>to<sp/>==<sp/>to_acnts.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to_acnts.emplace(<sp/>ram_payer,<sp/>[&amp;](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>a<sp/>){</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.balance<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to_acnts.modify(<sp/>to,<sp/>same_payer,<sp/>[&amp;](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>a<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.balance<sp/>+=<sp/>value;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1token_1a4da303699332aacdc69f3ff582477141" kindref="member">token::open</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name&amp;<sp/>owner,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>symbol&amp;<sp/>symbol,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name&amp;<sp/>ram_payer<sp/>)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/>require_auth(<sp/>ram_payer<sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/>check(<sp/>is_account(<sp/>owner<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;owner<sp/>account<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sym_code_raw<sp/>=<sp/>symbol.code().raw();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosio_1_1token_1ab30a2faa46a28a61ddfbe4241c550193" kindref="member">stats</ref><sp/>statstable(<sp/>get_self(),<sp/>sym_code_raw<sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>st<sp/>=<sp/>statstable.get(<sp/>sym_code_raw,<sp/></highlight><highlight class="stringliteral">&quot;symbol<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/>check(<sp/>st.supply.symbol<sp/>==<sp/>symbol,<sp/></highlight><highlight class="stringliteral">&quot;symbol<sp/>precision<sp/>mismatch&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosio_1_1token_1aef73052a1688f86f1afb92879130e147" kindref="member">accounts</ref><sp/>acnts(<sp/>get_self(),<sp/>owner.value<sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>acnts.find(<sp/>sym_code_raw<sp/>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>it<sp/>==<sp/>acnts.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>acnts.emplace(<sp/>ram_payer,<sp/>[&amp;](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>a<sp/>){</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.balance<sp/>=<sp/>asset{0,<sp/>symbol};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1token_1a88402f75888c4cfe6a3ef0391bd7ecbd" kindref="member">token::close</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name&amp;<sp/>owner,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>symbol&amp;<sp/>symbol<sp/>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/>require_auth(<sp/>owner<sp/>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosio_1_1token_1aef73052a1688f86f1afb92879130e147" kindref="member">accounts</ref><sp/>acnts(<sp/>get_self(),<sp/>owner.value<sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>acnts.find(<sp/>symbol.code().raw()<sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/>check(<sp/>it<sp/>!=<sp/>acnts.end(),<sp/></highlight><highlight class="stringliteral">&quot;Balance<sp/>row<sp/>already<sp/>deleted<sp/>or<sp/>never<sp/>existed.<sp/>Action<sp/>won&apos;t<sp/>have<sp/>any<sp/>effect.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/>check(<sp/>it-&gt;balance.amount<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>close<sp/>because<sp/>the<sp/>balance<sp/>is<sp/>not<sp/>zero.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/>acnts.erase(<sp/>it<sp/>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">}<sp/></highlight></codeline>
    </programlisting>
    <location file="system/contracts/eosio.token/src/eosio.token.cpp"/>
  </compounddef>
</doxygen>
