<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="ru">
  <compounddef id="eosio_8msig_8cpp" kind="file" language="C++">
    <compoundname>eosio.msig.cpp</compoundname>
    <includes local="no">eosio/action.hpp</includes>
    <includes local="no">eosio/crypto.hpp</includes>
    <includes local="no">eosio/permission.hpp</includes>
    <includes refid="eosio_8msig_8hpp" local="no">eosio.msig/eosio.msig.hpp</includes>
    <incdepgraph>
      <node id="5">
        <label>eosio.msig/eosio.msig.hpp</label>
        <link refid="eosio_8msig_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>system/contracts/eosio.msig/src/eosio.msig.cpp</label>
        <link refid="eosio_8msig_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>eosio/action.hpp</label>
      </node>
      <node id="6">
        <label>eosio/binary_extension.hpp</label>
      </node>
      <node id="3">
        <label>eosio/crypto.hpp</label>
      </node>
      <node id="7">
        <label>eosio/eosio.hpp</label>
      </node>
      <node id="8">
        <label>eosio/ignore.hpp</label>
      </node>
      <node id="4">
        <label>eosio/permission.hpp</label>
      </node>
      <node id="9">
        <label>eosio/transaction.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceeosio">eosio</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;eosio/action.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/crypto.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/permission.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="eosio_8msig_8hpp" kindref="compound">eosio.msig/eosio.msig.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceeosio" kindref="compound">eosio</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">transaction_header<sp/><ref refid="namespaceeosio_1a5a18f73f0452f4391a2e8abfc7d0f373" kindref="member">get_trx_header</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceeosio_1af902933339a070f5af0f38e4c4af7f07" kindref="member">trx_is_authorized</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;permission_level&gt;&amp;<sp/>approvals,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;char&gt;&amp;<sp/>packed_trx);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Function&gt;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">std::vector&lt;permission_level&gt;<sp/><ref refid="namespaceeosio_1abaa5d0db854d769ac41e2f062f417485" kindref="member">get_approvals_and_adjust_table</ref>(name<sp/>self,<sp/>name<sp/>proposer,<sp/>name<sp/>proposal_name,<sp/>Function&amp;&amp;<sp/>table_op)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosio_1_1multisig_1a63a04fd1cf67821038757093a19934e4" kindref="member">multisig::approvals</ref><sp/>approval_table(<sp/>self,<sp/>proposer.value<sp/>);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>approval_table_iter<sp/>=<sp/>approval_table.find(<sp/>proposal_name.value<sp/>);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;permission_level&gt;<sp/>approvals_vector;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosio_1_1multisig_1a22ec4ca93c516c0b46aa306ef14929e6" kindref="member">multisig::invalidations</ref><sp/>invalidations_table(<sp/>self,<sp/>self.value<sp/>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>approval_table_iter<sp/>!=<sp/>approval_table.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>approvals_vector.reserve(<sp/>approval_table_iter-&gt;provided_approvals.size()<sp/>);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>permission<sp/>:<sp/>approval_table_iter-&gt;provided_approvals<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/>invalidations_table.find(<sp/>permission.level.actor.value<sp/>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>iter<sp/>==<sp/>invalidations_table.end()<sp/>||<sp/>iter-&gt;last_invalidation_time<sp/>&lt;<sp/>permission.time<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>approvals_vector.push_back(permission.level);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table_op(<sp/>approval_table,<sp/>approval_table_iter<sp/>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classeosio_1_1multisig_1a1ad32ac47eba850bcecb5940b21b1f04" kindref="member">multisig::old_approvals</ref><sp/>old_approval_table(<sp/>self,<sp/>proposer.value<sp/>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>old_approvals_obj<sp/>=<sp/>old_approval_table.get(<sp/>proposal_name.value,<sp/></highlight><highlight class="stringliteral">&quot;proposal<sp/>not<sp/>found&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>permission<sp/>:<sp/>old_approvals_obj.provided_approvals<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/>invalidations_table.find(<sp/>permission.actor.value<sp/>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>iter<sp/>==<sp/>invalidations_table.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>approvals_vector.push_back(<sp/>permission<sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table_op(<sp/>old_approval_table,<sp/>old_approvals_obj<sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>approvals_vector;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1multisig_1acb9cee084979625820b6f45492f13be0" kindref="member">multisig::propose</ref>(<sp/>name<sp/>proposer,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>proposal_name,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;permission_level&gt;<sp/>requested,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ignore&lt;transaction&gt;<sp/>trx<sp/>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>require_auth(<sp/>proposer<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ds<sp/>=<sp/>get_datastream();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>trx_pos<sp/>=<sp/>ds.pos();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>ds.remaining();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/>transaction_header<sp/>trx_header;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;action&gt;<sp/>context_free_actions;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/>ds<sp/>&gt;&gt;<sp/>trx_header;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>check(<sp/>trx_header.expiration<sp/>&gt;=<sp/>eosio::time_point_sec(current_time_point()),<sp/></highlight><highlight class="stringliteral">&quot;transaction<sp/>expired&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/>ds<sp/>&gt;&gt;<sp/>context_free_actions;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/>check(<sp/>context_free_actions.empty(),<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>allowed<sp/>to<sp/>`propose`<sp/>a<sp/>transaction<sp/>with<sp/>context-free<sp/>actions&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosio_1_1multisig_1a4f80f1ab1d2bd88d9ee3964e8cf34771" kindref="member">proposals</ref><sp/>proptable(<sp/>get_self(),<sp/>proposer.value<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>check(<sp/>proptable.find(<sp/>proposal_name.value<sp/>)<sp/>==<sp/>proptable.end(),<sp/></highlight><highlight class="stringliteral">&quot;proposal<sp/>with<sp/>the<sp/>same<sp/>name<sp/>exists&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>packed_requested<sp/>=<sp/>pack(requested);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>res<sp/>=<sp/><sp/>check_transaction_authorization(</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trx_pos,<sp/>size,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)0,<sp/>0,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packed_requested.data(),<sp/>packed_requested.size()</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/>check(<sp/>res<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;transaction<sp/>authorization<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;char&gt;<sp/>pkd_trans;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/>pkd_trans.resize(size);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pkd_trans.data(),<sp/>trx_pos,<sp/>size);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/>proptable.emplace(<sp/>proposer,<sp/>[&amp;](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>prop<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prop.proposal_name<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>proposal_name;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prop.packed_transaction<sp/>=<sp/>pkd_trans;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prop.earliest_exec_time.emplace();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosio_1_1multisig_1a63a04fd1cf67821038757093a19934e4" kindref="member">approvals</ref><sp/>apptable(<sp/>get_self(),<sp/>proposer.value<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/>apptable.emplace(<sp/>proposer,<sp/>[&amp;](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>a<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.proposal_name<sp/>=<sp/>proposal_name;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.requested_approvals.reserve(<sp/>requested.size()<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>level<sp/>:<sp/>requested<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.requested_approvals.push_back(<sp/>approval{<sp/>level,<sp/><ref refid="namespacesystem__contracts_1_1testing_1_1test__contracts_1_1blockinfo__tester_1aada4f815458e881f7140c74078089f01" kindref="member">time_point</ref>{<sp/>microseconds{0}<sp/>}<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1multisig_1a5cccb8b23b9fffa1b27d443fad9ce3e9" kindref="member">multisig::approve</ref>(<sp/>name<sp/>proposer,<sp/>name<sp/>proposal_name,<sp/>permission_level<sp/>level,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eosio::binary_extension&lt;eosio::checksum256&gt;&amp;<sp/>proposal_hash<sp/>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/>require_auth(<sp/>level<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosio_1_1multisig_1a4f80f1ab1d2bd88d9ee3964e8cf34771" kindref="member">proposals</ref><sp/>proptable(<sp/>get_self(),<sp/>proposer.value<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>prop<sp/>=<sp/>proptable.get(<sp/>proposal_name.value,<sp/></highlight><highlight class="stringliteral">&quot;proposal<sp/>not<sp/>found&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>proposal_hash<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert_sha256(<sp/>prop.packed_transaction.data(),<sp/>prop.packed_transaction.size(),<sp/>*proposal_hash<sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosio_1_1multisig_1a63a04fd1cf67821038757093a19934e4" kindref="member">approvals</ref><sp/>apptable(<sp/>get_self(),<sp/>proposer.value<sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>apps_it<sp/>=<sp/>apptable.find(<sp/>proposal_name.value<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>apps_it<sp/>!=<sp/>apptable.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>itr<sp/>=<sp/>std::find_if(<sp/>apps_it-&gt;requested_approvals.begin(),<sp/>apps_it-&gt;requested_approvals.end(),<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>approval&amp;<sp/>a)<sp/>{<sp/>return<sp/>a.level<sp/>==<sp/>level;<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check(<sp/>itr<sp/>!=<sp/>apps_it-&gt;requested_approvals.end(),<sp/></highlight><highlight class="stringliteral">&quot;approval<sp/>is<sp/>not<sp/>on<sp/>the<sp/>list<sp/>of<sp/>requested<sp/>approvals&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>apptable.modify(<sp/>apps_it,<sp/>proposer,<sp/>[&amp;](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>a<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.provided_approvals.push_back(<sp/>approval{<sp/>level,<sp/>current_time_point()<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.requested_approvals.erase(<sp/>itr<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classeosio_1_1multisig_1a1ad32ac47eba850bcecb5940b21b1f04" kindref="member">old_approvals</ref><sp/>old_apptable(<sp/>get_self(),<sp/>proposer.value<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>apps<sp/>=<sp/>old_apptable.get(<sp/>proposal_name.value,<sp/></highlight><highlight class="stringliteral">&quot;proposal<sp/>not<sp/>found&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>itr<sp/>=<sp/>std::find(<sp/>apps.requested_approvals.begin(),<sp/>apps.requested_approvals.end(),<sp/>level<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check(<sp/>itr<sp/>!=<sp/>apps.requested_approvals.end(),<sp/></highlight><highlight class="stringliteral">&quot;approval<sp/>is<sp/>not<sp/>on<sp/>the<sp/>list<sp/>of<sp/>requested<sp/>approvals&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>old_apptable.modify(<sp/>apps,<sp/>proposer,<sp/>[&amp;](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>a<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.provided_approvals.push_back(<sp/>level<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.requested_approvals.erase(<sp/>itr<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>transaction_header<sp/>trx_header<sp/>=<sp/><ref refid="namespaceeosio_1a5a18f73f0452f4391a2e8abfc7d0f373" kindref="member">get_trx_header</ref>(prop.packed_transaction.data(),<sp/>prop.packed_transaction.size());</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>prop.earliest_exec_time.has_value()<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!prop.earliest_exec_time-&gt;has_value()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>table_op<sp/>=<sp/>[](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;){};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="namespaceeosio_1af902933339a070f5af0f38e4c4af7f07" kindref="member">trx_is_authorized</ref>(<ref refid="namespaceeosio_1abaa5d0db854d769ac41e2f062f417485" kindref="member">get_approvals_and_adjust_table</ref>(get_self(),<sp/>proposer,<sp/>proposal_name,<sp/>table_op),<sp/>prop.packed_transaction)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proptable.modify(<sp/>prop,<sp/>proposer,<sp/>[&amp;](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>p<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.earliest_exec_time.emplace(<ref refid="namespacesystem__contracts_1_1testing_1_1test__contracts_1_1blockinfo__tester_1aada4f815458e881f7140c74078089f01" kindref="member">time_point</ref>{<sp/>current_time_point()<sp/>+<sp/>eosio::seconds(trx_header.delay_sec.value)});</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check(<sp/>trx_header.delay_sec.value<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;old<sp/>proposals<sp/>are<sp/>not<sp/>allowed<sp/>to<sp/>have<sp/>non-zero<sp/>`delay_sec`;<sp/>cancel<sp/>and<sp/>retry&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1multisig_1a7d6e568f96c6697728e316557a9bcf1e" kindref="member">multisig::unapprove</ref>(<sp/>name<sp/>proposer,<sp/>name<sp/>proposal_name,<sp/>permission_level<sp/>level<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/>require_auth(<sp/>level<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosio_1_1multisig_1a63a04fd1cf67821038757093a19934e4" kindref="member">approvals</ref><sp/>apptable(<sp/>get_self(),<sp/>proposer.value<sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>apps_it<sp/>=<sp/>apptable.find(<sp/>proposal_name.value<sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>apps_it<sp/>!=<sp/>apptable.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>itr<sp/>=<sp/>std::find_if(<sp/>apps_it-&gt;provided_approvals.begin(),<sp/>apps_it-&gt;provided_approvals.end(),<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>approval&amp;<sp/>a)<sp/>{<sp/>return<sp/>a.level<sp/>==<sp/>level;<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check(<sp/>itr<sp/>!=<sp/>apps_it-&gt;provided_approvals.end(),<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>approval<sp/>previously<sp/>granted&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>apptable.modify(<sp/>apps_it,<sp/>proposer,<sp/>[&amp;](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>a<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.requested_approvals.push_back(<sp/>approval{<sp/>level,<sp/>current_time_point()<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.provided_approvals.erase(<sp/>itr<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classeosio_1_1multisig_1a1ad32ac47eba850bcecb5940b21b1f04" kindref="member">old_approvals</ref><sp/>old_apptable(<sp/>get_self(),<sp/>proposer.value<sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>apps<sp/>=<sp/>old_apptable.get(<sp/>proposal_name.value,<sp/></highlight><highlight class="stringliteral">&quot;proposal<sp/>not<sp/>found&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>itr<sp/>=<sp/>std::find(<sp/>apps.provided_approvals.begin(),<sp/>apps.provided_approvals.end(),<sp/>level<sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check(<sp/>itr<sp/>!=<sp/>apps.provided_approvals.end(),<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>approval<sp/>previously<sp/>granted&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>old_apptable.modify(<sp/>apps,<sp/>proposer,<sp/>[&amp;](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>a<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.requested_approvals.push_back(<sp/>level<sp/>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.provided_approvals.erase(<sp/>itr<sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosio_1_1multisig_1a4f80f1ab1d2bd88d9ee3964e8cf34771" kindref="member">proposals</ref><sp/>proptable(<sp/>get_self(),<sp/>proposer.value<sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>prop<sp/>=<sp/>proptable.get(<sp/>proposal_name.value,<sp/></highlight><highlight class="stringliteral">&quot;proposal<sp/>not<sp/>found&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>prop.earliest_exec_time.has_value()<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>prop.earliest_exec_time-&gt;has_value()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>table_op<sp/>=<sp/>[](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;){};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<ref refid="namespaceeosio_1af902933339a070f5af0f38e4c4af7f07" kindref="member">trx_is_authorized</ref>(<ref refid="namespaceeosio_1abaa5d0db854d769ac41e2f062f417485" kindref="member">get_approvals_and_adjust_table</ref>(get_self(),<sp/>proposer,<sp/>proposal_name,<sp/>table_op),<sp/>prop.packed_transaction)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proptable.modify(<sp/>prop,<sp/>proposer,<sp/>[&amp;](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>p<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.earliest_exec_time.emplace();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>transaction_header<sp/>trx_header<sp/>=<sp/><ref refid="namespaceeosio_1a5a18f73f0452f4391a2e8abfc7d0f373" kindref="member">get_trx_header</ref>(prop.packed_transaction.data(),<sp/>prop.packed_transaction.size());</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check(<sp/>trx_header.delay_sec.value<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;old<sp/>proposals<sp/>are<sp/>not<sp/>allowed<sp/>to<sp/>have<sp/>non-zero<sp/>`delay_sec`;<sp/>cancel<sp/>and<sp/>retry&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1multisig_1a2dc849ab961ea31c0e93ebace0f0dd00" kindref="member">multisig::cancel</ref>(<sp/>name<sp/>proposer,<sp/>name<sp/>proposal_name,<sp/>name<sp/>canceler<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/>require_auth(<sp/>canceler<sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosio_1_1multisig_1a4f80f1ab1d2bd88d9ee3964e8cf34771" kindref="member">proposals</ref><sp/>proptable(<sp/>get_self(),<sp/>proposer.value<sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>prop<sp/>=<sp/>proptable.get(<sp/>proposal_name.value,<sp/></highlight><highlight class="stringliteral">&quot;proposal<sp/>not<sp/>found&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>canceler<sp/>!=<sp/>proposer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check(<sp/>unpack&lt;transaction_header&gt;(<sp/>prop.packed_transaction<sp/>).expiration<sp/>&lt;<sp/>eosio::time_point_sec(current_time_point()),<sp/></highlight><highlight class="stringliteral">&quot;cannot<sp/>cancel<sp/>until<sp/>expiration&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/>proptable.erase(prop);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//remove<sp/>from<sp/>new<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosio_1_1multisig_1a63a04fd1cf67821038757093a19934e4" kindref="member">approvals</ref><sp/>apptable(<sp/>get_self(),<sp/>proposer.value<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>apps_it<sp/>=<sp/>apptable.find(<sp/>proposal_name.value<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>apps_it<sp/>!=<sp/>apptable.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>apptable.erase(apps_it);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classeosio_1_1multisig_1a1ad32ac47eba850bcecb5940b21b1f04" kindref="member">old_approvals</ref><sp/>old_apptable(<sp/>get_self(),<sp/>proposer.value<sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>apps_it<sp/>=<sp/>old_apptable.find(<sp/>proposal_name.value<sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check(<sp/>apps_it<sp/>!=<sp/>old_apptable.end(),<sp/></highlight><highlight class="stringliteral">&quot;proposal<sp/>not<sp/>found&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>old_apptable.erase(apps_it);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1multisig_1ac31b3d91892bf8fcdad8d6f123c278ff" kindref="member">multisig::exec</ref>(<sp/>name<sp/>proposer,<sp/>name<sp/>proposal_name,<sp/>name<sp/>executer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/>require_auth(<sp/>executer<sp/>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosio_1_1multisig_1a4f80f1ab1d2bd88d9ee3964e8cf34771" kindref="member">proposals</ref><sp/>proptable(<sp/>get_self(),<sp/>proposer.value<sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>prop<sp/>=<sp/>proptable.get(<sp/>proposal_name.value,<sp/></highlight><highlight class="stringliteral">&quot;proposal<sp/>not<sp/>found&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/>transaction_header<sp/>trx_header;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;action&gt;<sp/>context_free_actions;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;action&gt;<sp/>actions;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/>datastream&lt;const<sp/>char*&gt;<sp/>ds(<sp/>prop.packed_transaction.data(),<sp/>prop.packed_transaction.size()<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/>ds<sp/>&gt;&gt;<sp/>trx_header;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/>check(<sp/>trx_header.expiration<sp/>&gt;=<sp/>eosio::time_point_sec(current_time_point()),<sp/></highlight><highlight class="stringliteral">&quot;transaction<sp/>expired&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/>ds<sp/>&gt;&gt;<sp/>context_free_actions;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/>check(<sp/>context_free_actions.empty(),<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>allowed<sp/>to<sp/>`exec`<sp/>a<sp/>transaction<sp/>with<sp/>context-free<sp/>actions&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/>ds<sp/>&gt;&gt;<sp/>actions;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>table_op<sp/>=<sp/>[](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>table,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>table_iter)<sp/>{<sp/>table.erase(table_iter);<sp/>};</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/><ref refid="namespaceeosio_1af902933339a070f5af0f38e4c4af7f07" kindref="member">trx_is_authorized</ref>(<ref refid="namespaceeosio_1abaa5d0db854d769ac41e2f062f417485" kindref="member">get_approvals_and_adjust_table</ref>(get_self(),<sp/>proposer,<sp/>proposal_name,<sp/>table_op),<sp/>prop.packed_transaction);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/>check(<sp/>ok,<sp/></highlight><highlight class="stringliteral">&quot;transaction<sp/>authorization<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>prop.earliest_exec_time.has_value()<sp/>&amp;&amp;<sp/>prop.earliest_exec_time-&gt;has_value()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check(<sp/>**prop.earliest_exec_time<sp/>&lt;=<sp/>current_time_point(),<sp/></highlight><highlight class="stringliteral">&quot;too<sp/>early<sp/>to<sp/>execute&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check(<sp/>trx_header.delay_sec.value<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;old<sp/>proposals<sp/>are<sp/>not<sp/>allowed<sp/>to<sp/>have<sp/>non-zero<sp/>`delay_sec`;<sp/>cancel<sp/>and<sp/>retry&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>act<sp/>:<sp/>actions)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>act.send();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/>proptable.erase(prop);</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1multisig_1a59e26671d5a02dd2f809b08f56b4d3b8" kindref="member">multisig::invalidate</ref>(<sp/>name<sp/><ref refid="structaccount" kindref="compound">account</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/>require_auth(<sp/><ref refid="structaccount" kindref="compound">account</ref><sp/>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosio_1_1multisig_1a22ec4ca93c516c0b46aa306ef14929e6" kindref="member">invalidations</ref><sp/>inv_table(<sp/>get_self(),<sp/>get_self().value<sp/>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>inv_table.find(<sp/><ref refid="structaccount" kindref="compound">account</ref>.value<sp/>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>it<sp/>==<sp/>inv_table.end()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inv_table.emplace(<sp/><ref refid="structaccount" kindref="compound">account</ref>,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.account<sp/>=<sp/><ref refid="structaccount" kindref="compound">account</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.last_invalidation_time<sp/>=<sp/>current_time_point();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inv_table.modify(<sp/>it,<sp/><ref refid="structaccount" kindref="compound">account</ref>,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.last_invalidation_time<sp/>=<sp/>current_time_point();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal">transaction_header<sp/><ref refid="namespaceeosio_1a5a18f73f0452f4391a2e8abfc7d0f373" kindref="member">get_trx_header</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/>datastream&lt;const<sp/>char*&gt;<sp/>ds<sp/>=<sp/>{ptr,<sp/>sz};</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/>transaction_header<sp/>trx_header;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/>ds<sp/>&gt;&gt;<sp/>trx_header;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trx_header;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceeosio_1af902933339a070f5af0f38e4c4af7f07" kindref="member">trx_is_authorized</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;permission_level&gt;&amp;<sp/>approvals,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;char&gt;&amp;<sp/>packed_trx)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>packed_approvals<sp/>=<sp/>pack(approvals);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check_transaction_authorization(</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packed_trx.data(),<sp/>packed_trx.size(),</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)0,<sp/>0,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packed_approvals.data(),<sp/>packed_approvals.size()</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal">}<sp/></highlight></codeline>
    </programlisting>
    <location file="system/contracts/eosio.msig/src/eosio.msig.cpp"/>
  </compounddef>
</doxygen>
