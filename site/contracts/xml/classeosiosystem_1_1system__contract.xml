<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="ru">
  <compounddef id="classeosiosystem_1_1system__contract" kind="class" language="C++" prot="public">
    <compoundname>eosiosystem::system_contract</compoundname>
    <basecompoundref refid="classeosiosystem_1_1native" prot="public" virt="non-virtual">eosiosystem::native</basecompoundref>
    <includes refid="eosio_8system_8hpp" local="no">eosio.system.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1aba8828e31f9dc03a30c0888689f91d86" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;init&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a314f5afbd81e51d5e319ba81398f2e06" kindref="member">system_contract::init</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::init_action =  eosio::action_wrapper&lt;&quot;init&quot;_n, &amp;system_contract::init&gt;</definition>
        <argsstring></argsstring>
        <name>init_action</name>
        <qualifiedname>eosiosystem::system_contract::init_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="872" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="872" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1aa1920281d36995e7a5017a5369b68a4b" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;setcode&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a56c686a08fd581a617980500efd795ad" kindref="member">system_contract::setcode</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::setcode_action =  eosio::action_wrapper&lt;&quot;setcode&quot;_n, &amp;system_contract::setcode&gt;</definition>
        <argsstring></argsstring>
        <name>setcode_action</name>
        <qualifiedname>eosiosystem::system_contract::setcode_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="873" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="873" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1ac0dff966e1b20b198bd7057c2d643538" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;initemission&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1af6ed697e2d198ca5bce29cbacb682490" kindref="member">system_contract::initemission</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::initemission_action =  eosio::action_wrapper&lt;&quot;initemission&quot;_n, &amp;system_contract::initemission&gt;</definition>
        <argsstring></argsstring>
        <name>initemission_action</name>
        <qualifiedname>eosiosystem::system_contract::initemission_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="874" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="874" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a405cf7f71120642d5d043fa4648be9b1" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;setacctram&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1acdd7c75402f43876338d33649d2e6903" kindref="member">system_contract::setacctram</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::setacctram_action =  eosio::action_wrapper&lt;&quot;setacctram&quot;_n, &amp;system_contract::setacctram&gt;</definition>
        <argsstring></argsstring>
        <name>setacctram_action</name>
        <qualifiedname>eosiosystem::system_contract::setacctram_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="876" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="876" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1add114cf85734d0c85edacb0eb7167883" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;setacctnet&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1aa4559928f468c62867916d1251fa33b3" kindref="member">system_contract::setacctnet</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::setacctnet_action =  eosio::action_wrapper&lt;&quot;setacctnet&quot;_n, &amp;system_contract::setacctnet&gt;</definition>
        <argsstring></argsstring>
        <name>setacctnet_action</name>
        <qualifiedname>eosiosystem::system_contract::setacctnet_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="877" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="877" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a7a538179a1332d7f139e881cff0c04cc" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;setacctcpu&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a9a005d230746b68cafa934a067f287af" kindref="member">system_contract::setacctcpu</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::setacctcpu_action =  eosio::action_wrapper&lt;&quot;setacctcpu&quot;_n, &amp;system_contract::setacctcpu&gt;</definition>
        <argsstring></argsstring>
        <name>setacctcpu_action</name>
        <qualifiedname>eosiosystem::system_contract::setacctcpu_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="878" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="878" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a0cca489c98b5874f5493f4447e7c52a9" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;activate&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a1873247483b285e19010b7469419a60d" kindref="member">system_contract::activate</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::activate_action =  eosio::action_wrapper&lt;&quot;activate&quot;_n, &amp;system_contract::activate&gt;</definition>
        <argsstring></argsstring>
        <name>activate_action</name>
        <qualifiedname>eosiosystem::system_contract::activate_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="880" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="880" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a1f08c7b7252348f1b64ad4f2699c4de5" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;delegatebw&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1aa54b498595abb1a3ad9c62c597d4f7b5" kindref="member">system_contract::delegatebw</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::delegatebw_action =  eosio::action_wrapper&lt;&quot;delegatebw&quot;_n, &amp;system_contract::delegatebw&gt;</definition>
        <argsstring></argsstring>
        <name>delegatebw_action</name>
        <qualifiedname>eosiosystem::system_contract::delegatebw_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="881" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="881" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a5751bdd1f68be3270595b4bba1a241f4" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;undelegatebw&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a4db0be2c90d342ecd269fdbb57c51091" kindref="member">system_contract::undelegatebw</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::undelegatebw_action =  eosio::action_wrapper&lt;&quot;undelegatebw&quot;_n, &amp;system_contract::undelegatebw&gt;</definition>
        <argsstring></argsstring>
        <name>undelegatebw_action</name>
        <qualifiedname>eosiosystem::system_contract::undelegatebw_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="882" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="882" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a379cc18be05f0d81a71f15a52f7c6f48" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;buyram&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a04be77ea83f87d1533606390c37cf5d1" kindref="member">system_contract::buyram</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::buyram_action =  eosio::action_wrapper&lt;&quot;buyram&quot;_n, &amp;system_contract::buyram&gt;</definition>
        <argsstring></argsstring>
        <name>buyram_action</name>
        <qualifiedname>eosiosystem::system_contract::buyram_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="884" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="884" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1af7ddbe541c404f6a8d1094b8278e6128" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;buyrambytes&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a93950629ac6f931b47542727a5411097" kindref="member">system_contract::buyrambytes</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::buyrambytes_action =  eosio::action_wrapper&lt;&quot;buyrambytes&quot;_n, &amp;system_contract::buyrambytes&gt;</definition>
        <argsstring></argsstring>
        <name>buyrambytes_action</name>
        <qualifiedname>eosiosystem::system_contract::buyrambytes_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="885" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="885" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a5ef59ea3e3db4bb9bbe075531109d687" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;refund&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a10a63e006f9869caeaf2592bdfbccc42" kindref="member">system_contract::refund</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::refund_action =  eosio::action_wrapper&lt;&quot;refund&quot;_n, &amp;system_contract::refund&gt;</definition>
        <argsstring></argsstring>
        <name>refund_action</name>
        <qualifiedname>eosiosystem::system_contract::refund_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="887" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="887" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1ab5efbdbade110f33fed3c39083d3f76f" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;regproducer&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a252441c7b5811068d336f37ab627ecd9" kindref="member">system_contract::regproducer</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::regproducer_action =  eosio::action_wrapper&lt;&quot;regproducer&quot;_n, &amp;system_contract::regproducer&gt;</definition>
        <argsstring></argsstring>
        <name>regproducer_action</name>
        <qualifiedname>eosiosystem::system_contract::regproducer_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="889" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="889" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1ae39dfe220205b48d192a90abc3e790da" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;regproducer2&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a6c1143de786b7d7601ac0b0968cb0f19" kindref="member">system_contract::regproducer2</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::regproducer2_action =  eosio::action_wrapper&lt;&quot;regproducer2&quot;_n, &amp;system_contract::regproducer2&gt;</definition>
        <argsstring></argsstring>
        <name>regproducer2_action</name>
        <qualifiedname>eosiosystem::system_contract::regproducer2_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="890" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="890" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a34d06c5e737193d6cf707edc7d57407e" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;unregprod&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a0b8c45d3226929472bc5785742c05152" kindref="member">system_contract::unregprod</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::unregprod_action =  eosio::action_wrapper&lt;&quot;unregprod&quot;_n, &amp;system_contract::unregprod&gt;</definition>
        <argsstring></argsstring>
        <name>unregprod_action</name>
        <qualifiedname>eosiosystem::system_contract::unregprod_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="892" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="892" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a4caad060672784b32a36a2d634a5f3b3" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;setram&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1ad8a6eb47fd97c9f243019d93916ff78f" kindref="member">system_contract::setram</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::setram_action =  eosio::action_wrapper&lt;&quot;setram&quot;_n, &amp;system_contract::setram&gt;</definition>
        <argsstring></argsstring>
        <name>setram_action</name>
        <qualifiedname>eosiosystem::system_contract::setram_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="894" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="894" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1aad4ad84241c38c3541a0438fbca0cc9b" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;setramrate&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a7d984add31b6060bb59d472f9f1bd1a1" kindref="member">system_contract::setramrate</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::setramrate_action =  eosio::action_wrapper&lt;&quot;setramrate&quot;_n, &amp;system_contract::setramrate&gt;</definition>
        <argsstring></argsstring>
        <name>setramrate_action</name>
        <qualifiedname>eosiosystem::system_contract::setramrate_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="895" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="895" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1aab2cd194b5dbe033163f2ed21c28ebc4" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;voteproducer&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a19d51a2b9b57ffb656612c280ee4ab4e" kindref="member">system_contract::voteproducer</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::voteproducer_action =  eosio::action_wrapper&lt;&quot;voteproducer&quot;_n, &amp;system_contract::voteproducer&gt;</definition>
        <argsstring></argsstring>
        <name>voteproducer_action</name>
        <qualifiedname>eosiosystem::system_contract::voteproducer_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="898" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="898" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1aad3da6aae1bb02b7c177b98796a5107a" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;voteupdate&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1afd8f9ea7890c647010bc9bccdcda6ba9" kindref="member">system_contract::voteupdate</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::voteupdate_action =  eosio::action_wrapper&lt;&quot;voteupdate&quot;_n, &amp;system_contract::voteupdate&gt;</definition>
        <argsstring></argsstring>
        <name>voteupdate_action</name>
        <qualifiedname>eosiosystem::system_contract::voteupdate_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="899" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="899" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a8b1c5e40db2dd35043dc289fec274da2" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;regproxy&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a7192c64e5a9d0b9b202390dbfade0858" kindref="member">system_contract::regproxy</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::regproxy_action =  eosio::action_wrapper&lt;&quot;regproxy&quot;_n, &amp;system_contract::regproxy&gt;</definition>
        <argsstring></argsstring>
        <name>regproxy_action</name>
        <qualifiedname>eosiosystem::system_contract::regproxy_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="901" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="901" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a6fb5d3547618397ee9411fe31c549565" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;claimrewards&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a34b35d1f073383e599d4e2bb56e20524" kindref="member">system_contract::claimrewards</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::claimrewards_action =  eosio::action_wrapper&lt;&quot;claimrewards&quot;_n, &amp;system_contract::claimrewards&gt;</definition>
        <argsstring></argsstring>
        <name>claimrewards_action</name>
        <qualifiedname>eosiosystem::system_contract::claimrewards_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="903" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="903" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a9cd7fa6413479ac6ffe3e548b847ea64" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;rmvproducer&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a2a41dc1871059a536a55626b8c76f5b9" kindref="member">system_contract::rmvproducer</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::rmvproducer_action =  eosio::action_wrapper&lt;&quot;rmvproducer&quot;_n, &amp;system_contract::rmvproducer&gt;</definition>
        <argsstring></argsstring>
        <name>rmvproducer_action</name>
        <qualifiedname>eosiosystem::system_contract::rmvproducer_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="905" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="905" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a56315050770b4f79af95042a95b58507" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;updtrevision&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a0af4a55018801131ae7dc7a923bead0b" kindref="member">system_contract::updtrevision</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::updtrevision_action =  eosio::action_wrapper&lt;&quot;updtrevision&quot;_n, &amp;system_contract::updtrevision&gt;</definition>
        <argsstring></argsstring>
        <name>updtrevision_action</name>
        <qualifiedname>eosiosystem::system_contract::updtrevision_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="907" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="907" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a4061267666d68ba49beda47dc1440194" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;bidname&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1af1c329fbf0e3e45b62b729e6ee743c62" kindref="member">system_contract::bidname</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::bidname_action =  eosio::action_wrapper&lt;&quot;bidname&quot;_n, &amp;system_contract::bidname&gt;</definition>
        <argsstring></argsstring>
        <name>bidname_action</name>
        <qualifiedname>eosiosystem::system_contract::bidname_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="909" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="909" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a6d35995c9e7932d40ea91609744c9aa3" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;bidrefund&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a1ad9f05ad7242412bf5ad87706f923ff" kindref="member">system_contract::bidrefund</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::bidrefund_action =  eosio::action_wrapper&lt;&quot;bidrefund&quot;_n, &amp;system_contract::bidrefund&gt;</definition>
        <argsstring></argsstring>
        <name>bidrefund_action</name>
        <qualifiedname>eosiosystem::system_contract::bidrefund_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="910" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="910" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a7c19bb1d99d1abbd00be825f69fbfc3f" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;setpriv&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a648ec27a9bc3bf7e36c5c88f6932b9ca" kindref="member">system_contract::setpriv</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::setpriv_action =  eosio::action_wrapper&lt;&quot;setpriv&quot;_n, &amp;system_contract::setpriv&gt;</definition>
        <argsstring></argsstring>
        <name>setpriv_action</name>
        <qualifiedname>eosiosystem::system_contract::setpriv_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="912" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="912" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a5546364ddc017d87f96ed0e9a6b1f931" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;setalimits&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1ad5b9178dfbe60ba6059c52d488ecf303" kindref="member">system_contract::setalimits</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::setalimits_action =  eosio::action_wrapper&lt;&quot;setalimits&quot;_n, &amp;system_contract::setalimits&gt;</definition>
        <argsstring></argsstring>
        <name>setalimits_action</name>
        <qualifiedname>eosiosystem::system_contract::setalimits_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="913" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="913" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1ae0cbe561757f43c3856caf74ff58ea2b" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;setparams&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1aa4ea1b93cfb3d99fcaaabb994c711bee" kindref="member">system_contract::setparams</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::setparams_action =  eosio::action_wrapper&lt;&quot;setparams&quot;_n, &amp;system_contract::setparams&gt;</definition>
        <argsstring></argsstring>
        <name>setparams_action</name>
        <qualifiedname>eosiosystem::system_contract::setparams_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="915" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="915" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a752504e09e8196326e836ef099588650" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;cfgpowerup&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1ae71212071f747832a2a56eb4868d9c81" kindref="member">system_contract::cfgpowerup</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::cfgpowerup_action =  eosio::action_wrapper&lt;&quot;cfgpowerup&quot;_n, &amp;system_contract::cfgpowerup&gt;</definition>
        <argsstring></argsstring>
        <name>cfgpowerup_action</name>
        <qualifiedname>eosiosystem::system_contract::cfgpowerup_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="917" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="917" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1ac85b9bef9b3fc161a14712f52ec31e5b" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;powerupexec&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1aa573d628b237c167aa99fc71cb150736" kindref="member">system_contract::powerupexec</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::powerupexec_action =  eosio::action_wrapper&lt;&quot;powerupexec&quot;_n, &amp;system_contract::powerupexec&gt;</definition>
        <argsstring></argsstring>
        <name>powerupexec_action</name>
        <qualifiedname>eosiosystem::system_contract::powerupexec_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="918" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="918" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1ac3cd9f92205bbc3ba9fdfdaacdeedf61" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;powerup&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1ab3d6d9e77d6b9ac63b79e6d8104d8312" kindref="member">system_contract::powerup</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::powerup_action =  eosio::action_wrapper&lt;&quot;powerup&quot;_n, &amp;system_contract::powerup&gt;</definition>
        <argsstring></argsstring>
        <name>powerup_action</name>
        <qualifiedname>eosiosystem::system_contract::powerup_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="919" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="919" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a41105c20306ae2478d91e0fab56f2e58" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceeosiosystem_1a129e3f7382aec9aeb9122766f5490ea6" kindref="member">voters_table</ref></type>
        <definition>voters_table eosiosystem::system_contract::_voters</definition>
        <argsstring></argsstring>
        <name>_voters</name>
        <qualifiedname>eosiosystem::system_contract::_voters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="423" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a668decff73ee059f8e89cd885e85f3ce" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceeosiosystem_1aef9278e2c0a2a94a5ca2da72768058f9" kindref="member">producers_table</ref></type>
        <definition>producers_table eosiosystem::system_contract::_producers</definition>
        <argsstring></argsstring>
        <name>_producers</name>
        <qualifiedname>eosiosystem::system_contract::_producers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="424" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1ae0fead4e6333fb6ff81b38c873beb484" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceeosiosystem_1a2757bc4c835154772dce0d5891c93b58" kindref="member">global_state_singleton</ref></type>
        <definition>global_state_singleton eosiosystem::system_contract::_global</definition>
        <argsstring></argsstring>
        <name>_global</name>
        <qualifiedname>eosiosystem::system_contract::_global</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="425" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a40e74853eda24e1b15d8f5b6499c8820" prot="private" static="no" mutable="no">
        <type><ref refid="structeosiosystem_1_1eosio__global__state" kindref="compound">eosio_global_state</ref></type>
        <definition>eosio_global_state eosiosystem::system_contract::_gstate</definition>
        <argsstring></argsstring>
        <name>_gstate</name>
        <qualifiedname>eosiosystem::system_contract::_gstate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="426" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a2b149f7463767158fac80045940da7d5" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceeosiosystem_1a084bb74fe483e49001e674d5e66001de" kindref="member">rammarket</ref></type>
        <definition>rammarket eosiosystem::system_contract::_rammarket</definition>
        <argsstring></argsstring>
        <name>_rammarket</name>
        <qualifiedname>eosiosystem::system_contract::_rammarket</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="427" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="427" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1adfc25b00a14e482c7fb1161dd38096bd" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name eosiosystem::system_contract::active_permission</definition>
        <argsstring></argsstring>
        <name>active_permission</name>
        <qualifiedname>eosiosystem::system_contract::active_permission</qualifiedname>
        <initializer>{&quot;active&quot;_n}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="430" column="39" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a21c029a978b1648e8cea9d7c60a5faf3" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name eosiosystem::system_contract::token_account</definition>
        <argsstring></argsstring>
        <name>token_account</name>
        <qualifiedname>eosiosystem::system_contract::token_account</qualifiedname>
        <initializer>{&quot;eosio.token&quot;_n}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="431" column="39" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a5b9e69a4f134680f236b696f7ec2ca0f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name eosiosystem::system_contract::ram_account</definition>
        <argsstring></argsstring>
        <name>ram_account</name>
        <qualifiedname>eosiosystem::system_contract::ram_account</qualifiedname>
        <initializer>{&quot;eosio.ram&quot;_n}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="432" column="39" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a8784bf6def9ebc7dac2cbba94c715b03" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name eosiosystem::system_contract::ramfee_account</definition>
        <argsstring></argsstring>
        <name>ramfee_account</name>
        <qualifiedname>eosiosystem::system_contract::ramfee_account</qualifiedname>
        <initializer>{&quot;eosio.ramfee&quot;_n}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="433" column="39" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a5cde7e6a57d453cc63d509c6657355e2" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name eosiosystem::system_contract::stake_account</definition>
        <argsstring></argsstring>
        <name>stake_account</name>
        <qualifiedname>eosiosystem::system_contract::stake_account</qualifiedname>
        <initializer>{&quot;eosio.stake&quot;_n}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="434" column="39" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1aeec189aa121eaf90aee0c180cd59cc26" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name eosiosystem::system_contract::bpay_account</definition>
        <argsstring></argsstring>
        <name>bpay_account</name>
        <qualifiedname>eosiosystem::system_contract::bpay_account</qualifiedname>
        <initializer>{&quot;eosio.bpay&quot;_n}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="435" column="39" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a3b108816fa9ae2ad0c89aae2ec31585b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name eosiosystem::system_contract::vpay_account</definition>
        <argsstring></argsstring>
        <name>vpay_account</name>
        <qualifiedname>eosiosystem::system_contract::vpay_account</qualifiedname>
        <initializer>{&quot;eosio.vpay&quot;_n}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="436" column="39" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a03e79dcf0584dd7fd1dbb1aa072befb1" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name eosiosystem::system_contract::names_account</definition>
        <argsstring></argsstring>
        <name>names_account</name>
        <qualifiedname>eosiosystem::system_contract::names_account</qualifiedname>
        <initializer>{&quot;eosio.names&quot;_n}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="437" column="39" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a0b608cd46d931874c80e9b72c4f0d664" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name eosiosystem::system_contract::null_account</definition>
        <argsstring></argsstring>
        <name>null_account</name>
        <qualifiedname>eosiosystem::system_contract::null_account</qualifiedname>
        <initializer>{&quot;eosio.null&quot;_n}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="438" column="39" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1ac0eb9382f47fc00bcf66b81a26805e73" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr symbol</type>
        <definition>constexpr symbol eosiosystem::system_contract::ramcore_symbol</definition>
        <argsstring></argsstring>
        <name>ramcore_symbol</name>
        <qualifiedname>eosiosystem::system_contract::ramcore_symbol</qualifiedname>
        <initializer>= symbol(symbol_code(&quot;RAMCORE&quot;), 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="439" column="34" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a6317a93cd512ff0fc3b6a802bd5aa229" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr symbol</type>
        <definition>constexpr symbol eosiosystem::system_contract::ram_symbol</definition>
        <argsstring></argsstring>
        <name>ram_symbol</name>
        <qualifiedname>eosiosystem::system_contract::ram_symbol</qualifiedname>
        <initializer>= symbol(symbol_code(&quot;RAM&quot;), 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="440" column="34" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="440" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ae1a0434a7adf53cc3a168f1b2f947ebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eosiosystem::system_contract::system_contract</definition>
        <argsstring>(name s, name code, datastream&lt; const char * &gt; ds)</argsstring>
        <name>system_contract</name>
        <qualifiedname>eosiosystem::system_contract::system_contract</qualifiedname>
        <param>
          <type>name</type>
          <declname>s</declname>
        </param>
        <param>
          <type>name</type>
          <declname>code</declname>
        </param>
        <param>
          <type>datastream&lt; const char * &gt;</type>
          <declname>ds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="442" column="10" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="14" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ae0264c3f2d2a640d9a60a4c9c9ca089c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eosiosystem::system_contract::~system_contract</definition>
        <argsstring>()</argsstring>
        <name>~system_contract</name>
        <qualifiedname>eosiosystem::system_contract::~system_contract</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="443" column="10" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a314f5afbd81e51d5e319ba81398f2e06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::init</definition>
        <argsstring>(uint64_t version, const symbol &amp;core)</argsstring>
        <name>init</name>
        <qualifiedname>eosiosystem::system_contract::init</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>version</declname>
        </param>
        <param>
          <type>const symbol &amp;</type>
          <declname>core</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The Init action initializes the system contract for a version and a symbol. Only succeeds when:<itemizedlist>
<listitem><para>version is 0 and</para>
</listitem><listitem><para>symbol is found and</para>
</listitem><listitem><para>system token supply is greater than 0,</para>
</listitem><listitem><para>and system contract wasn’t already been initialized.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para>- the version, has to be 0, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>core</parametername>
</parameternamelist>
<parameterdescription>
<para>- the system symbol. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="466" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="495" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a56c686a08fd581a617980500efd795ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::setcode</definition>
        <argsstring>(const name &amp;account, uint8_t vmtype, uint8_t vmversion, const std::vector&lt; char &gt; &amp;code, const binary_extension&lt; std::string &gt; &amp;memo)</argsstring>
        <name>setcode</name>
        <qualifiedname>eosiosystem::system_contract::setcode</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>account</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>vmtype</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>vmversion</declname>
        </param>
        <param>
          <type>const std::vector&lt; char &gt; &amp;</type>
          <declname>code</declname>
        </param>
        <param>
          <type>const binary_extension&lt; std::string &gt; &amp;</type>
          <declname>memo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="470" column="16" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="533" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1af6ed697e2d198ca5bce29cbacb682490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::initemission</definition>
        <argsstring>(eosio::asset init_supply, uint64_t tact_duration, double emission_factor)</argsstring>
        <name>initemission</name>
        <qualifiedname>eosiosystem::system_contract::initemission</qualifiedname>
        <param>
          <type>eosio::asset</type>
          <declname>init_supply</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>tact_duration</declname>
        </param>
        <param>
          <type>double</type>
          <declname>emission_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Инициализация тактовой эмиссии <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tact_duration</parametername>
</parameternamelist>
<parameterdescription>
<para>- продолжительность такта в секундах, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>emission_factor</parametername>
</parameternamelist>
<parameterdescription>
<para>- множитель эмиссии от 0 до 2.618. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="479" column="15" bodyfile="system/contracts/eosio.system/src/powerup.cpp" bodystart="280" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ae75458e3f898b3bc834311fa54abc6a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::onblock</definition>
        <argsstring>(ignore&lt; block_header &gt; header)</argsstring>
        <name>onblock</name>
        <qualifiedname>eosiosystem::system_contract::onblock</qualifiedname>
        <param>
          <type>ignore&lt; <ref refid="structeosiosystem_1_1block__header" kindref="compound">block_header</ref> &gt;</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>On block action. This special action is triggered when a block is applied by the given producer and cannot be generated from any other source. It is used to pay producers and calculate missed blocks of other producers. Producer pay is deposited into the producer&apos;s stake balance and can be withdrawn over time. Once a minute, it may update the active producer config from the producer votes. The action also populates the blockinfo table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>- the block header produced. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>until activation, no new rewards are paid</para>
<para>start the presses</para>
<para>At startup the initial producer may not be one that is registered / elected and therefore there may be no producer object for them.</para>
<para>only update block producers once every minute, block_timestamp is in half seconds</para>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="492" column="15" bodyfile="system/contracts/eosio.system/src/producer_pay.cpp" bodystart="10" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ad5b9178dfbe60ba6059c52d488ecf303" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::setalimits</definition>
        <argsstring>(const name &amp;account, int64_t ram_bytes, int64_t net_weight, int64_t cpu_weight)</argsstring>
        <name>setalimits</name>
        <qualifiedname>eosiosystem::system_contract::setalimits</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>account</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ram_bytes</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>net_weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>cpu_weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set account limits action sets the resource limits of an account</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the account whose resource limit to be set, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ram_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>- ram limit in absolute bytes, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>net_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>- fractionally proportionate net limit of available resources based on (weight / total_weight_of_all_accounts), </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cpu_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>- fractionally proportionate cpu limit of available resources based on (weight / total_weight_of_all_accounts). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="503" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="210" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1acdd7c75402f43876338d33649d2e6903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::setacctram</definition>
        <argsstring>(const name &amp;account, const std::optional&lt; int64_t &gt; &amp;ram_bytes)</argsstring>
        <name>setacctram</name>
        <qualifiedname>eosiosystem::system_contract::setacctram</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>account</declname>
        </param>
        <param>
          <type>const std::optional&lt; int64_t &gt; &amp;</type>
          <declname>ram_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set account RAM limits action, which sets the RAM limits of an account</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the account whose resource limit to be set, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ram_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>- ram limit in absolute bytes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="512" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="228" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1aa4559928f468c62867916d1251fa33b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::setacctnet</definition>
        <argsstring>(const name &amp;account, const std::optional&lt; int64_t &gt; &amp;net_weight)</argsstring>
        <name>setacctnet</name>
        <qualifiedname>eosiosystem::system_contract::setacctnet</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>account</declname>
        </param>
        <param>
          <type>const std::optional&lt; int64_t &gt; &amp;</type>
          <declname>net_weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set account NET limits action, which sets the NET limits of an account</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the account whose resource limit to be set, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>net_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>- fractionally proportionate net limit of available resources based on (weight / total_weight_of_all_accounts). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="521" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="273" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a9a005d230746b68cafa934a067f287af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::setacctcpu</definition>
        <argsstring>(const name &amp;account, const std::optional&lt; int64_t &gt; &amp;cpu_weight)</argsstring>
        <name>setacctcpu</name>
        <qualifiedname>eosiosystem::system_contract::setacctcpu</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>account</declname>
        </param>
        <param>
          <type>const std::optional&lt; int64_t &gt; &amp;</type>
          <declname>cpu_weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set account CPU limits action, which sets the CPU limits of an account</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the account whose resource limit to be set, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cpu_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>- fractionally proportionate cpu limit of available resources based on (weight / total_weight_of_all_accounts). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="530" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="317" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a1873247483b285e19010b7469419a60d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::activate</definition>
        <argsstring>(const eosio::checksum256 &amp;feature_digest)</argsstring>
        <name>activate</name>
        <qualifiedname>eosiosystem::system_contract::activate</qualifiedname>
        <param>
          <type>const eosio::checksum256 &amp;</type>
          <declname>feature_digest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The activate action, activates a protocol feature</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feature_digest</parametername>
</parameternamelist>
<parameterdescription>
<para>- hash of the protocol feature to activate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="539" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="361" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1aa54b498595abb1a3ad9c62c597d4f7b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::delegatebw</definition>
        <argsstring>(const name &amp;from, const name &amp;receiver, const asset &amp;stake_net_quantity, const asset &amp;stake_cpu_quantity, bool transfer)</argsstring>
        <name>delegatebw</name>
        <qualifiedname>eosiosystem::system_contract::delegatebw</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>stake_net_quantity</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>stake_cpu_quantity</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delegate bandwidth and/or cpu action. Stakes SYS from the balance of <computeroutput>from</computeroutput> for the benefit of <computeroutput>receiver</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account to delegate bandwidth from, that is, the account holding tokens to be staked, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>receiver</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account to delegate bandwidth to, that is, the account to whose resources staked tokens are added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stake_net_quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>- tokens staked for NET bandwidth, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stake_cpu_quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>- tokens staked for CPU bandwidth, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transfer</parametername>
</parameternamelist>
<parameterdescription>
<para>- if true, ownership of staked tokens is transferred to <computeroutput>receiver</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para>All producers <computeroutput>from</computeroutput> account has voted for will have their votes updated immediately. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="557" column="15" bodyfile="system/contracts/eosio.system/src/delegate_bandwidth.cpp" bodystart="348" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a4db0be2c90d342ecd269fdbb57c51091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::undelegatebw</definition>
        <argsstring>(const name &amp;from, const name &amp;receiver, const asset &amp;unstake_net_quantity, const asset &amp;unstake_cpu_quantity)</argsstring>
        <name>undelegatebw</name>
        <qualifiedname>eosiosystem::system_contract::undelegatebw</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>unstake_net_quantity</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>unstake_cpu_quantity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Undelegate bandwidth action, decreases the total tokens delegated by <computeroutput>from</computeroutput> to <computeroutput>receiver</computeroutput> and/or frees the memory associated with the delegation if there is nothing left to delegate. This will cause an immediate reduction in net/cpu bandwidth of the receiver. A transaction is scheduled to send the tokens back to <computeroutput>from</computeroutput> after the staking period has passed. If existing transaction is scheduled, it will be canceled and a new transaction issued that has the combined undelegated amount. The <computeroutput>from</computeroutput> account loses voting power as a result of this call and all producer tallies are updated.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account to undelegate bandwidth from, that is, the account whose tokens will be unstaked, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>receiver</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account to undelegate bandwidth to, that is, the account to whose benefit tokens have been staked, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unstake_net_quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>- tokens to be unstaked from NET bandwidth, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unstake_cpu_quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>- tokens to be unstaked from CPU bandwidth,</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para>Unstaked tokens are transferred to <computeroutput>from</computeroutput> liquid balance via a deferred transaction with a delay of 3 days. </para>
</simplesect>
<simplesect kind="post"><para>If called during the delay period of a previous <computeroutput>undelegatebw</computeroutput> action, pending action is canceled and timer is reset. </para>
</simplesect>
<simplesect kind="post"><para>All producers <computeroutput>from</computeroutput> account has voted for will have their votes updated immediately. </para>
</simplesect>
<simplesect kind="post"><para>Bandwidth and storage for the deferred transaction are billed to <computeroutput>from</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="589" column="15" bodyfile="system/contracts/eosio.system/src/delegate_bandwidth.cpp" bodystart="367" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a04be77ea83f87d1533606390c37cf5d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::buyram</definition>
        <argsstring>(const name &amp;payer, const name &amp;receiver, const asset &amp;quant)</argsstring>
        <name>buyram</name>
        <qualifiedname>eosiosystem::system_contract::buyram</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>payer</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>quant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Buy ram action, increases receiver&apos;s ram quota based upon current price and quantity of tokens provided. An inline transfer from receiver to system contract of tokens will be executed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>payer</parametername>
</parameternamelist>
<parameterdescription>
<para>- the ram buyer, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>receiver</parametername>
</parameternamelist>
<parameterdescription>
<para>- the ram receiver, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quant</parametername>
</parameternamelist>
<parameterdescription>
<para>- the quantity of tokens to buy ram with.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
When buying ram the payer irreversibly transfers quant to system contract and only the receiver may reclaim the tokens via the sellram action. The receiver pays for the storage of all database records associated with this action.</para>
<para>RAM is a scarce resource whose supply is defined by global properties max_ram_size. RAM is priced using the bancor algorithm such that price-per-byte with a constant reserve ratio of 100:1. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="602" column="15" bodyfile="system/contracts/eosio.system/src/delegate_bandwidth.cpp" bodystart="42" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a6b00b900a128d2718244ac8a408f65d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::sellram</definition>
        <argsstring>(const name &amp;account, int64_t bytes)</argsstring>
        <name>sellram</name>
        <qualifiedname>eosiosystem::system_contract::sellram</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>account</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="606" column="15" bodyfile="system/contracts/eosio.system/src/delegate_bandwidth.cpp" bodystart="101" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a93950629ac6f931b47542727a5411097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::buyrambytes</definition>
        <argsstring>(const name &amp;payer, const name &amp;receiver, uint32_t bytes)</argsstring>
        <name>buyrambytes</name>
        <qualifiedname>eosiosystem::system_contract::buyrambytes</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>payer</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Buy a specific amount of ram bytes action. Increases receiver&apos;s ram in quantity of bytes provided. An inline transfer from receiver to system contract of tokens will be executed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>payer</parametername>
</parameternamelist>
<parameterdescription>
<para>- the ram buyer, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>receiver</parametername>
</parameternamelist>
<parameterdescription>
<para>- the ram receiver, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>- the quantity of ram to buy specified in bytes.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This action will buy an exact amount of ram and bill the payer the current market price. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="618" column="15" bodyfile="system/contracts/eosio.system/src/delegate_bandwidth.cpp" bodystart="25" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a10a63e006f9869caeaf2592bdfbccc42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::refund</definition>
        <argsstring>(const name &amp;owner)</argsstring>
        <name>refund</name>
        <qualifiedname>eosiosystem::system_contract::refund</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Refund action, this action is called after the delegation-period to claim all pending unstaked tokens belonging to owner.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>- the owner of the tokens claimed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="627" column="15" bodyfile="system/contracts/eosio.system/src/delegate_bandwidth.cpp" bodystart="387" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a252441c7b5811068d336f37ab627ecd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::regproducer</definition>
        <argsstring>(const name &amp;producer, const public_key &amp;producer_key, const std::string &amp;url, uint16_t location)</argsstring>
        <name>regproducer</name>
        <qualifiedname>eosiosystem::system_contract::regproducer</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>producer</declname>
        </param>
        <param>
          <type>const public_key &amp;</type>
          <declname>producer_key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>url</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register producer action, indicates that a particular account wishes to become a producer, this action will create a <computeroutput>producer_config</computeroutput> and a <computeroutput><ref refid="structeosiosystem_1_1producer__info" kindref="compound">producer_info</ref></computeroutput> object for <computeroutput>producer</computeroutput> scope in producers tables.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>producer</parametername>
</parameternamelist>
<parameterdescription>
<para>- account registering to be a producer candidate, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>producer_key</parametername>
</parameternamelist>
<parameterdescription>
<para>- the public key of the block producer, this is the key used by block producer to sign blocks, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>- the url of the block producer, normally the url of the block producer presentation website, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>- is the country code as defined in the ISO 3166, <ulink url="https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes">https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes</ulink></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>Producer to register is an account </para>
</simplesect>
<simplesect kind="pre"><para>Authority of producer to register </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="645" column="15" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="66" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a6c1143de786b7d7601ac0b0968cb0f19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::regproducer2</definition>
        <argsstring>(const name &amp;producer, const eosio::block_signing_authority &amp;producer_authority, const std::string &amp;url, uint16_t location)</argsstring>
        <name>regproducer2</name>
        <qualifiedname>eosiosystem::system_contract::regproducer2</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>producer</declname>
        </param>
        <param>
          <type>const eosio::block_signing_authority &amp;</type>
          <declname>producer_authority</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>url</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register producer action, indicates that a particular account wishes to become a producer, this action will create a <computeroutput>producer_config</computeroutput> and a <computeroutput><ref refid="structeosiosystem_1_1producer__info" kindref="compound">producer_info</ref></computeroutput> object for <computeroutput>producer</computeroutput> scope in producers tables.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>producer</parametername>
</parameternamelist>
<parameterdescription>
<para>- account registering to be a producer candidate, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>producer_authority</parametername>
</parameternamelist>
<parameterdescription>
<para>- the weighted threshold multisig block signing authority of the block producer used to sign blocks, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>- the url of the block producer, normally the url of the block producer presentation website, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>- is the country code as defined in the ISO 3166, <ulink url="https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes">https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes</ulink></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>Producer to register is an account </para>
</simplesect>
<simplesect kind="pre"><para>Authority of producer to register </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="661" column="15" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="73" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a0b8c45d3226929472bc5785742c05152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::unregprod</definition>
        <argsstring>(const name &amp;producer)</argsstring>
        <name>unregprod</name>
        <qualifiedname>eosiosystem::system_contract::unregprod</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>producer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unregister producer action, deactivates the block producer with account name <computeroutput>producer</computeroutput>.</para>
<para>Deactivate the block producer with account name <computeroutput>producer</computeroutput>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>producer</parametername>
</parameternamelist>
<parameterdescription>
<para>- the block producer account to unregister. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="670" column="15" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="84" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ad8a6eb47fd97c9f243019d93916ff78f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::setram</definition>
        <argsstring>(uint64_t max_ram_size)</argsstring>
        <name>setram</name>
        <qualifiedname>eosiosystem::system_contract::setram</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>max_ram_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set ram action sets the ram supply. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max_ram_size</parametername>
</parameternamelist>
<parameterdescription>
<para>- the amount of ram supply to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>decreasing ram might result market maker issues</para>
<para>Increase the amount of ram for sale based upon the change in max ram size.</para>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="677" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="40" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a7d984add31b6060bb59d472f9f1bd1a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::setramrate</definition>
        <argsstring>(uint16_t bytes_per_block)</argsstring>
        <name>setramrate</name>
        <qualifiedname>eosiosystem::system_contract::setramrate</qualifiedname>
        <param>
          <type>uint16_t</type>
          <declname>bytes_per_block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set ram rate action, sets the rate of increase of RAM in bytes per block. It is capped by the uint16_t to a maximum rate of 3 TB per year. If update_ram_supply hasn&apos;t been called for the most recent block, then new ram will be allocated at the old rate up to the present block before switching the rate.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bytes_per_block</parametername>
</parameternamelist>
<parameterdescription>
<para>- the amount of bytes per block increase to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="687" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="78" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a19d51a2b9b57ffb656612c280ee4ab4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::voteproducer</definition>
        <argsstring>(const name &amp;voter, const name &amp;proxy, const std::vector&lt; name &gt; &amp;producers)</argsstring>
        <name>voteproducer</name>
        <qualifiedname>eosiosystem::system_contract::voteproducer</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>voter</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>const std::vector&lt; name &gt; &amp;</type>
          <declname>producers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vote producer action, votes for a set of producers. This action updates the list of <computeroutput>producers</computeroutput> voted for, for <computeroutput>voter</computeroutput> account. If voting for a <computeroutput>proxy</computeroutput>, the producer votes will not change until the proxy updates their own vote. Voter can vote for a proxy <bold>or</bold> a list of at most 30 producers. Storage change is billed to <computeroutput>voter</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>voter</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account to change the voted producers for, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proxy</parametername>
</parameternamelist>
<parameterdescription>
<para>- the proxy to change the voted producers for, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>producers</parametername>
</parameternamelist>
<parameterdescription>
<para>- the list of producers to vote for, a maximum of 30 producers is allowed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>Producers must be sorted from lowest to highest and must be registered and active </para>
</simplesect>
<simplesect kind="pre"><para>If proxy is set then no producers can be voted for </para>
</simplesect>
<simplesect kind="pre"><para>If proxy is set then proxy account must exist and be registered as a proxy </para>
</simplesect>
<simplesect kind="pre"><para>Every listed producer or proxy must have been previously registered </para>
</simplesect>
<simplesect kind="pre"><para>Voter must authorize this action </para>
</simplesect>
<simplesect kind="pre"><para>Voter must have previously staked some EOS for voting </para>
</simplesect>
<simplesect kind="pre"><para>Voter-&gt;staked must be up to date</para>
</simplesect>
<simplesect kind="post"><para>Every producer previously voted for will have vote reduced by previous vote weight </para>
</simplesect>
<simplesect kind="post"><para>Every producer newly voted for will have vote increased by new vote amount </para>
</simplesect>
<simplesect kind="post"><para>Prior proxy will proxied_vote_weight decremented by previous vote weight </para>
</simplesect>
<simplesect kind="post"><para>New proxy will proxied_vote_weight incremented by new vote weight </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="713" column="15" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="136" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1afd8f9ea7890c647010bc9bccdcda6ba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::voteupdate</definition>
        <argsstring>(const name &amp;voter_name)</argsstring>
        <name>voteupdate</name>
        <qualifiedname>eosiosystem::system_contract::voteupdate</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>voter_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the vote weight for the producers or proxy <computeroutput>voter_name</computeroutput> currently votes for.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>voter_name</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account to update the votes for,</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para>the voter.staked will be updated </para>
</simplesect>
<simplesect kind="post"><para>previously voted for producers vote weight will be updated with new weight </para>
</simplesect>
<simplesect kind="post"><para>previously voted for proxy vote weight will be updated with new weight </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="725" column="15" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="143" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a7192c64e5a9d0b9b202390dbfade0858" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::regproxy</definition>
        <argsstring>(const name &amp;proxy, bool isproxy)</argsstring>
        <name>regproxy</name>
        <qualifiedname>eosiosystem::system_contract::regproxy</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isproxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register proxy action, sets <computeroutput>proxy</computeroutput> account as proxy. An account marked as a proxy can vote with the weight of other accounts which have selected it as a proxy. Other accounts must refresh their voteproducer to update the proxy&apos;s weight. Storage change is billed to <computeroutput>proxy</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>proxy</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account registering as voter proxy (or unregistering), </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isproxy</parametername>
</parameternamelist>
<parameterdescription>
<para>- if true, proxy is registered; if false, proxy is unregistered.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>Proxy must have something staked (existing row in voters table) </para>
</simplesect>
<simplesect kind="pre"><para>New state must be different than current state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="741" column="15" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="272" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1aa4ea1b93cfb3d99fcaaabb994c711bee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::setparams</definition>
        <argsstring>(const blockchain_parameters_t &amp;params)</argsstring>
        <name>setparams</name>
        <qualifiedname>eosiosystem::system_contract::setparams</qualifiedname>
        <param>
          <type>const <ref refid="namespaceeosiosystem_1a5e1fbfc9229b1616bfc70a519e26e9c2" kindref="member">blockchain_parameters_t</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the blockchain parameters. By tunning these parameters a degree of customization can be achieved. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>- New blockchain parameters to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="749" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="89" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a34b35d1f073383e599d4e2bb56e20524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::claimrewards</definition>
        <argsstring>(const name &amp;owner)</argsstring>
        <name>claimrewards</name>
        <qualifiedname>eosiosystem::system_contract::claimrewards</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Claim rewards action, claims block producing and vote rewards. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>- producer account claiming per-block and per-vote rewards. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="766" column="15" bodyfile="system/contracts/eosio.system/src/producer_pay.cpp" bodystart="83" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a648ec27a9bc3bf7e36c5c88f6932b9ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::setpriv</definition>
        <argsstring>(const name &amp;account, uint8_t is_priv)</argsstring>
        <name>setpriv</name>
        <qualifiedname>eosiosystem::system_contract::setpriv</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>account</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>is_priv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set privilege status for an account. Allows to set privilege status for an account (turn it on/off). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account to set the privileged status for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_priv</parametername>
</parameternamelist>
<parameterdescription>
<para>- 0 for false, &gt; 0 for true. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="774" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="205" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a2a41dc1871059a536a55626b8c76f5b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::rmvproducer</definition>
        <argsstring>(const name &amp;producer)</argsstring>
        <name>rmvproducer</name>
        <qualifiedname>eosiosystem::system_contract::rmvproducer</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>producer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove producer action, deactivates a producer by name, if not found asserts. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>producer</parametername>
</parameternamelist>
<parameterdescription>
<para>- the producer account to deactivate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="781" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="366" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a0af4a55018801131ae7dc7a923bead0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::updtrevision</definition>
        <argsstring>(uint8_t revision)</argsstring>
        <name>updtrevision</name>
        <qualifiedname>eosiosystem::system_contract::updtrevision</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>revision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update revision action, updates the current revision. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>revision</parametername>
</parameternamelist>
<parameterdescription>
<para>- it has to be incremented by 1 compared with current revision.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>Current revision can not be higher than 254, and has to be smaller than or equal 1 (“set upper bound to greatest revision supported in the code”). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="791" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="375" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1af1c329fbf0e3e45b62b729e6ee743c62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::bidname</definition>
        <argsstring>(const name &amp;bidder, const name &amp;newname, const asset &amp;bid)</argsstring>
        <name>bidname</name>
        <qualifiedname>eosiosystem::system_contract::bidname</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>bidder</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>newname</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>bid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bid name action, allows an account <computeroutput>bidder</computeroutput> to place a bid for a name <computeroutput>newname</computeroutput>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bidder</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account placing the bid, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newname</parametername>
</parameternamelist>
<parameterdescription>
<para>- the name the bid is placed for, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bid</parametername>
</parameternamelist>
<parameterdescription>
<para>- the amount of system tokens payed for the bid.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>Bids can be placed only on top-level suffix, </para>
</simplesect>
<simplesect kind="pre"><para>Non empty name, </para>
</simplesect>
<simplesect kind="pre"><para>Names longer than 12 chars are not allowed, </para>
</simplesect>
<simplesect kind="pre"><para>Names equal with 12 chars can be created without placing a bid, </para>
</simplesect>
<simplesect kind="pre"><para>Bid has to be bigger than zero, </para>
</simplesect>
<simplesect kind="pre"><para>Bid&apos;s symbol must be system token, </para>
</simplesect>
<simplesect kind="pre"><para>Bidder account has to be different than current highest bidder, </para>
</simplesect>
<simplesect kind="pre"><para>Bid must increase current bid by 10%, </para>
</simplesect>
<simplesect kind="pre"><para>Auction must still be opened. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="810" column="15" bodyfile="system/contracts/eosio.system/src/name_bidding.cpp" bodystart="12" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a1ad9f05ad7242412bf5ad87706f923ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::bidrefund</definition>
        <argsstring>(const name &amp;bidder, const name &amp;newname)</argsstring>
        <name>bidrefund</name>
        <qualifiedname>eosiosystem::system_contract::bidrefund</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>bidder</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>newname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bid refund action, allows the account <computeroutput>bidder</computeroutput> to get back the amount it bid so far on a <computeroutput>newname</computeroutput> name.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bidder</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account that gets refunded, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newname</parametername>
</parameternamelist>
<parameterdescription>
<para>- the name for which the bid was placed and now it gets refunded for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="819" column="15" bodyfile="system/contracts/eosio.system/src/name_bidding.cpp" bodystart="75" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ae71212071f747832a2a56eb4868d9c81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::cfgpowerup</definition>
        <argsstring>(powerup_config &amp;args)</argsstring>
        <name>cfgpowerup</name>
        <qualifiedname>eosiosystem::system_contract::cfgpowerup</qualifiedname>
        <param>
          <type><ref refid="structeosiosystem_1_1powerup__config" kindref="compound">powerup_config</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure the <computeroutput>power</computeroutput> market. The market becomes available the first time this action is invoked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="826" column="15" bodyfile="system/contracts/eosio.system/src/powerup.cpp" bodystart="98" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1aa573d628b237c167aa99fc71cb150736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::powerupexec</definition>
        <argsstring>(const name &amp;user, uint16_t max)</argsstring>
        <name>powerupexec</name>
        <qualifiedname>eosiosystem::system_contract::powerupexec</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>user</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Process power queue and update state. Action does not execute anything related to a specific user.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>- any account can execute this action </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>- number of queue items to process </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="835" column="15" bodyfile="system/contracts/eosio.system/src/powerup.cpp" bodystart="144" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ab3d6d9e77d6b9ac63b79e6d8104d8312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::powerup</definition>
        <argsstring>(const name &amp;payer, const name &amp;receiver, uint32_t days, const asset &amp;payment, const bool transfer=false)</argsstring>
        <name>powerup</name>
        <qualifiedname>eosiosystem::system_contract::powerup</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>payer</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>days</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>payment</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>transfer</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Powerup NET and CPU resources by percentage</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>payer</parametername>
</parameternamelist>
<parameterdescription>
<para>- the resource buyer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>receiver</parametername>
</parameternamelist>
<parameterdescription>
<para>- the resource receiver </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>days</parametername>
</parameternamelist>
<parameterdescription>
<para>- number of days of resource availability. Must match market configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>net_frac</parametername>
</parameternamelist>
<parameterdescription>
<para>- fraction of net (100% = 10^15) managed by this market </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cpu_frac</parametername>
</parameternamelist>
<parameterdescription>
<para>- fraction of cpu (100% = 10^15) managed by this market </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_payment</parametername>
</parameternamelist>
<parameterdescription>
<para>- the maximum amount <computeroutput>payer</computeroutput> is willing to pay. Tokens are withdrawn from <computeroutput>payer</computeroutput>&apos;s token balance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="849" column="15" bodyfile="system/contracts/eosio.system/src/powerup.cpp" bodystart="162" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ab940f454d4d3d0018f22bf472caf3b52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::limitauthchg</definition>
        <argsstring>(const name &amp;account, const std::vector&lt; name &gt; &amp;allow_perms, const std::vector&lt; name &gt; &amp;disallow_perms)</argsstring>
        <name>limitauthchg</name>
        <qualifiedname>eosiosystem::system_contract::limitauthchg</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>account</declname>
        </param>
        <param>
          <type>const std::vector&lt; name &gt; &amp;</type>
          <declname>allow_perms</declname>
        </param>
        <param>
          <type>const std::vector&lt; name &gt; &amp;</type>
          <declname>disallow_perms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>limitauthchg opts into or out of restrictions on updateauth, deleteauth, linkauth, and unlinkauth.</para>
<para>If either allow_perms or disallow_perms is non-empty, then opts into restrictions. If allow_perms is non-empty, then the authorized_by argument of the restricted actions must be in the vector, or the actions will abort. If disallow_perms is non-empty, then the authorized_by argument of the restricted actions must not be in the vector, or the actions will abort.</para>
<para>If both allow_perms and disallow_perms are empty, then opts out of the restrictions. limitauthchg aborts if both allow_perms and disallow_perms are non-empty.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account</parametername>
</parameternamelist>
<parameterdescription>
<para>- account to change </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allow_perms</parametername>
</parameternamelist>
<parameterdescription>
<para>- permissions which may use the restricted actions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>disallow_perms</parametername>
</parameternamelist>
<parameterdescription>
<para>- permissions which may not use the restricted actions </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="867" column="15" bodyfile="system/contracts/eosio.system/src/limit_auth_changes.cpp" bodystart="6" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a2c394fb4ae2451d0b44c543258d72f02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::createaccnt</definition>
        <argsstring>(const name new_account_name, authority owner, authority active)</argsstring>
        <name>createaccnt</name>
        <qualifiedname>eosiosystem::system_contract::createaccnt</qualifiedname>
        <param>
          <type>const name</type>
          <declname>new_account_name</declname>
        </param>
        <param>
          <type><ref refid="structeosiosystem_1_1authority" kindref="compound">authority</ref></type>
          <declname>owner</declname>
        </param>
        <param>
          <type><ref refid="structeosiosystem_1_1authority" kindref="compound">authority</ref></type>
          <declname>active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="870" column="14" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="387" bodyend="400"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a50976d2a74593cdd840662159dc21ab1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>symbol</type>
        <definition>static symbol eosiosystem::system_contract::get_core_symbol</definition>
        <argsstring>(name system_account=&quot;eosio&quot;_n)</argsstring>
        <name>get_core_symbol</name>
        <qualifiedname>eosiosystem::system_contract::get_core_symbol</qualifiedname>
        <param>
          <type>name</type>
          <declname>system_account</declname>
          <defval>&quot;eosio&quot;_n</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="447" column="24" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="447" bodyend="451"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a91de00b875703918a8c95898a046bcc2" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>symbol</type>
        <definition>static symbol eosiosystem::system_contract::get_core_symbol</definition>
        <argsstring>(const rammarket &amp;rm)</argsstring>
        <name>get_core_symbol</name>
        <qualifiedname>eosiosystem::system_contract::get_core_symbol</qualifiedname>
        <param>
          <type>const <ref refid="namespaceeosiosystem_1a084bb74fe483e49001e674d5e66001de" kindref="member">rammarket</ref> &amp;</type>
          <declname>rm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="924" column="24" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="924" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1aa7000a5c93cf390e5495e65704919674" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeosiosystem_1_1eosio__global__state" kindref="compound">eosio_global_state</ref></type>
        <definition>eosio_global_state eosiosystem::system_contract::get_default_parameters</definition>
        <argsstring>()</argsstring>
        <name>get_default_parameters</name>
        <qualifiedname>eosiosystem::system_contract::get_default_parameters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="931" column="36" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="25" bodyend="29"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a04a864fd31b03ca4e7ce3a9fd65476c7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t eosiosystem::system_contract::update_ram_debt_table</definition>
        <argsstring>(name payer, name account, int64_t ram_bytes)</argsstring>
        <name>update_ram_debt_table</name>
        <qualifiedname>eosiosystem::system_contract::update_ram_debt_table</qualifiedname>
        <param>
          <type>name</type>
          <declname>payer</declname>
        </param>
        <param>
          <type>name</type>
          <declname>account</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ram_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="932" column="18" bodyfile="system/contracts/eosio.system/src/powerup.cpp" bodystart="246" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a7e80c965d15f6613db3ee04188d68af5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::emit</definition>
        <argsstring>(eosio::asset new_emission)</argsstring>
        <name>emit</name>
        <qualifiedname>eosiosystem::system_contract::emit</qualifiedname>
        <param>
          <type>eosio::asset</type>
          <declname>new_emission</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="934" column="15" bodyfile="system/contracts/eosio.system/src/producer_pay.cpp" bodystart="73" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>symbol</type>
        <definition>symbol eosiosystem::system_contract::core_symbol</definition>
        <argsstring>() const</argsstring>
        <name>core_symbol</name>
        <qualifiedname>eosiosystem::system_contract::core_symbol</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="936" column="17" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ae248c8483e7ff56c697793c49bd58700" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::update_ram_supply</definition>
        <argsstring>()</argsstring>
        <name>update_ram_supply</name>
        <qualifiedname>eosiosystem::system_contract::update_ram_supply</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Increase the amount of ram for sale based upon the change in max ram size.</para>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="937" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="60" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1aa4121046f43083640f3276a4e7974572" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::changebw</definition>
        <argsstring>(name from, const name &amp;receiver, const asset &amp;stake_net_quantity, const asset &amp;stake_cpu_quantity, bool transfer)</argsstring>
        <name>changebw</name>
        <qualifiedname>eosiosystem::system_contract::changebw</qualifiedname>
        <param>
          <type>name</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>stake_net_quantity</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>stake_cpu_quantity</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>end if is_delegating_to_self || is_undelegating</para>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="940" column="15" bodyfile="system/contracts/eosio.system/src/delegate_bandwidth.cpp" bodystart="147" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1aa192ed8af461c5162749a1a7f3886f06" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::update_voting_power</definition>
        <argsstring>(const name &amp;voter, const asset &amp;total_update)</argsstring>
        <name>update_voting_power</name>
        <qualifiedname>eosiosystem::system_contract::update_voting_power</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>voter</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>total_update</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="942" column="15" bodyfile="system/contracts/eosio.system/src/delegate_bandwidth.cpp" bodystart="327" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a0709db97aa347d697fb4cbf3f67f2a96" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::register_producer</definition>
        <argsstring>(const name &amp;producer, const eosio::block_signing_authority &amp;producer_authority, const std::string &amp;url, uint16_t location)</argsstring>
        <name>register_producer</name>
        <qualifiedname>eosiosystem::system_contract::register_producer</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>producer</declname>
        </param>
        <param>
          <type>const eosio::block_signing_authority &amp;</type>
          <declname>producer_authority</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>url</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="945" column="15" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="27" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a616d617680f7ed47eb3f7fc2b984650f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::update_elected_producers</definition>
        <argsstring>(const block_timestamp &amp;timestamp)</argsstring>
        <name>update_elected_producers</name>
        <qualifiedname>eosiosystem::system_contract::update_elected_producers</qualifiedname>
        <param>
          <type>const block_timestamp &amp;</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="946" column="15" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="93" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1aac11a1b221a613107fb8ca99e080a616" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::update_votes</definition>
        <argsstring>(const name &amp;voter, const name &amp;proxy, const std::vector&lt; name &gt; &amp;producers, bool voting)</argsstring>
        <name>update_votes</name>
        <qualifiedname>eosiosystem::system_contract::update_votes</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>voter</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>const std::vector&lt; name &gt; &amp;</type>
          <declname>producers</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>voting</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>staking creates voter object</para>
<para>The first time someone votes we calculate and set last_vote_weight. Since they cannot unstake until after the chain has been activated, we can use last_vote_weight to determine that this is their first vote and should consider their stake activated.</para>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="947" column="15" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="168" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a91084ea3aa4700b2565afd34f9faff31" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::propagate_weight_change</definition>
        <argsstring>(const voter_info &amp;voter)</argsstring>
        <name>propagate_weight_change</name>
        <qualifiedname>eosiosystem::system_contract::propagate_weight_change</qualifiedname>
        <param>
          <type>const <ref refid="structeosiosystem_1_1voter__info" kindref="compound">voter_info</ref> &amp;</type>
          <declname>voter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>don&apos;t propagate small changes (1 ~= epsilon)</para>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="948" column="15" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="291" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a682be09e4bcb430df8e2ce98f1912563" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::fill_tact</definition>
        <argsstring>(eosio::name payer, eosio::asset payment)</argsstring>
        <name>fill_tact</name>
        <qualifiedname>eosiosystem::system_contract::fill_tact</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>payer</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>payment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="951" column="15" bodyfile="system/contracts/eosio.system/src/powerup.cpp" bodystart="335" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1af207e91e13bb386b49b1e1c2ed0fb616" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::adjust_resources</definition>
        <argsstring>(name payer, name account, symbol core_symbol, int64_t net_delta, int64_t cpu_delta, int64_t ram_delta, bool must_not_be_managed=false)</argsstring>
        <name>adjust_resources</name>
        <qualifiedname>eosiosystem::system_contract::adjust_resources</qualifiedname>
        <param>
          <type>name</type>
          <declname>payer</declname>
        </param>
        <param>
          <type>name</type>
          <declname>account</declname>
        </param>
        <param>
          <type>symbol</type>
          <declname>core_symbol</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>net_delta</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>cpu_delta</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ram_delta</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>must_not_be_managed</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="952" column="15" bodyfile="system/contracts/eosio.system/src/powerup.cpp" bodystart="9" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a0fd50f24c66c025a7efd13b0cc24e23e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::process_powerup_queue</definition>
        <argsstring>(time_point_sec now, symbol core_symbol, powerup_state &amp;state, powerup_order_table &amp;orders, uint32_t max_items, int64_t &amp;net_delta_available, int64_t &amp;cpu_delta_available, int64_t &amp;ram_delta_available)</argsstring>
        <name>process_powerup_queue</name>
        <qualifiedname>eosiosystem::system_contract::process_powerup_queue</qualifiedname>
        <param>
          <type>time_point_sec</type>
          <declname>now</declname>
        </param>
        <param>
          <type>symbol</type>
          <declname>core_symbol</declname>
        </param>
        <param>
          <type><ref refid="structeosiosystem_1_1powerup__state" kindref="compound">powerup_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="namespaceeosiosystem_1ab020b27ad4ebc87d910cb31fbcf9e7ac" kindref="member">powerup_order_table</ref> &amp;</type>
          <declname>orders</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_items</declname>
        </param>
        <param>
          <type>int64_t &amp;</type>
          <declname>net_delta_available</declname>
        </param>
        <param>
          <type>int64_t &amp;</type>
          <declname>cpu_delta_available</declname>
        </param>
        <param>
          <type>int64_t &amp;</type>
          <declname>ram_delta_available</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="953" column="15" bodyfile="system/contracts/eosio.system/src/powerup.cpp" bodystart="77" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a426f4cdbba6766820a8625a6dcb6ee04" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::update_tact</definition>
        <argsstring>()</argsstring>
        <name>update_tact</name>
        <qualifiedname>eosiosystem::system_contract::update_tact</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="957" column="15" bodyfile="system/contracts/eosio.system/src/powerup.cpp" bodystart="311" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a7180a3661c6dcf143333569d64dc9a27" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::change_weights</definition>
        <argsstring>(eosio::name payer, eosio::asset new_emission)</argsstring>
        <name>change_weights</name>
        <qualifiedname>eosiosystem::system_contract::change_weights</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>payer</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>new_emission</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="958" column="15" bodyfile="system/contracts/eosio.system/src/powerup.cpp" bodystart="397" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a7cabfe02d2b7028ec0a2e2aae10c1155" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::add_to_blockinfo_table</definition>
        <argsstring>(const eosio::checksum256 &amp;previous_block_id, const eosio::block_timestamp timestamp) const</argsstring>
        <name>add_to_blockinfo_table</name>
        <qualifiedname>eosiosystem::system_contract::add_to_blockinfo_table</qualifiedname>
        <param>
          <type>const eosio::checksum256 &amp;</type>
          <declname>previous_block_id</declname>
        </param>
        <param>
          <type>const eosio::block_timestamp</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="960" column="15" bodyfile="system/contracts/eosio.system/src/block_info.cpp" bodystart="17" bodyend="45"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <computeroutput>eosio.system</computeroutput> smart contract is provided by <computeroutput>block.one</computeroutput> as a sample system contract, and it defines the structures and actions needed for blockchain&apos;s core functionality.</para>
<para>Just like in the <computeroutput>eosio.bios</computeroutput> sample contract implementation, there are a few actions which are not implemented at the contract level (<computeroutput>newaccount</computeroutput>, <computeroutput>updateauth</computeroutput>, <computeroutput>deleteauth</computeroutput>, <computeroutput>linkauth</computeroutput>, <computeroutput>unlinkauth</computeroutput>, <computeroutput>canceldelay</computeroutput>, <computeroutput>onerror</computeroutput>, <computeroutput>setabi</computeroutput>, <computeroutput>setcode</computeroutput>), they are just declared in the contract so they will show in the contract&apos;s ABI and users will be able to push those actions to the chain via the account holding the <computeroutput>eosio.system</computeroutput> contract, but the implementation is at the EOSIO core level. They are referred to as EOSIO native actions.</para>
<para><itemizedlist>
<listitem><para>Users can stake tokens for CPU and Network bandwidth, and then vote for producers or delegate their vote to a proxy.</para>
</listitem><listitem><para>Producers register in order to be voted for, and can claim per-block and per-vote rewards.</para>
</listitem><listitem><para>Users can buy and sell RAM at a market-determined price.</para>
</listitem><listitem><para>Users can bid on premium names. </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>eosio::contract</label>
      </node>
      <node id="2">
        <label>eosiosystem::native</label>
        <link refid="classeosiosystem_1_1native"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>eosiosystem::system_contract</label>
        <link refid="classeosiosystem_1_1system__contract"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>block_timestamp</label>
      </node>
      <node id="5">
        <label>eosio::blockchain_parameters</label>
      </node>
      <node id="3">
        <label>eosio::contract</label>
      </node>
      <node id="8">
        <label>symbol</label>
      </node>
      <node id="7">
        <label>time_point</label>
      </node>
      <node id="4">
        <label>eosiosystem::eosio_global_state</label>
        <link refid="structeosiosystem_1_1eosio__global__state"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>last_name_close</edgelabel>
          <edgelabel>last_producer_schedule_update</edgelabel>
          <edgelabel>last_ram_increase</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>last_pervote_bucket_fill</edgelabel>
          <edgelabel>thresh_activated_stake_time</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>eosiosystem::native</label>
        <link refid="classeosiosystem_1_1native"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>eosiosystem::system_contract</label>
        <link refid="classeosiosystem_1_1system__contract"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>_gstate</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>ram_symbol</edgelabel>
          <edgelabel>ramcore_symbol</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="420" column="4" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="420" bodyend="962"/>
    <listofallmembers>
      <member refid="classeosiosystem_1_1system__contract_1ae0fead4e6333fb6ff81b38c873beb484" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_global</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a40e74853eda24e1b15d8f5b6499c8820" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_gstate</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a668decff73ee059f8e89cd885e85f3ce" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_producers</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a2b149f7463767158fac80045940da7d5" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_rammarket</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a41105c20306ae2478d91e0fab56f2e58" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_voters</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a1873247483b285e19010b7469419a60d" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>activate</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a0cca489c98b5874f5493f4447e7c52a9" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>activate_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1adfc25b00a14e482c7fb1161dd38096bd" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>active_permission</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a7cabfe02d2b7028ec0a2e2aae10c1155" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>add_to_blockinfo_table</name></member>
      <member refid="classeosiosystem_1_1system__contract_1af207e91e13bb386b49b1e1c2ed0fb616" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>adjust_resources</name></member>
      <member refid="classeosiosystem_1_1system__contract_1af1c329fbf0e3e45b62b729e6ee743c62" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>bidname</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a4061267666d68ba49beda47dc1440194" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>bidname_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a1ad9f05ad7242412bf5ad87706f923ff" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>bidrefund</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a6d35995c9e7932d40ea91609744c9aa3" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>bidrefund_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aeec189aa121eaf90aee0c180cd59cc26" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>bpay_account</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a04be77ea83f87d1533606390c37cf5d1" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>buyram</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a379cc18be05f0d81a71f15a52f7c6f48" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>buyram_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a93950629ac6f931b47542727a5411097" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>buyrambytes</name></member>
      <member refid="classeosiosystem_1_1system__contract_1af7ddbe541c404f6a8d1094b8278e6128" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>buyrambytes_action</name></member>
      <member refid="classeosiosystem_1_1native_1ac2da52c0f6c1698bbe76a84f23917feb" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>canceldelay</name></member>
      <member refid="classeosiosystem_1_1native_1aa83db95970cb619e8d1715e5d83bbb52" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>canceldelay_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ae71212071f747832a2a56eb4868d9c81" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>cfgpowerup</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a752504e09e8196326e836ef099588650" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>cfgpowerup_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a7180a3661c6dcf143333569d64dc9a27" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>change_weights</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aa4121046f43083640f3276a4e7974572" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>changebw</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a34b35d1f073383e599d4e2bb56e20524" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>claimrewards</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a6fb5d3547618397ee9411fe31c549565" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>claimrewards_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>core_symbol</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a2c394fb4ae2451d0b44c543258d72f02" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>createaccnt</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aa54b498595abb1a3ad9c62c597d4f7b5" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>delegatebw</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a1f08c7b7252348f1b64ad4f2699c4de5" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>delegatebw_action</name></member>
      <member refid="classeosiosystem_1_1native_1a49cc638f16ddc898952a8f032ffd6c2c" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>deleteauth</name></member>
      <member refid="classeosiosystem_1_1native_1ab75271688a763dacb3e2fa6cddae04e4" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>deleteauth_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a7e80c965d15f6613db3ee04188d68af5" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>emit</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a682be09e4bcb430df8e2ce98f1912563" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>fill_tact</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a50976d2a74593cdd840662159dc21ab1" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>get_core_symbol</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a91de00b875703918a8c95898a046bcc2" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>get_core_symbol</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aa7000a5c93cf390e5495e65704919674" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>get_default_parameters</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a314f5afbd81e51d5e319ba81398f2e06" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>init</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aba8828e31f9dc03a30c0888689f91d86" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>init_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1af6ed697e2d198ca5bce29cbacb682490" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>initemission</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ac0dff966e1b20b198bd7057c2d643538" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>initemission_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ab940f454d4d3d0018f22bf472caf3b52" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>limitauthchg</name></member>
      <member refid="classeosiosystem_1_1native_1a35b93b9e7ae3eaa60619189c7694499e" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>linkauth</name></member>
      <member refid="classeosiosystem_1_1native_1a9003ba3e7e55f294f3d028f02873d5f9" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>linkauth_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a03e79dcf0584dd7fd1dbb1aa072befb1" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>names_account</name></member>
      <member refid="classeosiosystem_1_1native_1ab81dda3be834b68780bbae5c2e8368e0" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>newaccount</name></member>
      <member refid="classeosiosystem_1_1native_1aae644336375e87bb08912d4f550c8aeb" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>newaccount_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a0b608cd46d931874c80e9b72c4f0d664" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>null_account</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ae75458e3f898b3bc834311fa54abc6a0" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>onblock</name></member>
      <member refid="classeosiosystem_1_1native_1a379fe8f4ca5a42a6011dbf9c8f30b6ff" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>onerror</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ab3d6d9e77d6b9ac63b79e6d8104d8312" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>powerup</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ac3cd9f92205bbc3ba9fdfdaacdeedf61" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>powerup_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aa573d628b237c167aa99fc71cb150736" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>powerupexec</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ac85b9bef9b3fc161a14712f52ec31e5b" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>powerupexec_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a0fd50f24c66c025a7efd13b0cc24e23e" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>process_powerup_queue</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a91084ea3aa4700b2565afd34f9faff31" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>propagate_weight_change</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a5b9e69a4f134680f236b696f7ec2ca0f" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>ram_account</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a6317a93cd512ff0fc3b6a802bd5aa229" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>ram_symbol</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ac0eb9382f47fc00bcf66b81a26805e73" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>ramcore_symbol</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a8784bf6def9ebc7dac2cbba94c715b03" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>ramfee_account</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a10a63e006f9869caeaf2592bdfbccc42" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>refund</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a5ef59ea3e3db4bb9bbe075531109d687" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>refund_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a0709db97aa347d697fb4cbf3f67f2a96" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>register_producer</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a252441c7b5811068d336f37ab627ecd9" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>regproducer</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a6c1143de786b7d7601ac0b0968cb0f19" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>regproducer2</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ae39dfe220205b48d192a90abc3e790da" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>regproducer2_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ab5efbdbade110f33fed3c39083d3f76f" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>regproducer_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a7192c64e5a9d0b9b202390dbfade0858" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>regproxy</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a8b1c5e40db2dd35043dc289fec274da2" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>regproxy_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a2a41dc1871059a536a55626b8c76f5b9" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>rmvproducer</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a9cd7fa6413479ac6ffe3e548b847ea64" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>rmvproducer_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a6b00b900a128d2718244ac8a408f65d3" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>sellram</name></member>
      <member refid="classeosiosystem_1_1native_1aff24a543859381c1670183f5b4d343aa" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setabi</name></member>
      <member refid="classeosiosystem_1_1native_1a5db33d8b5c93fb9b60f6216d62077802" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setabi_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a9a005d230746b68cafa934a067f287af" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setacctcpu</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a7a538179a1332d7f139e881cff0c04cc" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setacctcpu_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aa4559928f468c62867916d1251fa33b3" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setacctnet</name></member>
      <member refid="classeosiosystem_1_1system__contract_1add114cf85734d0c85edacb0eb7167883" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setacctnet_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1acdd7c75402f43876338d33649d2e6903" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setacctram</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a405cf7f71120642d5d043fa4648be9b1" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setacctram_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ad5b9178dfbe60ba6059c52d488ecf303" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setalimits</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a5546364ddc017d87f96ed0e9a6b1f931" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setalimits_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a56c686a08fd581a617980500efd795ad" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setcode</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aa1920281d36995e7a5017a5369b68a4b" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setcode_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aa4ea1b93cfb3d99fcaaabb994c711bee" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setparams</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ae0cbe561757f43c3856caf74ff58ea2b" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setparams_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a648ec27a9bc3bf7e36c5c88f6932b9ca" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setpriv</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a7c19bb1d99d1abbd00be825f69fbfc3f" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setpriv_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ad8a6eb47fd97c9f243019d93916ff78f" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setram</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a4caad060672784b32a36a2d634a5f3b3" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setram_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a7d984add31b6060bb59d472f9f1bd1a1" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setramrate</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aad4ad84241c38c3541a0438fbca0cc9b" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setramrate_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a5cde7e6a57d453cc63d509c6657355e2" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>stake_account</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ae1a0434a7adf53cc3a168f1b2f947ebd" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>system_contract</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a21c029a978b1648e8cea9d7c60a5faf3" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>token_account</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a4db0be2c90d342ecd269fdbb57c51091" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>undelegatebw</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a5751bdd1f68be3270595b4bba1a241f4" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>undelegatebw_action</name></member>
      <member refid="classeosiosystem_1_1native_1aa1e2097e289d4da3acc2876cc24e8897" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>unlinkauth</name></member>
      <member refid="classeosiosystem_1_1native_1ab85b9770a900421b081ab8f339c5c71f" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>unlinkauth_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a0b8c45d3226929472bc5785742c05152" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>unregprod</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a34d06c5e737193d6cf707edc7d57407e" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>unregprod_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a616d617680f7ed47eb3f7fc2b984650f" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>update_elected_producers</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a04a864fd31b03ca4e7ce3a9fd65476c7" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>update_ram_debt_table</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ae248c8483e7ff56c697793c49bd58700" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>update_ram_supply</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a426f4cdbba6766820a8625a6dcb6ee04" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>update_tact</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aac11a1b221a613107fb8ca99e080a616" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>update_votes</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aa192ed8af461c5162749a1a7f3886f06" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>update_voting_power</name></member>
      <member refid="classeosiosystem_1_1native_1a2bbeca58b24029a5ab0fc90832dde56b" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>updateauth</name></member>
      <member refid="classeosiosystem_1_1native_1a10fb5510d34718e92de6b0491d1eaf53" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>updateauth_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a0af4a55018801131ae7dc7a923bead0b" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>updtrevision</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a56315050770b4f79af95042a95b58507" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>updtrevision_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a19d51a2b9b57ffb656612c280ee4ab4e" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>voteproducer</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aab2cd194b5dbe033163f2ed21c28ebc4" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>voteproducer_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1afd8f9ea7890c647010bc9bccdcda6ba9" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>voteupdate</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aad3da6aae1bb02b7c177b98796a5107a" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>voteupdate_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a3b108816fa9ae2ad0c89aae2ec31585b" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>vpay_account</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ae0264c3f2d2a640d9a60a4c9c9ca089c" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>~system_contract</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
