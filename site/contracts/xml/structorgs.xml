<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="ru">
  <compounddef id="structorgs" kind="struct" language="C++" prot="public">
    <compoundname>orgs</compoundname>
    <includes refid="accounts_8hpp" local="no">accounts.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structorgs_1a30bd763b06c88e2db7fe63b7829448c8" prot="public" static="no" mutable="no">
        <type>eosio::name</type>
        <definition>eosio::name orgs::username</definition>
        <argsstring></argsstring>
        <name>username</name>
        <qualifiedname>orgs::username</qualifiedname>
        <briefdescription>
<para>Имя аккаунта организации. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="198" column="15" bodyfile="common/accounts.hpp" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structorgs_1ae6431f4f421b347e828673c17c11016a" prot="public" static="no" mutable="no">
        <type>eosio::name</type>
        <definition>eosio::name orgs::parent_username</definition>
        <argsstring></argsstring>
        <name>parent_username</name>
        <qualifiedname>orgs::parent_username</qualifiedname>
        <briefdescription>
<para>Имя родительской организации, если есть. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="199" column="15" bodyfile="common/accounts.hpp" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structorgs_1a2f2e75cd711056a893bb6f84283cf069" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structverification" kindref="compound">verification</ref> &gt;</type>
        <definition>std::vector&lt;verification&gt; orgs::verifications</definition>
        <argsstring></argsstring>
        <name>verifications</name>
        <qualifiedname>orgs::verifications</qualifiedname>
        <briefdescription>
<para>Информация о верификации организации. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="200" column="15" bodyfile="common/accounts.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structorgs_1a018bd81cc0de74c7c0edc6cb34296b29" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structstorage" kindref="compound">storage</ref> &gt;</type>
        <definition>std::vector&lt;storage&gt; orgs::storages</definition>
        <argsstring></argsstring>
        <name>storages</name>
        <qualifiedname>orgs::storages</qualifiedname>
        <briefdescription>
<para>Хранилища персональных данных и идентификаторы данных в них. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="201" column="15" bodyfile="common/accounts.hpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structorgs_1a7e106134eb289da6034239f59f8c8b00" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool orgs::is_cooperative</definition>
        <argsstring></argsstring>
        <name>is_cooperative</name>
        <qualifiedname>orgs::is_cooperative</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>Флаг, указывающий, является ли организация кооперативом. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="202" column="8" bodyfile="common/accounts.hpp" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structorgs_1ab7a88197a80884f578161b340a42d445" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool orgs::is_active</definition>
        <argsstring></argsstring>
        <name>is_active</name>
        <qualifiedname>orgs::is_active</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>Флаг, указывающий, что организация активна. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="203" column="8" bodyfile="common/accounts.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structorgs_1ac0f67a51c09138a902b4626694496810" prot="public" static="no" mutable="no">
        <type>eosio::name</type>
        <definition>eosio::name orgs::coop_type</definition>
        <argsstring></argsstring>
        <name>coop_type</name>
        <qualifiedname>orgs::coop_type</qualifiedname>
        <briefdescription>
<para>Тип некоммерческой организации (если это кооператив). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="204" column="15" bodyfile="common/accounts.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structorgs_1a0acaa1da073fa33862536db6e1335bbd" prot="public" static="no" mutable="no">
        <type>eosio::name</type>
        <definition>eosio::name orgs::token_contract</definition>
        <argsstring></argsstring>
        <name>token_contract</name>
        <qualifiedname>orgs::token_contract</qualifiedname>
        <briefdescription>
<para>Контракт токена, связанного с организацией. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="206" column="15" bodyfile="common/accounts.hpp" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structorgs_1aaa319494d52bab5194e2ccd093d8dff5" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string orgs::announce</definition>
        <argsstring></argsstring>
        <name>announce</name>
        <qualifiedname>orgs::announce</qualifiedname>
        <briefdescription>
<para>Анонс организации. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="207" column="15" bodyfile="common/accounts.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structorgs_1a7e5900ad7ad2c99fe7a13bd70a154cca" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string orgs::description</definition>
        <argsstring></argsstring>
        <name>description</name>
        <qualifiedname>orgs::description</qualifiedname>
        <briefdescription>
<para>Описание организации. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="208" column="15" bodyfile="common/accounts.hpp" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structorgs_1af6d7d8a744c2ae53a5cec35369bf77ea" prot="public" static="no" mutable="no">
        <type>eosio::asset</type>
        <definition>eosio::asset orgs::registration</definition>
        <argsstring></argsstring>
        <name>registration</name>
        <qualifiedname>orgs::registration</qualifiedname>
        <briefdescription>
<para>Регистрационный взнос </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="209" column="16" bodyfile="common/accounts.hpp" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structorgs_1ac195fc7b023e954eafd20e854570a302" prot="public" static="no" mutable="no">
        <type>eosio::asset</type>
        <definition>eosio::asset orgs::initial</definition>
        <argsstring></argsstring>
        <name>initial</name>
        <qualifiedname>orgs::initial</qualifiedname>
        <briefdescription>
<para>Вступительный членский взнос </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="210" column="16" bodyfile="common/accounts.hpp" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structorgs_1a1dbf728ec4dff7ca8f172bee4da901dd" prot="public" static="no" mutable="no">
        <type>eosio::asset</type>
        <definition>eosio::asset orgs::minimum</definition>
        <argsstring></argsstring>
        <name>minimum</name>
        <qualifiedname>orgs::minimum</qualifiedname>
        <briefdescription>
<para>Минимальный паевый взнос </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="211" column="16" bodyfile="common/accounts.hpp" bodystart="211" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structorgs_1ad63f7f770daeaf11e9960f0bb3413257" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t orgs::primary_key</definition>
        <argsstring>() const</argsstring>
        <name>primary_key</name>
        <qualifiedname>orgs::primary_key</qualifiedname>
        <briefdescription>
<para>Возвращает первичный ключ учетной записи организации. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint64_t - первичный ключ, равный значению имени аккаунта организации. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="226" column="12" bodyfile="common/accounts.hpp" bodystart="226" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="structorgs_1a0f61fb5a23a20f8418b6a840027ee59b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void orgs::check_contract_or_fail</definition>
        <argsstring>(eosio::name contract)</argsstring>
        <name>check_contract_or_fail</name>
        <qualifiedname>orgs::check_contract_or_fail</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>contract</declname>
        </param>
        <briefdescription>
<para>Сравнивает контракт токена кооператива и представленный </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="233" column="8" bodyfile="common/accounts.hpp" bodystart="233" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="structorgs_1ac30f7ac01496aacd2515dc474123c6f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void orgs::check_symbol_or_fail</definition>
        <argsstring>(eosio::asset contribution)</argsstring>
        <name>check_symbol_or_fail</name>
        <qualifiedname>orgs::check_symbol_or_fail</qualifiedname>
        <param>
          <type>eosio::asset</type>
          <declname>contribution</declname>
        </param>
        <briefdescription>
<para>Сравнивает символ токена кооператива и представленный </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="240" column="8" bodyfile="common/accounts.hpp" bodystart="240" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="structorgs_1ab88eb6ded8ef4609e0d0a013d4fcd19f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t orgs::by_parent</definition>
        <argsstring>() const</argsstring>
        <name>by_parent</name>
        <qualifiedname>orgs::by_parent</qualifiedname>
        <briefdescription>
<para>Возвращает ключ по родительской организации. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint64_t - ключ, равный значению имени родительской организации. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="248" column="12" bodyfile="common/accounts.hpp" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="structorgs_1aaf7a07b7ede42be8755e8dab89b68273" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint128_t</type>
        <definition>uint128_t orgs::by_coop_childs</definition>
        <argsstring>() const</argsstring>
        <name>by_coop_childs</name>
        <qualifiedname>orgs::by_coop_childs</qualifiedname>
        <briefdescription>
<para>Возвращает ключ для индекса кооперативных подразделений организации. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint128_t - составной ключ, включающий значения имени организации и родительской организации. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="256" column="13" bodyfile="common/accounts.hpp" bodystart="256" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="structorgs_1a62e31444747797512f25c736d36e8ad3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t orgs::is_coop_index</definition>
        <argsstring>() const</argsstring>
        <name>is_coop_index</name>
        <qualifiedname>orgs::is_coop_index</qualifiedname>
        <briefdescription>
<para>Возвращает индекс для определения, является ли организация кооперативом. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint64_t - ключ, равный 1, если организация является кооперативом, иначе 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="264" column="12" bodyfile="common/accounts.hpp" bodystart="264" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="structorgs_1a9c08ac2829263b63bcf3cb773855691a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t orgs::bycooptype</definition>
        <argsstring>() const</argsstring>
        <name>bycooptype</name>
        <qualifiedname>orgs::bycooptype</qualifiedname>
        <briefdescription>
<para>Возвращает ключ для индекса по типу некоммерческой организации (если это кооператив). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint64_t - ключ, равный значению типа некоммерческой организации. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="272" column="12" bodyfile="common/accounts.hpp" bodystart="272" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="structorgs_1ab93e3b210063838c61fdc01849e93124" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t orgs::is_verified_index</definition>
        <argsstring>() const</argsstring>
        <name>is_verified_index</name>
        <qualifiedname>orgs::is_verified_index</qualifiedname>
        <briefdescription>
<para>Возвращает индекс для определения, является ли организация верифицированной. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint64_t - ключ, равный 1, если организация верифицирована, иначе 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="281" column="12" bodyfile="common/accounts.hpp" bodystart="281" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="structorgs_1a56f3d02c014cc9448b0dc2e771c99f10" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool orgs::is_coop</definition>
        <argsstring>() const</argsstring>
        <name>is_coop</name>
        <qualifiedname>orgs::is_coop</qualifiedname>
        <briefdescription>
<para>Проверяет, является ли организация кооперативом. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool - true, если организация является кооперативом, иначе false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="294" column="8" bodyfile="common/accounts.hpp" bodystart="294" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="structorgs_1a153188e5dd5b21d491fd733feb6e8ff5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool orgs::is_verified</definition>
        <argsstring>() const</argsstring>
        <name>is_verified</name>
        <qualifiedname>orgs::is_verified</qualifiedname>
        <briefdescription>
<para>Проверяет, верифицирована ли организация. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool - true, если организация верифицирована, иначе false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/accounts.hpp" line="302" column="8" bodyfile="common/accounts.hpp" bodystart="302" bodyend="309"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Структура, представляющая организации. </para>
    </briefdescription>
    <detaileddescription>
<para>Эта структура содержит информацию о юридических лицах (организациях), их верификации и других параметрах. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>asset</label>
      </node>
      <node id="2">
        <label>name</label>
      </node>
      <node id="1">
        <label>orgs</label>
        <link refid="structorgs"/>
        <childnode refid="2" relation="usage">
          <edgelabel>coop_type</edgelabel>
          <edgelabel>parent_username</edgelabel>
          <edgelabel>token_contract</edgelabel>
          <edgelabel>username</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>announce</edgelabel>
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>initial</edgelabel>
          <edgelabel>minimum</edgelabel>
          <edgelabel>registration</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>string</label>
      </node>
    </collaborationgraph>
    <location file="common/accounts.hpp" line="197" column="1" bodyfile="common/accounts.hpp" bodystart="197" bodyend="310"/>
    <listofallmembers>
      <member refid="structorgs_1aaa319494d52bab5194e2ccd093d8dff5" prot="public" virt="non-virtual"><scope>orgs</scope><name>announce</name></member>
      <member refid="structorgs_1aaf7a07b7ede42be8755e8dab89b68273" prot="public" virt="non-virtual"><scope>orgs</scope><name>by_coop_childs</name></member>
      <member refid="structorgs_1ab88eb6ded8ef4609e0d0a013d4fcd19f" prot="public" virt="non-virtual"><scope>orgs</scope><name>by_parent</name></member>
      <member refid="structorgs_1a9c08ac2829263b63bcf3cb773855691a" prot="public" virt="non-virtual"><scope>orgs</scope><name>bycooptype</name></member>
      <member refid="structorgs_1a0f61fb5a23a20f8418b6a840027ee59b" prot="public" virt="non-virtual"><scope>orgs</scope><name>check_contract_or_fail</name></member>
      <member refid="structorgs_1ac30f7ac01496aacd2515dc474123c6f2" prot="public" virt="non-virtual"><scope>orgs</scope><name>check_symbol_or_fail</name></member>
      <member refid="structorgs_1ac0f67a51c09138a902b4626694496810" prot="public" virt="non-virtual"><scope>orgs</scope><name>coop_type</name></member>
      <member refid="structorgs_1a7e5900ad7ad2c99fe7a13bd70a154cca" prot="public" virt="non-virtual"><scope>orgs</scope><name>description</name></member>
      <member refid="structorgs_1ac195fc7b023e954eafd20e854570a302" prot="public" virt="non-virtual"><scope>orgs</scope><name>initial</name></member>
      <member refid="structorgs_1ab7a88197a80884f578161b340a42d445" prot="public" virt="non-virtual"><scope>orgs</scope><name>is_active</name></member>
      <member refid="structorgs_1a56f3d02c014cc9448b0dc2e771c99f10" prot="public" virt="non-virtual"><scope>orgs</scope><name>is_coop</name></member>
      <member refid="structorgs_1a62e31444747797512f25c736d36e8ad3" prot="public" virt="non-virtual"><scope>orgs</scope><name>is_coop_index</name></member>
      <member refid="structorgs_1a7e106134eb289da6034239f59f8c8b00" prot="public" virt="non-virtual"><scope>orgs</scope><name>is_cooperative</name></member>
      <member refid="structorgs_1a153188e5dd5b21d491fd733feb6e8ff5" prot="public" virt="non-virtual"><scope>orgs</scope><name>is_verified</name></member>
      <member refid="structorgs_1ab93e3b210063838c61fdc01849e93124" prot="public" virt="non-virtual"><scope>orgs</scope><name>is_verified_index</name></member>
      <member refid="structorgs_1a1dbf728ec4dff7ca8f172bee4da901dd" prot="public" virt="non-virtual"><scope>orgs</scope><name>minimum</name></member>
      <member refid="structorgs_1ae6431f4f421b347e828673c17c11016a" prot="public" virt="non-virtual"><scope>orgs</scope><name>parent_username</name></member>
      <member refid="structorgs_1ad63f7f770daeaf11e9960f0bb3413257" prot="public" virt="non-virtual"><scope>orgs</scope><name>primary_key</name></member>
      <member refid="structorgs_1af6d7d8a744c2ae53a5cec35369bf77ea" prot="public" virt="non-virtual"><scope>orgs</scope><name>registration</name></member>
      <member refid="structorgs_1a018bd81cc0de74c7c0edc6cb34296b29" prot="public" virt="non-virtual"><scope>orgs</scope><name>storages</name></member>
      <member refid="structorgs_1a0acaa1da073fa33862536db6e1335bbd" prot="public" virt="non-virtual"><scope>orgs</scope><name>token_contract</name></member>
      <member refid="structorgs_1a30bd763b06c88e2db7fe63b7829448c8" prot="public" virt="non-virtual"><scope>orgs</scope><name>username</name></member>
      <member refid="structorgs_1a2f2e75cd711056a893bb6f84283cf069" prot="public" virt="non-virtual"><scope>orgs</scope><name>verifications</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
