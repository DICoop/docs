<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="ru">
  <compounddef id="classeosio_1_1token" kind="class" language="C++" prot="public">
    <compoundname>eosio::token</compoundname>
    <basecompoundref prot="public" virt="non-virtual">contract</basecompoundref>
    <includes refid="eosio_8token_8hpp" local="no">eosio.token.hpp</includes>
    <innerclass refid="structeosio_1_1token_1_1account" prot="private">eosio::token::account</innerclass>
    <innerclass refid="structeosio_1_1token_1_1currency__stats" prot="private">eosio::token::currency_stats</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classeosio_1_1token_1ab6f5f8e8c550b3ae9492fcde3f04458a" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;create&quot;_n, &amp;<ref refid="classeosio_1_1token_1a5277670549e2458dd4a4fab4c56a9599" kindref="member">token::create</ref> &gt;</type>
        <definition>using eosio::token::create_action =  eosio::action_wrapper&lt;&quot;create&quot;_n, &amp;token::create&gt;</definition>
        <argsstring></argsstring>
        <name>create_action</name>
        <qualifiedname>eosio::token::create_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" line="118" column="10" bodyfile="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosio_1_1token_1a0a264928ea4b4c3056884cc95c9bea49" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;issue&quot;_n, &amp;<ref refid="classeosio_1_1token_1a3a62d2a7493710b3e34fbdfd4fe81d59" kindref="member">token::issue</ref> &gt;</type>
        <definition>using eosio::token::issue_action =  eosio::action_wrapper&lt;&quot;issue&quot;_n, &amp;token::issue&gt;</definition>
        <argsstring></argsstring>
        <name>issue_action</name>
        <qualifiedname>eosio::token::issue_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" line="119" column="10" bodyfile="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosio_1_1token_1adebe02a32df2bf3ca7f27eec264b32c4" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;retire&quot;_n, &amp;<ref refid="classeosio_1_1token_1a4bf7770086ab81931c6c5a22265bae4f" kindref="member">token::retire</ref> &gt;</type>
        <definition>using eosio::token::retire_action =  eosio::action_wrapper&lt;&quot;retire&quot;_n, &amp;token::retire&gt;</definition>
        <argsstring></argsstring>
        <name>retire_action</name>
        <qualifiedname>eosio::token::retire_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" line="120" column="10" bodyfile="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosio_1_1token_1a48e0c826f1e416bf99439b0b7e637a29" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;transfer&quot;_n, &amp;<ref refid="classeosio_1_1token_1a8a9d08a9791d818797dc5f70ed8f826f" kindref="member">token::transfer</ref> &gt;</type>
        <definition>using eosio::token::transfer_action =  eosio::action_wrapper&lt;&quot;transfer&quot;_n, &amp;token::transfer&gt;</definition>
        <argsstring></argsstring>
        <name>transfer_action</name>
        <qualifiedname>eosio::token::transfer_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" line="121" column="10" bodyfile="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosio_1_1token_1aee1aaa798e4d4a973b40a5a4b95d2a21" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;open&quot;_n, &amp;<ref refid="classeosio_1_1token_1a4da303699332aacdc69f3ff582477141" kindref="member">token::open</ref> &gt;</type>
        <definition>using eosio::token::open_action =  eosio::action_wrapper&lt;&quot;open&quot;_n, &amp;token::open&gt;</definition>
        <argsstring></argsstring>
        <name>open_action</name>
        <qualifiedname>eosio::token::open_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" line="122" column="10" bodyfile="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosio_1_1token_1a3e49a7888cde765dfe8f4966b3067036" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;close&quot;_n, &amp;<ref refid="classeosio_1_1token_1a88402f75888c4cfe6a3ef0391bd7ecbd" kindref="member">token::close</ref> &gt;</type>
        <definition>using eosio::token::close_action =  eosio::action_wrapper&lt;&quot;close&quot;_n, &amp;token::close&gt;</definition>
        <argsstring></argsstring>
        <name>close_action</name>
        <qualifiedname>eosio::token::close_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" line="123" column="10" bodyfile="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classeosio_1_1token_1aef73052a1688f86f1afb92879130e147" prot="private" static="no">
        <type>eosio::multi_index&lt; &quot;accounts&quot;_n, <ref refid="structeosio_1_1token_1_1account" kindref="compound">account</ref> &gt;</type>
        <definition>typedef eosio::multi_index&lt; &quot;accounts&quot;_n, account &gt; eosio::token::accounts</definition>
        <argsstring></argsstring>
        <name>accounts</name>
        <qualifiedname>eosio::token::accounts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" line="139" column="37" bodyfile="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosio_1_1token_1ab30a2faa46a28a61ddfbe4241c550193" prot="private" static="no">
        <type>eosio::multi_index&lt; &quot;stat&quot;_n, <ref refid="structeosio_1_1token_1_1currency__stats" kindref="compound">currency_stats</ref> &gt;</type>
        <definition>typedef eosio::multi_index&lt; &quot;stat&quot;_n, currency_stats &gt; eosio::token::stats</definition>
        <argsstring></argsstring>
        <name>stats</name>
        <qualifiedname>eosio::token::stats</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" line="140" column="37" bodyfile="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classeosio_1_1token_1a5277670549e2458dd4a4fab4c56a9599" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosio::token::create</definition>
        <argsstring>(const name &amp;issuer, const asset &amp;maximum_supply)</argsstring>
        <name>create</name>
        <qualifiedname>eosio::token::create</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>issuer</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>maximum_supply</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allows <computeroutput>issuer</computeroutput> account to create a token in supply of <computeroutput>maximum_supply</computeroutput>. If validation is successful a new entry in statstable for token symbol scope gets created.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>issuer</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account that creates the token, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maximum_supply</parametername>
</parameternamelist>
<parameterdescription>
<para>- the maximum supply set for the token created.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>Token symbol has to be valid, </para>
</simplesect>
<simplesect kind="pre"><para>Token symbol must not be already created, </para>
</simplesect>
<simplesect kind="pre"><para>maximum_supply has to be smaller than the maximum supply allowed by the system: 1^62 - 1. </para>
</simplesect>
<simplesect kind="pre"><para>Maximum supply must be positive; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" line="41" column="15" bodyfile="system/contracts/eosio.token/src/eosio.token.cpp" bodystart="10" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classeosio_1_1token_1a3a62d2a7493710b3e34fbdfd4fe81d59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosio::token::issue</definition>
        <argsstring>(const name &amp;to, const asset &amp;quantity, const string &amp;memo)</argsstring>
        <name>issue</name>
        <qualifiedname>eosio::token::issue</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>to</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>memo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This action issues to <computeroutput>to</computeroutput> account a <computeroutput>quantity</computeroutput> of tokens.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account to issue tokens to, it must be the same as the issuer, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>- the amount of tokens to be issued, @memo - the memo string that accompanies the token issue transaction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" line="51" column="15" bodyfile="system/contracts/eosio.token/src/eosio.token.cpp" bodystart="43" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classeosio_1_1token_1a4bf7770086ab81931c6c5a22265bae4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosio::token::retire</definition>
        <argsstring>(const asset &amp;quantity, const string &amp;memo)</argsstring>
        <name>retire</name>
        <qualifiedname>eosio::token::retire</qualifiedname>
        <param>
          <type>const asset &amp;</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>memo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The opposite for create action, if all validations succeed, it debits the statstable.supply amount.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>- the quantity of tokens to retire, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>memo</parametername>
</parameternamelist>
<parameterdescription>
<para>- the memo string to accompany the transaction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" line="61" column="15" bodyfile="system/contracts/eosio.token/src/eosio.token.cpp" bodystart="71" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classeosio_1_1token_1a8a9d08a9791d818797dc5f70ed8f826f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosio::token::transfer</definition>
        <argsstring>(const name &amp;from, const name &amp;to, const asset &amp;quantity, const string &amp;memo)</argsstring>
        <name>transfer</name>
        <qualifiedname>eosio::token::transfer</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>to</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>memo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allows <computeroutput>from</computeroutput> account to transfer to <computeroutput>to</computeroutput> account the <computeroutput>quantity</computeroutput> tokens. One account is debited and the other is credited with quantity tokens.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account to transfer from, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account to be transferred to, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>- the quantity of tokens to be transferred, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>memo</parametername>
</parameternamelist>
<parameterdescription>
<para>- the memo string to accompany the transaction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" line="73" column="15" bodyfile="system/contracts/eosio.token/src/eosio.token.cpp" bodystart="95" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classeosio_1_1token_1a4da303699332aacdc69f3ff582477141" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosio::token::open</definition>
        <argsstring>(const name &amp;owner, const symbol &amp;symbol, const name &amp;ram_payer)</argsstring>
        <name>open</name>
        <qualifiedname>eosio::token::open</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>const symbol &amp;</type>
          <declname>symbol</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>ram_payer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allows <computeroutput>ram_payer</computeroutput> to create an account <computeroutput>owner</computeroutput> with zero balance for token <computeroutput>symbol</computeroutput> at the expense of <computeroutput>ram_payer</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account to be created, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>- the token to be payed with by <computeroutput>ram_payer</computeroutput>, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ram_payer</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account that supports the cost of this action.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
More information can be read <ulink url="https://github.com/EOSIO/eosio.contracts/issues/62">here</ulink> and <ulink url="https://github.com/EOSIO/eosio.contracts/issues/61">here</ulink>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" line="89" column="15" bodyfile="system/contracts/eosio.token/src/eosio.token.cpp" bodystart="149" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classeosio_1_1token_1a88402f75888c4cfe6a3ef0391bd7ecbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosio::token::close</definition>
        <argsstring>(const name &amp;owner, const symbol &amp;symbol)</argsstring>
        <name>close</name>
        <qualifiedname>eosio::token::close</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>const symbol &amp;</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This action is the opposite for open, it closes the account <computeroutput>owner</computeroutput> for token <computeroutput>symbol</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>- the owner account to execute the close action for, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>- the symbol of the token to execute the close action for.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>The pair of owner plus symbol has to exist otherwise no action is executed, </para>
</simplesect>
<simplesect kind="pre"><para>If the pair of owner plus symbol exists, the balance has to be zero. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" line="102" column="15" bodyfile="system/contracts/eosio.token/src/eosio.token.cpp" bodystart="169" bodyend="177"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classeosio_1_1token_1af0ca80206f8f0131147b0bec367c62d3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>asset</type>
        <definition>static asset eosio::token::get_supply</definition>
        <argsstring>(const name &amp;token_contract_account, const symbol_code &amp;sym_code)</argsstring>
        <name>get_supply</name>
        <qualifiedname>eosio::token::get_supply</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>token_contract_account</declname>
        </param>
        <param>
          <type>const symbol_code &amp;</type>
          <declname>sym_code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" line="104" column="23" bodyfile="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" bodystart="104" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classeosio_1_1token_1a65b248b1427e4ae01523d6f59f6a71ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>asset</type>
        <definition>static asset eosio::token::get_balance</definition>
        <argsstring>(const name &amp;token_contract_account, const name &amp;owner, const symbol_code &amp;sym_code)</argsstring>
        <name>get_balance</name>
        <qualifiedname>eosio::token::get_balance</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>token_contract_account</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>const symbol_code &amp;</type>
          <declname>sym_code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" line="111" column="23" bodyfile="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" bodystart="111" bodyend="116"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classeosio_1_1token_1a28f25eaa6d0e7017f3d8760ad16960bc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosio::token::sub_balance</definition>
        <argsstring>(const name &amp;owner, const asset &amp;value)</argsstring>
        <name>sub_balance</name>
        <qualifiedname>eosio::token::sub_balance</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" line="142" column="15" bodyfile="system/contracts/eosio.token/src/eosio.token.cpp" bodystart="123" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classeosio_1_1token_1ad1eaa2275ba3d2da2663dd8c6595a598" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosio::token::add_balance</definition>
        <argsstring>(const name &amp;owner, const asset &amp;value, const name &amp;ram_payer)</argsstring>
        <name>add_balance</name>
        <qualifiedname>eosio::token::add_balance</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>ram_payer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" line="143" column="15" bodyfile="system/contracts/eosio.token/src/eosio.token.cpp" bodystart="134" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classeosio_1_1token_1a5b2edc4577c88d5bccecb7e44536ff04" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosio::token::is_can_transfer</definition>
        <argsstring>(const name &amp;from, const name &amp;to)</argsstring>
        <name>is_can_transfer</name>
        <qualifiedname>eosio::token::is_can_transfer</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" line="144" column="15" bodyfile="system/contracts/eosio.token/src/eosio.token.cpp" bodystart="30" bodyend="41"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <computeroutput><ref refid="classeosio_1_1token" kindref="compound">eosio.token</ref></computeroutput> sample system contract defines the structures and actions that allow users to create, issue, and manage tokens for EOSIO based blockchains. It demonstrates one way to implement a smart contract which allows for creation and management of tokens. It is possible for one to create a similar contract which suits different needs. However, it is recommended that if one only needs a token with the below listed actions, that one uses the <computeroutput><ref refid="classeosio_1_1token" kindref="compound">eosio.token</ref></computeroutput> contract instead of developing their own.</para>
<para>The <computeroutput><ref refid="classeosio_1_1token" kindref="compound">eosio.token</ref></computeroutput> contract class also implements two useful public static methods: <computeroutput>get_supply</computeroutput> and <computeroutput>get_balance</computeroutput>. The first allows one to check the total supply of a specified token, created by an account and the second allows one to check the balance of a token for a specified account (the token creator account has to be specified as well).</para>
<para>The <computeroutput><ref refid="classeosio_1_1token" kindref="compound">eosio.token</ref></computeroutput> contract manages the set of tokens, accounts and their corresponding balances, by using two internal multi-index structures: the <computeroutput>accounts</computeroutput> and <computeroutput>stats</computeroutput>. The <computeroutput>accounts</computeroutput> multi-index table holds, for each row, instances of <computeroutput>account</computeroutput> object and the <computeroutput>account</computeroutput> object holds information about the balance of one token. The <computeroutput>accounts</computeroutput> table is scoped to an EOSIO account, and it keeps the rows indexed based on the token&apos;s symbol. This means that when one queries the <computeroutput>accounts</computeroutput> multi-index table for an account name the result is all the tokens that account holds at the moment.</para>
<para>Similarly, the <computeroutput>stats</computeroutput> multi-index table, holds instances of <computeroutput><ref refid="structeosio_1_1token_1_1currency__stats" kindref="compound">currency_stats</ref></computeroutput> objects for each row, which contains information about current supply, maximum supply, and the creator account for a symbol token. The <computeroutput>stats</computeroutput> table is scoped to the token symbol. Therefore, when one queries the <computeroutput>stats</computeroutput> table for a token symbol the result is one single entry/row corresponding to the queried symbol token if it was previously created, or nothing, otherwise. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>contract</label>
      </node>
      <node id="1">
        <label>eosio::token</label>
        <link refid="classeosio_1_1token"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>contract</label>
      </node>
      <node id="1">
        <label>eosio::token</label>
        <link refid="classeosio_1_1token"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" line="25" column="4" bodyfile="system/contracts/eosio.token/include/eosio.token/eosio.token.hpp" bodystart="25" bodyend="146"/>
    <listofallmembers>
      <member refid="classeosio_1_1token_1aef73052a1688f86f1afb92879130e147" prot="private" virt="non-virtual"><scope>eosio::token</scope><name>accounts</name></member>
      <member refid="classeosio_1_1token_1ad1eaa2275ba3d2da2663dd8c6595a598" prot="private" virt="non-virtual"><scope>eosio::token</scope><name>add_balance</name></member>
      <member refid="classeosio_1_1token_1a88402f75888c4cfe6a3ef0391bd7ecbd" prot="public" virt="non-virtual"><scope>eosio::token</scope><name>close</name></member>
      <member refid="classeosio_1_1token_1a3e49a7888cde765dfe8f4966b3067036" prot="public" virt="non-virtual"><scope>eosio::token</scope><name>close_action</name></member>
      <member refid="classeosio_1_1token_1a5277670549e2458dd4a4fab4c56a9599" prot="public" virt="non-virtual"><scope>eosio::token</scope><name>create</name></member>
      <member refid="classeosio_1_1token_1ab6f5f8e8c550b3ae9492fcde3f04458a" prot="public" virt="non-virtual"><scope>eosio::token</scope><name>create_action</name></member>
      <member refid="classeosio_1_1token_1a65b248b1427e4ae01523d6f59f6a71ba" prot="public" virt="non-virtual"><scope>eosio::token</scope><name>get_balance</name></member>
      <member refid="classeosio_1_1token_1af0ca80206f8f0131147b0bec367c62d3" prot="public" virt="non-virtual"><scope>eosio::token</scope><name>get_supply</name></member>
      <member refid="classeosio_1_1token_1a5b2edc4577c88d5bccecb7e44536ff04" prot="private" virt="non-virtual"><scope>eosio::token</scope><name>is_can_transfer</name></member>
      <member refid="classeosio_1_1token_1a3a62d2a7493710b3e34fbdfd4fe81d59" prot="public" virt="non-virtual"><scope>eosio::token</scope><name>issue</name></member>
      <member refid="classeosio_1_1token_1a0a264928ea4b4c3056884cc95c9bea49" prot="public" virt="non-virtual"><scope>eosio::token</scope><name>issue_action</name></member>
      <member refid="classeosio_1_1token_1a4da303699332aacdc69f3ff582477141" prot="public" virt="non-virtual"><scope>eosio::token</scope><name>open</name></member>
      <member refid="classeosio_1_1token_1aee1aaa798e4d4a973b40a5a4b95d2a21" prot="public" virt="non-virtual"><scope>eosio::token</scope><name>open_action</name></member>
      <member refid="classeosio_1_1token_1a4bf7770086ab81931c6c5a22265bae4f" prot="public" virt="non-virtual"><scope>eosio::token</scope><name>retire</name></member>
      <member refid="classeosio_1_1token_1adebe02a32df2bf3ca7f27eec264b32c4" prot="public" virt="non-virtual"><scope>eosio::token</scope><name>retire_action</name></member>
      <member refid="classeosio_1_1token_1ab30a2faa46a28a61ddfbe4241c550193" prot="private" virt="non-virtual"><scope>eosio::token</scope><name>stats</name></member>
      <member refid="classeosio_1_1token_1a28f25eaa6d0e7017f3d8760ad16960bc" prot="private" virt="non-virtual"><scope>eosio::token</scope><name>sub_balance</name></member>
      <member refid="classeosio_1_1token_1a8a9d08a9791d818797dc5f70ed8f826f" prot="public" virt="non-virtual"><scope>eosio::token</scope><name>transfer</name></member>
      <member refid="classeosio_1_1token_1a48e0c826f1e416bf99439b0b7e637a29" prot="public" virt="non-virtual"><scope>eosio::token</scope><name>transfer_action</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
