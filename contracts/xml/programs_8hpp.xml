<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="ru">
  <compounddef id="programs_8hpp" kind="file" language="C++">
    <compoundname>programs.hpp</compoundname>
    <includedby refid="gateway_8hpp" local="yes">gateway/gateway.hpp</includedby>
    <includedby refid="marketplace_8hpp" local="yes">marketplace/marketplace.hpp</includedby>
    <includedby refid="soviet_8hpp" local="yes">soviet/soviet.hpp</includedby>
    <invincdepgraph>
      <node id="1">
        <label>common/programs.hpp</label>
        <link refid="programs_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>gateway/gateway.cpp</label>
        <link refid="gateway_8cpp"/>
      </node>
      <node id="2">
        <label>gateway/gateway.hpp</label>
        <link refid="gateway_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>marketplace/marketplace.cpp</label>
        <link refid="marketplace_2marketplace_8cpp"/>
      </node>
      <node id="4">
        <label>marketplace/marketplace.hpp</label>
        <link refid="marketplace_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>soviet/soviet.cpp</label>
        <link refid="soviet_2soviet_8cpp"/>
      </node>
      <node id="6">
        <label>soviet/soviet.hpp</label>
        <link refid="soviet_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structprogcomarket" prot="public">progcomarket</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="programs_8hpp_1aabd2e28e71dda300438a22bd74bf1b55" prot="public" static="no">
        <type>eosio::multi_index&lt;&quot;progcomarket&quot;_n, <ref refid="structprogcomarket" kindref="compound">progcomarket</ref> &gt;</type>
        <definition>typedef eosio::multi_index&lt;&quot;progcomarket&quot;_n, progcomarket&gt; progcomarket_index</definition>
        <argsstring></argsstring>
        <name>progcomarket_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Тип мультииндекса для таблицы целевых программ </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/programs.hpp" line="23" column="28" bodyfile="common/programs.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="programs_8hpp_1a23df1b7b83e383db3cce263bbcaa6a41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structprogcomarket" kindref="compound">progcomarket</ref></type>
        <definition>progcomarket get_program_or_fail</definition>
        <argsstring>(eosio::name coopname, uint64_t program_id)</argsstring>
        <name>get_program_or_fail</name>
        <param>
          <type>eosio::name</type>
          <declname>coopname</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>program_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="common/programs.hpp" line="27" column="14" bodyfile="common/programs.hpp" bodystart="27" bodyend="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="structprogcomarket" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">[[eosio::table,<sp/><ref refid="namespaceeosio" kindref="compound">eosio</ref>::contract(SOVIET)]]<sp/><ref refid="structprogcomarket" kindref="compound">progcomarket</ref><sp/>{</highlight></codeline>
<codeline lineno="5" refid="structprogcomarket_1a70a4d09612198f1e70dc392965a7adf8" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="structprogcomarket_1a70a4d09612198f1e70dc392965a7adf8" kindref="member">id</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6" refid="structprogcomarket_1af4d7b00b42ee363950cb8ba56290306b" refkind="member"><highlight class="normal"><sp/><sp/>eosio::name<sp/><ref refid="structprogcomarket_1af4d7b00b42ee363950cb8ba56290306b" kindref="member">coopname</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7" refid="structprogcomarket_1ac6b384389548125020788aa7dfc80c76" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structprogcomarket_1ac6b384389548125020788aa7dfc80c76" kindref="member">is_active</ref>;</highlight></codeline>
<codeline lineno="8" refid="structprogcomarket_1a496676734d8019a739f71170d4ea11d1" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structprogcomarket_1a496676734d8019a739f71170d4ea11d1" kindref="member">title</ref>;</highlight></codeline>
<codeline lineno="9" refid="structprogcomarket_1ae62aa2f18cc0ce05663bdc7d40bbead5" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structprogcomarket_1ae62aa2f18cc0ce05663bdc7d40bbead5" kindref="member">announce</ref>;</highlight></codeline>
<codeline lineno="10" refid="structprogcomarket_1a9b8ce6d41fb8c42fca2904e19c9f8f23" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structprogcomarket_1a9b8ce6d41fb8c42fca2904e19c9f8f23" kindref="member">description</ref>;</highlight></codeline>
<codeline lineno="11" refid="structprogcomarket_1a74aac7b95f2f1ab8a4d2b525d2c0b787" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structprogcomarket_1a74aac7b95f2f1ab8a4d2b525d2c0b787" kindref="member">preview</ref>;</highlight></codeline>
<codeline lineno="12" refid="structprogcomarket_1ac6006d3e095260e4762a0d1ac98cd2c8" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structprogcomarket_1ac6006d3e095260e4762a0d1ac98cd2c8" kindref="member">images</ref>;</highlight></codeline>
<codeline lineno="13" refid="structprogcomarket_1aa8f5800006f9d88312ee65d6b3c1073b" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="structprogcomarket_1aa8f5800006f9d88312ee65d6b3c1073b" kindref="member">meta</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="structprogcomarket_1a00dded91ff525dab50fdb41167ed26af" refkind="member"><highlight class="normal"><sp/><sp/>eosio::name<sp/><ref refid="structprogcomarket_1a00dded91ff525dab50fdb41167ed26af" kindref="member">calculation_type</ref>;<sp/></highlight></codeline>
<codeline lineno="16" refid="structprogcomarket_1a4a48607ebb37e1b46f617ffe204364e5" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="structprogcomarket_1a4a48607ebb37e1b46f617ffe204364e5" kindref="member">membership_percent_fee</ref>;<sp/></highlight></codeline>
<codeline lineno="17" refid="structprogcomarket_1a542812cefc717f045d930d19f85b13cc" refkind="member"><highlight class="normal"><sp/><sp/>eosio::asset<sp/><ref refid="structprogcomarket_1a542812cefc717f045d930d19f85b13cc" kindref="member">fixed_membership_contribution</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="19" refid="structprogcomarket_1aef6ff4eb497b4cefc3e543eac79ad9ca" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="structprogcomarket_1aef6ff4eb497b4cefc3e543eac79ad9ca" kindref="member">primary_key</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structprogcomarket_1a70a4d09612198f1e70dc392965a7adf8" kindref="member">id</ref>;<sp/>}<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal">};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="programs_8hpp_1aabd2e28e71dda300438a22bd74bf1b55" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>eosio::multi_index&lt;</highlight><highlight class="stringliteral">&quot;progcomarket&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structprogcomarket" kindref="compound">progcomarket</ref>&gt;<sp/><ref refid="programs_8hpp_1aabd2e28e71dda300438a22bd74bf1b55" kindref="member">progcomarket_index</ref>;<sp/></highlight></codeline>
<codeline lineno="27" refid="programs_8hpp_1a23df1b7b83e383db3cce263bbcaa6a41" refkind="member"><highlight class="normal"><ref refid="structprogcomarket" kindref="compound">progcomarket</ref><sp/><ref refid="programs_8hpp_1a23df1b7b83e383db3cce263bbcaa6a41" kindref="member">get_program_or_fail</ref>(eosio::name<sp/>coopname,<sp/>uint64_t<sp/>program_id)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="programs_8hpp_1aabd2e28e71dda300438a22bd74bf1b55" kindref="member">progcomarket_index</ref><sp/>programs(<ref refid="group__public__consts_1gaf3f1171b99c198fbeb3ab6a3d8c091d9" kindref="member">_soviet</ref>,<sp/>coopname.value);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>program<sp/>=<sp/>programs.find(program_id);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>eosio::check(program<sp/>!=<sp/>programs.end(),<sp/></highlight><highlight class="stringliteral">&quot;Программа<sp/>не<sp/>найдена&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*program;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="common/programs.hpp"/>
  </compounddef>
</doxygen>
