<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="ru">
  <compounddef id="classeosiosystem_1_1native" kind="class" language="C++" prot="public">
    <compoundname>eosiosystem::native</compoundname>
    <basecompoundref prot="public" virt="non-virtual">eosio::contract</basecompoundref>
    <derivedcompoundref refid="classeosiosystem_1_1system__contract" prot="public" virt="non-virtual">eosiosystem::system_contract</derivedcompoundref>
    <includes refid="native_8hpp" local="no">native.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classeosiosystem_1_1native_1aae644336375e87bb08912d4f550c8aeb" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;newaccount&quot;_n, &amp;<ref refid="classeosiosystem_1_1native_1ab81dda3be834b68780bbae5c2e8368e0" kindref="member">native::newaccount</ref> &gt;</type>
        <definition>using eosiosystem::native::newaccount_action =  eosio::action_wrapper&lt;&quot;newaccount&quot;_n, &amp;native::newaccount&gt;</definition>
        <argsstring></argsstring>
        <name>newaccount_action</name>
        <qualifiedname>eosiosystem::native::newaccount_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/native.hpp" line="298" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/native.hpp" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1native_1a10fb5510d34718e92de6b0491d1eaf53" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;updateauth&quot;_n, &amp;<ref refid="classeosiosystem_1_1native_1a2bbeca58b24029a5ab0fc90832dde56b" kindref="member">native::updateauth</ref> &gt;</type>
        <definition>using eosiosystem::native::updateauth_action =  eosio::action_wrapper&lt;&quot;updateauth&quot;_n, &amp;native::updateauth&gt;</definition>
        <argsstring></argsstring>
        <name>updateauth_action</name>
        <qualifiedname>eosiosystem::native::updateauth_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/native.hpp" line="299" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/native.hpp" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1native_1ab75271688a763dacb3e2fa6cddae04e4" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;deleteauth&quot;_n, &amp;<ref refid="classeosiosystem_1_1native_1a49cc638f16ddc898952a8f032ffd6c2c" kindref="member">native::deleteauth</ref> &gt;</type>
        <definition>using eosiosystem::native::deleteauth_action =  eosio::action_wrapper&lt;&quot;deleteauth&quot;_n, &amp;native::deleteauth&gt;</definition>
        <argsstring></argsstring>
        <name>deleteauth_action</name>
        <qualifiedname>eosiosystem::native::deleteauth_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/native.hpp" line="300" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/native.hpp" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1native_1a9003ba3e7e55f294f3d028f02873d5f9" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;linkauth&quot;_n, &amp;<ref refid="classeosiosystem_1_1native_1a35b93b9e7ae3eaa60619189c7694499e" kindref="member">native::linkauth</ref> &gt;</type>
        <definition>using eosiosystem::native::linkauth_action =  eosio::action_wrapper&lt;&quot;linkauth&quot;_n, &amp;native::linkauth&gt;</definition>
        <argsstring></argsstring>
        <name>linkauth_action</name>
        <qualifiedname>eosiosystem::native::linkauth_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/native.hpp" line="301" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/native.hpp" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1native_1ab85b9770a900421b081ab8f339c5c71f" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;unlinkauth&quot;_n, &amp;<ref refid="classeosiosystem_1_1native_1aa1e2097e289d4da3acc2876cc24e8897" kindref="member">native::unlinkauth</ref> &gt;</type>
        <definition>using eosiosystem::native::unlinkauth_action =  eosio::action_wrapper&lt;&quot;unlinkauth&quot;_n, &amp;native::unlinkauth&gt;</definition>
        <argsstring></argsstring>
        <name>unlinkauth_action</name>
        <qualifiedname>eosiosystem::native::unlinkauth_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/native.hpp" line="302" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/native.hpp" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1native_1aa83db95970cb619e8d1715e5d83bbb52" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;canceldelay&quot;_n, &amp;<ref refid="classeosiosystem_1_1native_1ac2da52c0f6c1698bbe76a84f23917feb" kindref="member">native::canceldelay</ref> &gt;</type>
        <definition>using eosiosystem::native::canceldelay_action =  eosio::action_wrapper&lt;&quot;canceldelay&quot;_n, &amp;native::canceldelay&gt;</definition>
        <argsstring></argsstring>
        <name>canceldelay_action</name>
        <qualifiedname>eosiosystem::native::canceldelay_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/native.hpp" line="303" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/native.hpp" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1native_1a5db33d8b5c93fb9b60f6216d62077802" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;setabi&quot;_n, &amp;<ref refid="classeosiosystem_1_1native_1aff24a543859381c1670183f5b4d343aa" kindref="member">native::setabi</ref> &gt;</type>
        <definition>using eosiosystem::native::setabi_action =  eosio::action_wrapper&lt;&quot;setabi&quot;_n, &amp;native::setabi&gt;</definition>
        <argsstring></argsstring>
        <name>setabi_action</name>
        <qualifiedname>eosiosystem::native::setabi_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/native.hpp" line="304" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/native.hpp" bodystart="304" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classeosiosystem_1_1native_1ab81dda3be834b68780bbae5c2e8368e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::native::newaccount</definition>
        <argsstring>(const name &amp;creator, const name &amp;name, ignore&lt; authority &gt; owner, ignore&lt; authority &gt; active)</argsstring>
        <name>newaccount</name>
        <qualifiedname>eosiosystem::native::newaccount</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>creator</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>name</declname>
          <defname>new_account_name</defname>
        </param>
        <param>
          <type>ignore&lt; <ref refid="structeosiosystem_1_1authority" kindref="compound">authority</ref> &gt;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>ignore&lt; <ref refid="structeosiosystem_1_1authority" kindref="compound">authority</ref> &gt;</type>
          <declname>active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>These actions map one-on-one with the ones defined in core layer of EOSIO, that&apos;s where their implementation actually is done. They are present here only so they can show up in the abi file and thus user can send them to this contract, but they have no specific implementation at this contract level, they will execute the implementation at the core layer and nothing else. New account action is called after a new account is created. This code enforces resource-limits rules for new accounts as well as new account naming conventions.</para>
<para>Called after a new account is created. This code enforces resource-limits rules for new accounts as well as new account naming conventions.</para>
<para>Account names containing &apos;.&apos; symbols must have a suffix equal to the name of the creator. This allows users who buy a premium name (shorter than 12 characters with no dots) to be the only ones who can create accounts with the creator&apos;s name as a suffix. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/native.hpp" line="146" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="412" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1native_1a2bbeca58b24029a5ab0fc90832dde56b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::native::updateauth</definition>
        <argsstring>(name account, name permission, name parent, authority auth, binary_extension&lt; name &gt; authorized_by)</argsstring>
        <name>updateauth</name>
        <qualifiedname>eosiosystem::native::updateauth</qualifiedname>
        <param>
          <type>name</type>
          <declname>account</declname>
        </param>
        <param>
          <type>name</type>
          <declname>permission</declname>
        </param>
        <param>
          <type>name</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="structeosiosystem_1_1authority" kindref="compound">authority</ref></type>
          <declname>auth</declname>
        </param>
        <param>
          <type>binary_extension&lt; name &gt;</type>
          <declname>authorized_by</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update authorization action updates permission for an account.</para>
<para>This contract enforces additional rules:</para>
<para><orderedlist>
<listitem><para>If authorized_by is present and not &quot;&quot;, then the contract does a require_auth2(account, authorized_by).</para>
</listitem><listitem><para>If the account has opted into limitauthchg, then authorized_by must be present and not &quot;&quot;.</para>
</listitem><listitem><para>If the account has opted into limitauthchg, and allow_perms is not empty, then authorized_by must be in the array.</para>
</listitem><listitem><para>If the account has opted into limitauthchg, and disallow_perms is not empty, then authorized_by must not be in the array.</para>
</listitem></orderedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account for which the permission is updated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>permission</parametername>
</parameternamelist>
<parameterdescription>
<para>- the permission name which is updated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>- the parent of the permission which is updated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>auth</parametername>
</parameternamelist>
<parameterdescription>
<para>- the json describing the permission authorization </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>authorized_by</parametername>
</parameternamelist>
<parameterdescription>
<para>- the permission which is authorizing this change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/native.hpp" line="172" column="15" bodyfile="system/contracts/eosio.system/include/eosio.system/native.hpp" bodystart="172" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1native_1a49cc638f16ddc898952a8f032ffd6c2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::native::deleteauth</definition>
        <argsstring>(name account, name permission, binary_extension&lt; name &gt; authorized_by)</argsstring>
        <name>deleteauth</name>
        <qualifiedname>eosiosystem::native::deleteauth</qualifiedname>
        <param>
          <type>name</type>
          <declname>account</declname>
        </param>
        <param>
          <type>name</type>
          <declname>permission</declname>
        </param>
        <param>
          <type>binary_extension&lt; name &gt;</type>
          <declname>authorized_by</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete authorization action deletes the authorization for an account&apos;s permission.</para>
<para>This contract enforces additional rules:</para>
<para><orderedlist>
<listitem><para>If authorized_by is present and not &quot;&quot;, then the contract does a require_auth2(account, authorized_by).</para>
</listitem><listitem><para>If the account has opted into limitauthchg, then authorized_by must be present and not &quot;&quot;.</para>
</listitem><listitem><para>If the account has opted into limitauthchg, and allow_perms is not empty, then authorized_by must be in the array.</para>
</listitem><listitem><para>If the account has opted into limitauthchg, and disallow_perms is not empty, then authorized_by must not be in the array.</para>
</listitem></orderedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account for which the permission authorization is deleted, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>permission</parametername>
</parameternamelist>
<parameterdescription>
<para>- the permission name been deleted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>authorized_by</parametername>
</parameternamelist>
<parameterdescription>
<para>- the permission which is authorizing this change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/native.hpp" line="199" column="15" bodyfile="system/contracts/eosio.system/include/eosio.system/native.hpp" bodystart="199" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1native_1a35b93b9e7ae3eaa60619189c7694499e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::native::linkauth</definition>
        <argsstring>(name account, name code, name type, name requirement, binary_extension&lt; name &gt; authorized_by)</argsstring>
        <name>linkauth</name>
        <qualifiedname>eosiosystem::native::linkauth</qualifiedname>
        <param>
          <type>name</type>
          <declname>account</declname>
        </param>
        <param>
          <type>name</type>
          <declname>code</declname>
        </param>
        <param>
          <type>name</type>
          <declname>type</declname>
        </param>
        <param>
          <type>name</type>
          <declname>requirement</declname>
        </param>
        <param>
          <type>binary_extension&lt; name &gt;</type>
          <declname>authorized_by</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Link authorization action assigns a specific action from a contract to a permission you have created. Five system actions can not be linked <computeroutput>updateauth</computeroutput>, <computeroutput>deleteauth</computeroutput>, <computeroutput>linkauth</computeroutput>, <computeroutput>unlinkauth</computeroutput>, and <computeroutput>canceldelay</computeroutput>. This is useful because when doing authorization checks, the EOSIO based blockchain starts with the action needed to be authorized (and the contract belonging to), and looks up which permission is needed to pass authorization validation. If a link is set, that permission is used for authorization validation otherwise then active is the default, with the exception of <computeroutput>eosio.any</computeroutput>. <computeroutput>eosio.any</computeroutput> is an implicit permission which exists on every account; you can link actions to <computeroutput>eosio.any</computeroutput> and that will make it so linked actions are accessible to any permissions defined for the account.</para>
<para>This contract enforces additional rules:</para>
<para><orderedlist>
<listitem><para>If authorized_by is present and not &quot;&quot;, then the contract does a require_auth2(account, authorized_by).</para>
</listitem><listitem><para>If the account has opted into limitauthchg, then authorized_by must be present and not &quot;&quot;.</para>
</listitem><listitem><para>If the account has opted into limitauthchg, and allow_perms is not empty, then authorized_by must be in the array.</para>
</listitem><listitem><para>If the account has opted into limitauthchg, and disallow_perms is not empty, then authorized_by must not be in the array.</para>
</listitem></orderedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account</parametername>
</parameternamelist>
<parameterdescription>
<para>- the permission&apos;s owner to be linked and the payer of the RAM needed to store this link, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>- the owner of the action to be linked, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>- the action to be linked, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>requirement</parametername>
</parameternamelist>
<parameterdescription>
<para>- the permission to be linked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>authorized_by</parametername>
</parameternamelist>
<parameterdescription>
<para>- the permission which is authorizing this change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/native.hpp" line="233" column="15" bodyfile="system/contracts/eosio.system/include/eosio.system/native.hpp" bodystart="233" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1native_1aa1e2097e289d4da3acc2876cc24e8897" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::native::unlinkauth</definition>
        <argsstring>(name account, name code, name type, binary_extension&lt; name &gt; authorized_by)</argsstring>
        <name>unlinkauth</name>
        <qualifiedname>eosiosystem::native::unlinkauth</qualifiedname>
        <param>
          <type>name</type>
          <declname>account</declname>
        </param>
        <param>
          <type>name</type>
          <declname>code</declname>
        </param>
        <param>
          <type>name</type>
          <declname>type</declname>
        </param>
        <param>
          <type>binary_extension&lt; name &gt;</type>
          <declname>authorized_by</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unlink authorization action it&apos;s doing the reverse of linkauth action, by unlinking the given action.</para>
<para>This contract enforces additional rules:</para>
<para><orderedlist>
<listitem><para>If authorized_by is present and not &quot;&quot;, then the contract does a require_auth2(account, authorized_by).</para>
</listitem><listitem><para>If the account has opted into limitauthchg, then authorized_by must be present and not &quot;&quot;.</para>
</listitem><listitem><para>If the account has opted into limitauthchg, and allow_perms is not empty, then authorized_by must be in the array.</para>
</listitem><listitem><para>If the account has opted into limitauthchg, and disallow_perms is not empty, then authorized_by must not be in the array.</para>
</listitem></orderedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account</parametername>
</parameternamelist>
<parameterdescription>
<para>- the owner of the permission to be unlinked and the receiver of the freed RAM, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>- the owner of the action to be unlinked, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>- the action to be unlinked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>authorized_by</parametername>
</parameternamelist>
<parameterdescription>
<para>- the permission which is authorizing this change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/native.hpp" line="261" column="15" bodyfile="system/contracts/eosio.system/include/eosio.system/native.hpp" bodystart="261" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1native_1ac2da52c0f6c1698bbe76a84f23917feb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::native::canceldelay</definition>
        <argsstring>(ignore&lt; permission_level &gt; canceling_auth, ignore&lt; checksum256 &gt; trx_id)</argsstring>
        <name>canceldelay</name>
        <qualifiedname>eosiosystem::native::canceldelay</qualifiedname>
        <param>
          <type>ignore&lt; permission_level &gt;</type>
          <declname>canceling_auth</declname>
        </param>
        <param>
          <type>ignore&lt; checksum256 &gt;</type>
          <declname>trx_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cancel delay action cancels a deferred transaction.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>canceling_auth</parametername>
</parameternamelist>
<parameterdescription>
<para>- the permission that authorizes this action, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trx_id</parametername>
</parameternamelist>
<parameterdescription>
<para>- the deferred transaction id to be cancelled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/native.hpp" line="275" column="15" bodyfile="system/contracts/eosio.system/include/eosio.system/native.hpp" bodystart="275" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1native_1a379fe8f4ca5a42a6011dbf9c8f30b6ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::native::onerror</definition>
        <argsstring>(ignore&lt; uint128_t &gt; sender_id, ignore&lt; std::vector&lt; char &gt; &gt; sent_trx)</argsstring>
        <name>onerror</name>
        <qualifiedname>eosiosystem::native::onerror</qualifiedname>
        <param>
          <type>ignore&lt; uint128_t &gt;</type>
          <declname>sender_id</declname>
        </param>
        <param>
          <type>ignore&lt; std::vector&lt; char &gt; &gt;</type>
          <declname>sent_trx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>On error action, notification of this action is delivered to the sender of a deferred transaction when an objective error occurs while executing the deferred transaction. This action is not meant to be called directly.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sender_id</parametername>
</parameternamelist>
<parameterdescription>
<para>- the id for the deferred transaction chosen by the sender, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sent_trx</parametername>
</parameternamelist>
<parameterdescription>
<para>- the deferred transaction that failed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/native.hpp" line="286" column="15" bodyfile="system/contracts/eosio.system/src/native.cpp" bodystart="7" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1native_1aff24a543859381c1670183f5b4d343aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::native::setabi</definition>
        <argsstring>(const name &amp;account, const std::vector&lt; char &gt; &amp;abi, const binary_extension&lt; std::string &gt; &amp;memo)</argsstring>
        <name>setabi</name>
        <qualifiedname>eosiosystem::native::setabi</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>account</declname>
        </param>
        <param>
          <type>const std::vector&lt; char &gt; &amp;</type>
          <declname>abi</declname>
        </param>
        <param>
          <type>const binary_extension&lt; std::string &gt; &amp;</type>
          <declname>memo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set abi action sets the contract abi for an account.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account for which to set the contract abi. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>abi</parametername>
</parameternamelist>
<parameterdescription>
<para>- the abi content to be set, in the form of a blob binary. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>memo</parametername>
</parameternamelist>
<parameterdescription>
<para>- may be omitted </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/native.hpp" line="296" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="479" bodyend="493"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The EOSIO core <computeroutput>native</computeroutput> contract that governs authorization and contracts&apos; abi. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>eosio::contract</label>
      </node>
      <node id="1">
        <label>eosiosystem::native</label>
        <link refid="classeosiosystem_1_1native"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>eosiosystem::system_contract</label>
        <link refid="classeosiosystem_1_1system__contract"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>eosio::contract</label>
      </node>
      <node id="1">
        <label>eosiosystem::native</label>
        <link refid="classeosiosystem_1_1native"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="system/contracts/eosio.system/include/eosio.system/native.hpp" line="128" column="4" bodyfile="system/contracts/eosio.system/include/eosio.system/native.hpp" bodystart="128" bodyend="305"/>
    <listofallmembers>
      <member refid="classeosiosystem_1_1native_1ac2da52c0f6c1698bbe76a84f23917feb" prot="public" virt="non-virtual"><scope>eosiosystem::native</scope><name>canceldelay</name></member>
      <member refid="classeosiosystem_1_1native_1aa83db95970cb619e8d1715e5d83bbb52" prot="public" virt="non-virtual"><scope>eosiosystem::native</scope><name>canceldelay_action</name></member>
      <member refid="classeosiosystem_1_1native_1a49cc638f16ddc898952a8f032ffd6c2c" prot="public" virt="non-virtual"><scope>eosiosystem::native</scope><name>deleteauth</name></member>
      <member refid="classeosiosystem_1_1native_1ab75271688a763dacb3e2fa6cddae04e4" prot="public" virt="non-virtual"><scope>eosiosystem::native</scope><name>deleteauth_action</name></member>
      <member refid="classeosiosystem_1_1native_1a35b93b9e7ae3eaa60619189c7694499e" prot="public" virt="non-virtual"><scope>eosiosystem::native</scope><name>linkauth</name></member>
      <member refid="classeosiosystem_1_1native_1a9003ba3e7e55f294f3d028f02873d5f9" prot="public" virt="non-virtual"><scope>eosiosystem::native</scope><name>linkauth_action</name></member>
      <member refid="classeosiosystem_1_1native_1ab81dda3be834b68780bbae5c2e8368e0" prot="public" virt="non-virtual"><scope>eosiosystem::native</scope><name>newaccount</name></member>
      <member refid="classeosiosystem_1_1native_1aae644336375e87bb08912d4f550c8aeb" prot="public" virt="non-virtual"><scope>eosiosystem::native</scope><name>newaccount_action</name></member>
      <member refid="classeosiosystem_1_1native_1a379fe8f4ca5a42a6011dbf9c8f30b6ff" prot="public" virt="non-virtual"><scope>eosiosystem::native</scope><name>onerror</name></member>
      <member refid="classeosiosystem_1_1native_1aff24a543859381c1670183f5b4d343aa" prot="public" virt="non-virtual"><scope>eosiosystem::native</scope><name>setabi</name></member>
      <member refid="classeosiosystem_1_1native_1a5db33d8b5c93fb9b60f6216d62077802" prot="public" virt="non-virtual"><scope>eosiosystem::native</scope><name>setabi_action</name></member>
      <member refid="classeosiosystem_1_1native_1aa1e2097e289d4da3acc2876cc24e8897" prot="public" virt="non-virtual"><scope>eosiosystem::native</scope><name>unlinkauth</name></member>
      <member refid="classeosiosystem_1_1native_1ab85b9770a900421b081ab8f339c5c71f" prot="public" virt="non-virtual"><scope>eosiosystem::native</scope><name>unlinkauth_action</name></member>
      <member refid="classeosiosystem_1_1native_1a2bbeca58b24029a5ab0fc90832dde56b" prot="public" virt="non-virtual"><scope>eosiosystem::native</scope><name>updateauth</name></member>
      <member refid="classeosiosystem_1_1native_1a10fb5510d34718e92de6b0491d1eaf53" prot="public" virt="non-virtual"><scope>eosiosystem::native</scope><name>updateauth_action</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
